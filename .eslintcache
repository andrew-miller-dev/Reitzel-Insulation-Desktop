[{"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\index.js":"1","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\App.js":"2","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\store.js":"3","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\reducers\\quoteOneReducer.js":"4","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\admin\\index.js":"5","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\login\\index.js":"6","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\util\\storage.js":"7","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\index.js":"8","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\main\\index.js":"9","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\searchbar\\index.js":"10","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\leftnav\\index.js":"11","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\head\\index.js":"12","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\base.js":"13","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\config\\leftnav.js":"14","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\index.js":"15","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\index.js":"16","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\linkbutton\\index.js":"17","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\avatar\\index.js":"18","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\index.js":"19","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newcustomer\\index.js":"20","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customerInfo\\index.js":"21","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\roles\\index.js":"22","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newestimate\\index.js":"23","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\addressInfo\\index.js":"24","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\users\\index.js":"25","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\invoices\\index.js":"26","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customers\\index.js":"27","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\neworder.js":"28","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\addresses.js":"29","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\calendar.js":"30","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\customer.js":"31","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\Template.js":"32","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuoteOne.js":"33","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuotePrint.js":"34","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\FormOne.js":"35","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteData.js":"36","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Button.js":"37","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\CustomSelect.js":"38","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Modal.js":"39","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\ToggleSwitch.js":"40","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js":"41","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js":"42","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tabs.js":"43","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js":"44","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\hooks\\input-hook.js":"45","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js":"46","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js":"47","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js":"48","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js":"49","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tab.js":"50","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js":"51","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js":"52","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js":"53","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\footer\\index.js":"54","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\headforquote\\index.js":"55","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quotes.js":"56","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteCreation.js":"57","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\confirmation.js":"58","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\updateConfirm.js":"59","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\quote_template.js":"60","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteEdit.js":"61","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quoteEditAPI.js":"62","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteList.js":"63","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\orderList.js":"64","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\SalesmanTemplate.js":"65","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Legend.js":"66","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesSnapshot.js":"67","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\newOrder.js":"68","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\orders.js":"69","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\index.js":"70","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\App.js":"71","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\redux\\store.js":"72","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\redux\\reducers\\quoteOneReducer.js":"73","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\admin\\index.js":"74","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\login\\index.js":"75","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\index.js":"76","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\util\\storage.js":"77","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\main\\index.js":"78","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\leftnav\\index.js":"79","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\head\\index.js":"80","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\searchbar\\index.js":"81","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\base.js":"82","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteEdit.js":"83","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\config\\leftnav.js":"84","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\quote_template.js":"85","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\index.js":"86","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\index.js":"87","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\index.js":"88","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\users\\index.js":"89","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\roles\\index.js":"90","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\invoices\\index.js":"91","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\customers\\index.js":"92","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\addressInfo\\index.js":"93","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\customerInfo\\index.js":"94","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\newcustomer\\index.js":"95","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\avatar\\index.js":"96","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\newestimate\\index.js":"97","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\linkbutton\\index.js":"98","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\quotes.js":"99","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\quoteEditAPI.js":"100","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\hooks\\input-hook.js":"101","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\Button.js":"102","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteList.js":"103","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\SalesmanTemplate.js":"104","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\Template.js":"105","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\confirmation.js":"106","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\calendar.js":"107","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\neworder.js":"108","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\customer.js":"109","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\addresses.js":"110","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\newOrder.js":"111","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\orderList.js":"112","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesSnapshot.js":"113","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\QuoteOne.js":"114","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\FormOne.js":"115","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\QuotePrint.js":"116","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js":"117","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js":"118","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Legend.js":"119","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\Tabs.js":"120","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js":"121","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\CustomSelect.js":"122","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteData.js":"123","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\ToggleSwitch.js":"124","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\Modal.js":"125","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js":"126","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js":"127","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\orders.js":"128","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\updateConfirm.js":"129","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js":"130","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js":"131","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js":"132","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\Tab.js":"133","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js":"134","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js":"135","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\footer\\index.js":"136","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\headforquote\\index.js":"137"},{"size":397,"mtime":1618250875493,"results":"138","hashOfConfig":"139"},{"size":394,"mtime":1617829601171,"results":"140","hashOfConfig":"139"},{"size":278,"mtime":1618250875498,"results":"141","hashOfConfig":"139"},{"size":814,"mtime":1618250875497,"results":"142","hashOfConfig":"139"},{"size":1561,"mtime":1617829601222,"results":"143","hashOfConfig":"139"},{"size":2075,"mtime":1620934739238,"results":"144","hashOfConfig":"139"},{"size":287,"mtime":1617829601340,"results":"145","hashOfConfig":"139"},{"size":3372,"mtime":1626280026706,"results":"146","hashOfConfig":"139"},{"size":1713,"mtime":1622492376672,"results":"147","hashOfConfig":"139"},{"size":1248,"mtime":1618256119859,"results":"148","hashOfConfig":"139"},{"size":1478,"mtime":1617829601224,"results":"149","hashOfConfig":"139"},{"size":2165,"mtime":1617829601224,"results":"150","hashOfConfig":"139"},{"size":1554,"mtime":1626275556673,"results":"151","hashOfConfig":"139"},{"size":1213,"mtime":1617829601253,"results":"152","hashOfConfig":"139"},{"size":375,"mtime":1624463917829,"results":"153","hashOfConfig":"139"},{"size":2419,"mtime":1623261143846,"results":"154","hashOfConfig":"139"},{"size":165,"mtime":1617829601289,"results":"155","hashOfConfig":"139"},{"size":1670,"mtime":1617829601223,"results":"156","hashOfConfig":"139"},{"size":1040,"mtime":1624905880323,"results":"157","hashOfConfig":"139"},{"size":4096,"mtime":1618507875542,"results":"158","hashOfConfig":"139"},{"size":14956,"mtime":1625526274450,"results":"159","hashOfConfig":"139"},{"size":4397,"mtime":1617831257918,"results":"160","hashOfConfig":"139"},{"size":10003,"mtime":1624557876664,"results":"161","hashOfConfig":"139"},{"size":4387,"mtime":1623342676927,"results":"162","hashOfConfig":"139"},{"size":9615,"mtime":1618436733813,"results":"163","hashOfConfig":"139"},{"size":102,"mtime":1617829601288,"results":"164","hashOfConfig":"139"},{"size":2411,"mtime":1623865380124,"results":"165","hashOfConfig":"139"},{"size":2375,"mtime":1626276268973,"results":"166","hashOfConfig":"139"},{"size":1358,"mtime":1626275550221,"results":"167","hashOfConfig":"139"},{"size":3380,"mtime":1626279984612,"results":"168","hashOfConfig":"139"},{"size":4513,"mtime":1626279997610,"results":"169","hashOfConfig":"139"},{"size":870,"mtime":1617829601283,"results":"170","hashOfConfig":"139"},{"size":21454,"mtime":1625078475788,"results":"171","hashOfConfig":"139"},{"size":5909,"mtime":1622049197782,"results":"172","hashOfConfig":"139"},{"size":1352,"mtime":1618414479289,"results":"173","hashOfConfig":"139"},{"size":2846,"mtime":1626117489585,"results":"174","hashOfConfig":"139"},{"size":360,"mtime":1618250875491,"results":"175","hashOfConfig":"139"},{"size":708,"mtime":1618250875492,"results":"176","hashOfConfig":"139"},{"size":477,"mtime":1617829601232,"results":"177","hashOfConfig":"139"},{"size":1252,"mtime":1617829601233,"results":"178","hashOfConfig":"139"},{"size":6492,"mtime":1621881674599,"results":"179","hashOfConfig":"139"},{"size":1114,"mtime":1617829601240,"results":"180","hashOfConfig":"139"},{"size":1461,"mtime":1617829601252,"results":"181","hashOfConfig":"139"},{"size":1109,"mtime":1617829601240,"results":"182","hashOfConfig":"139"},{"size":428,"mtime":1618250875493,"results":"183","hashOfConfig":"139"},{"size":308,"mtime":1618510090768,"results":"184","hashOfConfig":"139"},{"size":845,"mtime":1617829601251,"results":"185","hashOfConfig":"139"},{"size":606,"mtime":1617829601241,"results":"186","hashOfConfig":"139"},{"size":616,"mtime":1617829601240,"results":"187","hashOfConfig":"139"},{"size":843,"mtime":1617829601252,"results":"188","hashOfConfig":"139"},{"size":1404,"mtime":1617829601241,"results":"189","hashOfConfig":"139"},{"size":1410,"mtime":1617829601240,"results":"190","hashOfConfig":"139"},{"size":1805,"mtime":1620666653078,"results":"191","hashOfConfig":"139"},{"size":1047,"mtime":1620667134541,"results":"192","hashOfConfig":"139"},{"size":304,"mtime":1622049773116,"results":"193","hashOfConfig":"139"},{"size":3472,"mtime":1626279923377,"results":"194","hashOfConfig":"139"},{"size":10001,"mtime":1621271695132,"results":"195","hashOfConfig":"139"},{"size":1787,"mtime":1622058687709,"results":"196","hashOfConfig":"139"},{"size":1657,"mtime":1622058996950,"results":"197","hashOfConfig":"139"},{"size":2876,"mtime":1622049732908,"results":"198","hashOfConfig":"139"},{"size":20157,"mtime":1625078391717,"results":"199","hashOfConfig":"139"},{"size":5766,"mtime":1626276294235,"results":"200","hashOfConfig":"139"},{"size":7713,"mtime":1624469863300,"results":"201","hashOfConfig":"139"},{"size":51,"mtime":1623692537425,"results":"202","hashOfConfig":"139"},{"size":4410,"mtime":1624904961765,"results":"203","hashOfConfig":"139"},{"size":1624,"mtime":1624904943827,"results":"204","hashOfConfig":"139"},{"size":5446,"mtime":1624558861426,"results":"205","hashOfConfig":"139"},{"size":6322,"mtime":1625081588218,"results":"206","hashOfConfig":"139"},{"size":1164,"mtime":1626280031035,"results":"207","hashOfConfig":"139"},{"size":397,"mtime":1626366420947,"results":"208","hashOfConfig":"209"},{"size":394,"mtime":1626366420911,"results":"210","hashOfConfig":"209"},{"size":278,"mtime":1626366420965,"results":"211","hashOfConfig":"209"},{"size":814,"mtime":1626366420965,"results":"212","hashOfConfig":"209"},{"size":1561,"mtime":1626366420931,"results":"213","hashOfConfig":"209"},{"size":2075,"mtime":1626366420956,"results":"214","hashOfConfig":"209"},{"size":3372,"mtime":1626366420918,"results":"215","hashOfConfig":"209"},{"size":287,"mtime":1626366420966,"results":"216","hashOfConfig":"209"},{"size":1713,"mtime":1626366420934,"results":"217","hashOfConfig":"209"},{"size":1478,"mtime":1626366420934,"results":"218","hashOfConfig":"209"},{"size":2165,"mtime":1626366420933,"results":"219","hashOfConfig":"209"},{"size":1248,"mtime":1626366420939,"results":"220","hashOfConfig":"209"},{"size":1554,"mtime":1626366420918,"results":"221","hashOfConfig":"209"},{"size":20157,"mtime":1626366420961,"results":"222","hashOfConfig":"209"},{"size":1213,"mtime":1626366420946,"results":"223","hashOfConfig":"209"},{"size":2876,"mtime":1626366420940,"results":"224","hashOfConfig":"209"},{"size":2419,"mtime":1626366420960,"results":"225","hashOfConfig":"209"},{"size":375,"mtime":1626366420953,"results":"226","hashOfConfig":"209"},{"size":1040,"mtime":1626366420958,"results":"227","hashOfConfig":"209"},{"size":9615,"mtime":1626366420964,"results":"228","hashOfConfig":"209"},{"size":4397,"mtime":1626366420963,"results":"229","hashOfConfig":"209"},{"size":102,"mtime":1626366420954,"results":"230","hashOfConfig":"209"},{"size":2411,"mtime":1626366420950,"results":"231","hashOfConfig":"209"},{"size":4387,"mtime":1626366420948,"results":"232","hashOfConfig":"209"},{"size":14956,"mtime":1626366420949,"results":"233","hashOfConfig":"209"},{"size":4096,"mtime":1626366420956,"results":"234","hashOfConfig":"209"},{"size":1670,"mtime":1626366420932,"results":"235","hashOfConfig":"209"},{"size":10003,"mtime":1626366420957,"results":"236","hashOfConfig":"209"},{"size":165,"mtime":1626366420955,"results":"237","hashOfConfig":"209"},{"size":3472,"mtime":1626366420920,"results":"238","hashOfConfig":"209"},{"size":5766,"mtime":1626366420920,"results":"239","hashOfConfig":"209"},{"size":428,"mtime":1626366420947,"results":"240","hashOfConfig":"209"},{"size":360,"mtime":1626366420935,"results":"241","hashOfConfig":"209"},{"size":7713,"mtime":1626366420962,"results":"242","hashOfConfig":"209"},{"size":4410,"mtime":1626366420952,"results":"243","hashOfConfig":"209"},{"size":870,"mtime":1626366420953,"results":"244","hashOfConfig":"209"},{"size":1787,"mtime":1626366420912,"results":"245","hashOfConfig":"209"},{"size":3380,"mtime":1626366420918,"results":"246","hashOfConfig":"209"},{"size":2375,"mtime":1626366420919,"results":"247","hashOfConfig":"209"},{"size":4513,"mtime":1626366420918,"results":"248","hashOfConfig":"209"},{"size":1358,"mtime":1626366420917,"results":"249","hashOfConfig":"209"},{"size":6322,"mtime":1626366420959,"results":"250","hashOfConfig":"209"},{"size":51,"mtime":1626366420959,"results":"251","hashOfConfig":"209"},{"size":5446,"mtime":1626366420913,"results":"252","hashOfConfig":"209"},{"size":21454,"mtime":1626366420959,"results":"253","hashOfConfig":"209"},{"size":1352,"mtime":1626366420959,"results":"254","hashOfConfig":"209"},{"size":5909,"mtime":1626366420960,"results":"255","hashOfConfig":"209"},{"size":308,"mtime":1626366420944,"results":"256","hashOfConfig":"209"},{"size":845,"mtime":1626366420945,"results":"257","hashOfConfig":"209"},{"size":1624,"mtime":1626366420914,"results":"258","hashOfConfig":"209"},{"size":1461,"mtime":1626366420946,"results":"259","hashOfConfig":"209"},{"size":6492,"mtime":1626366420944,"results":"260","hashOfConfig":"209"},{"size":708,"mtime":1626366420935,"results":"261","hashOfConfig":"209"},{"size":2846,"mtime":1626366420961,"results":"262","hashOfConfig":"209"},{"size":1252,"mtime":1626366420938,"results":"263","hashOfConfig":"209"},{"size":477,"mtime":1626366420937,"results":"264","hashOfConfig":"209"},{"size":1109,"mtime":1626366420941,"results":"265","hashOfConfig":"209"},{"size":1114,"mtime":1626366420943,"results":"266","hashOfConfig":"209"},{"size":1164,"mtime":1626366420919,"results":"267","hashOfConfig":"209"},{"size":1657,"mtime":1626366420912,"results":"268","hashOfConfig":"209"},{"size":1805,"mtime":1626366420945,"results":"269","hashOfConfig":"209"},{"size":616,"mtime":1626366420941,"results":"270","hashOfConfig":"209"},{"size":606,"mtime":1626366420943,"results":"271","hashOfConfig":"209"},{"size":843,"mtime":1626366420945,"results":"272","hashOfConfig":"209"},{"size":1410,"mtime":1626366420942,"results":"273","hashOfConfig":"209"},{"size":1404,"mtime":1626366420943,"results":"274","hashOfConfig":"209"},{"size":1047,"mtime":1626366420951,"results":"275","hashOfConfig":"209"},{"size":304,"mtime":1626366420952,"results":"276","hashOfConfig":"209"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},"wpva8t",{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"279"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"279"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"279"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"279"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"279"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"279"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"279"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"279"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"279"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"279"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"279"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"279"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"279"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"279"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"279"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"279"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"279"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"279"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"279"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"279"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"279"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"279"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"279"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"279"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"279"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"279"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"279"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"420"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"279"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"279"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"279"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"279"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"279"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"279"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"279"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"279"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"279"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},"lnl2c8",{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"456"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"456"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"456"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"456"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"456"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"456"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"456"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"456"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"456"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"456"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"456"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"456"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"456"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"456"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"456"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"456"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"456"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"456"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"456"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"456"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"456"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"456"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"456"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"456"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"456"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"456"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"456"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"456"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"456"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"456"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"456"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"456"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"456"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"456"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"456"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"456"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"456"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"456"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"456"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"456"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"456"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"456"},"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\index.js",[],["597","598"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\App.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\store.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\reducers\\quoteOneReducer.js",["599"],"\r\nconst intialState = {\r\n    \"quote_selected\": null,\r\n    \"quote_one\":{\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        billing_address: \"\",\r\n        city: \"\",\r\n        post_code: \"\",\r\n        phone_number: \"\",\r\n        email: \"\",\r\n        customer_notes: \"\",\r\n        installer_notes: \"\",\r\n        salesman: \"\",\r\n        products: [{\r\n            name: null,\r\n            option: null,\r\n            price: 0.00\r\n        }]\r\n    },\r\n}\r\n\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"quote_selected\":\r\n            return {\r\n                quote_selected: action.payload,\r\n            };\r\n        case \"quote_one\":\r\n            return {\r\n                quote_one: action.payloadq,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\admin\\index.js",["600","601"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"../main\";\r\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\r\nimport \"./index.css\";\r\nimport Leftnav from \"../leftnav\";\r\nimport Head from \"../head\";\r\nimport { getUser } from \"../../util/storage\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Searchbar from \"../searchbar\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport default class Homepage extends React.Component {\r\n  state = {\r\n    user: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    const user = await getUser();\r\n    this.setState({ user });\r\n  };\r\n  render() {\r\n    const { user } = this.state;\r\n    const SecurityLevel =\r\n      (this.state.user && this.state.user.SecurityLevel) || \"\";\r\n    const FirstName = (this.state.user && this.state.user.FirstName) || \"\";\r\n    if (!getUser()) return <Redirect to=\"/login\" />;\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Sider>\r\n          <Leftnav role={SecurityLevel} imgUrl={datas.user[0].imgUrl}></Leftnav>\r\n        </Sider>\r\n        <Layout className=\"main-layout\">\r\n          <Header className=\"header\">\r\n            <Head username={FirstName} />\r\n          </Header>\r\n\r\n          <Content className=\"content\">\r\n            <Searchbar />\r\n            <Main />\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            ©2021 Created by Team Explorers\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\login\\index.js",["602"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Input, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport { getLogin, reqWeather } from \"../../api/index\";\r\nimport { setUser, getUser } from \"../../util/storage\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Item } = Form;\r\nexport default function Login(props) {\r\n  const handleSubmit = async (values) => {\r\n    const { loginId, loginPwd } = values;\r\n    const result = await getLogin(loginId, loginPwd);\r\n    reqWeather(\"calgary\");\r\n    if (result.data && result.data.length > 0) {\r\n      setUser(result.data[0]);\r\n      props.history.replace(\"/\");\r\n      message.success(\"Login Success!\");\r\n    } else {\r\n      message.info(\"Username or Password not correct!\");\r\n    }\r\n  };\r\n  if (getUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div className=\"login_page\">\r\n      <div className=\"login\">\r\n        <h2>Login</h2>\r\n        <Form onFinish={handleSubmit} autoComplete=\"off\">\r\n          <Item\r\n            name=\"loginId\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              style={{ backgroundColor: \"transparent\" }}\r\n              prefix={<UserOutlined />}\r\n              placeholder=\"username\"\r\n            />\r\n          </Item>\r\n          <Item\r\n            name=\"loginPwd\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password prefix={<LockOutlined />} placeholder=\"password\" />\r\n          </Item>\r\n          <Item className=\"login_button\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              block\r\n            >\r\n              Login\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\util\\storage.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\index.js",["603"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\main\\index.js",["604"],"import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport Home from \"../../pages/home\";\r\nimport Quotes from \"../../pages/quotes\";\r\nimport Orders from \"../../pages/orders\";\r\nimport Invoices from \"../../pages/invoices\";\r\nimport Customers from \"../../pages/customers\";\r\nimport Users from \"../../pages/users\";\r\nimport Roles from \"../../pages/roles\";\r\nimport CustomerInfo from \"../../pages/customerInfo\";\r\nimport AddressInfo from \"../../pages/addressInfo\";\r\nimport NewCusomter from \"../../pages/newcustomer\";\r\nimport NewEstimate from \"../../pages/newestimate\";\r\nimport \"./index.css\";\r\nimport QuoteEmail from \"../../Components/Email_Templates/quote_template\";\r\nimport QuoteEdit from '../../pages/quotes/quoteEdit';\r\n\r\nconst id = 0;\r\nexport default function Main() {\r\n  return (\r\n    <div className=\"content-main\">\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/quotes\" component={Quotes} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/invoices\" component={Invoices} />\r\n        <Route path=\"/customers\" component={Customers} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Route path=\"/roles\" component={Roles} />\r\n        <Route path=\"/customerinfo/:customer\" component={CustomerInfo} />\r\n        <Route path=\"/addressinfo/:address\" component={AddressInfo} />\r\n        <Route path=\"/newcustomer\" component={NewCusomter} />\r\n        <Route path=\"/newestimate\" component={NewEstimate} />\r\n        <Route path=\"/testquote\" component={QuoteEmail} />\r\n        <Route path=\"/quoteinfo/:qid\" component={QuoteEdit} />\r\n        <Redirect to=\"/home\"></Redirect>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\searchbar\\index.js",["605","606","607","608","609","610","611","612"],"import React, { useState } from \"react\";\r\nimport { Input, Radio, Form, message, Modal, Button } from \"antd\";\r\nimport Orders from \"../../pages/orders\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { Search } = Input;\r\nconst id = 0;\r\nfunction Searchbar(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [newOrderShow, setNewOrderShow] = useState(false);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n    if (e.target.value == \"customer\") {\r\n      props.history.push(\"/newcustomer\");\r\n    } else props.history.push(\"/newestimate\");\r\n  };\r\n  const onSearch = (value) => {\r\n    message.success(value);\r\n  };\r\n\r\n  const options = [\r\n    { label: \"New Customer\", value: \"customer\" },\r\n    { label: \"New Estimate\", value: \"order\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content-searchbar\">\r\n      <Search\r\n        allowClear\r\n        className=\"searchbar\"\r\n        placeholder=\"Search\"\r\n        onSearch={onSearch}\r\n        enterButton\r\n      />\r\n      <Radio.Group\r\n        options={options}\r\n        onChange={handleChange}\r\n        value={value}\r\n        optionType=\"button\"\r\n        buttonStyle=\"solid\"\r\n      ></Radio.Group>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(Searchbar);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\leftnav\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\head\\index.js",["613"],"import React, { useState, useEffect } from \"react\";\r\nimport { reqWeather } from \"../../api/index\";\r\nimport LinkButton from \"../../pages/linkbutton\";\r\nimport { Modal } from \"antd\";\r\nimport { removeUser } from \"../../util/storage\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Head(props) {\r\n  const [date, setCurrendate] = useState();\r\n  const [city, setCity] = useState(\"Calgary\");\r\n  const [icon, setIcon] = useState(`http://openweathermap.org/img/w/10d.png`);\r\n  const [main, setMain] = useState();\r\n  const timer = setInterval(() => {\r\n    if (timer) clearInterval(timer);\r\n    const date = new Date(Date.now());\r\n    const dateFormat = `${date.getFullYear()}/${\r\n      date.getMonth() + 1\r\n    }/${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    setCurrendate(dateFormat);\r\n  }, 1000);\r\n  const getCancel = () => {\r\n    Modal.confirm({\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Do you want to logout?\",\r\n      onOk: () => {\r\n        removeUser();\r\n        props.history.push(\"/login\");\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    async function getWeather() {\r\n      const weather = await reqWeather(city);\r\n      if (weather) {\r\n        const { icon, main } = weather.data.weather[0];\r\n        setIcon(icon);\r\n        setMain(main);\r\n      }\r\n    }\r\n    getWeather();\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo\"></div>\r\n      <div className=\"dashboard\">\r\n        <div className=\"upper\">\r\n          <div>\r\n            <span>Welcome </span>\r\n            <span className=\"welcome\">{props.username}</span>\r\n\r\n            <LinkButton onClick={getCancel}>Exit</LinkButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"lower\">\r\n          <div>\r\n            <span>{city}</span>\r\n            <span>{date}</span>\r\n            <span>{main}</span>\r\n            <span>\r\n              <img alt=\"\" src={`http://openweathermap.org/img/w/${icon}.png`} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(Head);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\base.js",["614","615"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\config\\leftnav.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\index.js",["616","617","618","619","620"],"import React, {useState } from \"react\";\r\nimport { Route, Switch,  Link,  useParams,  useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport FormOne from \"./FormOne\";\r\nimport QuoteOne from \"./QuoteOne\";\r\nimport QuotePrint from \"./QuotePrint\";\r\nimport QuoteList from \"./quoteList\";\r\nimport {Space, Button} from \"antd\";\r\n\r\nexport default function Quotes() {\r\n\r\n  const [quoteDataId, setQuoteDataId] = useState('0');\r\n  const [quoteData, setQuoteData] = useState({});\r\n  const [quoteFormData, setQuoteFormData] = useState({});\r\n\r\n  let { path, url } = useRouteMatch();\r\n  let history = useHistory();\r\n\r\n  function onSetQuoteDataChange(data) {\r\n    if (!(data == null || data  == \"\" || data == undefined)) {\r\n        setQuoteDataId(data.id);\r\n        setQuoteData(data);\r\n        history.push(`${url}/${data.id}/new/`)\r\n    }else{\r\n        setQuoteData({});\r\n    }\r\n  }\r\n\r\n  function onSetQuoteFormDataChange(data) {\r\n    if (!(data == null || data  == \"\" || data == undefined)) {\r\n        setQuoteFormData(data);\r\n        console.log(data);\r\n        history.push(`${url}/${quoteDataId}/print/`)\r\n    }else{\r\n        setQuoteFormData({});\r\n    }\r\n  }\r\n\r\n  function onEditQuoteFormData(){\r\n      history.push(`/quotes/${quoteData.id}/edit/`)\r\n  }\r\n\r\n  return (\r\n    <div style={{padding: \"10px\", margin: \"10px\"}}>\r\n      <div>\r\n        <h2> Quotes<Space style={{float:\"right\"}}><Link to=\"/quotes/quoteList\" ><Button>View All Quotes</Button></Link>  <Link to=\"/quotes\"><Button> New Quote  </Button></Link></Space></h2>\r\n      </div> \r\n      <hr/>\r\n      <Switch>\r\n        <Route exact path={path} >\r\n          <FormOne quoteDataId={quoteDataId} onSetQuoteDataChange={onSetQuoteDataChange} />\r\n          </Route>\r\n        <Route path=\"/quotes/:qid/new\" >\r\n          <QuoteOne key={quoteData} quoteData={quoteData} onSetQuoteFormDataChange={onSetQuoteFormDataChange} />\r\n        </Route>\r\n        <Route path=\"/quotes/:qid/edit\" >\r\n          <QuoteOne key={quoteData} quoteData={quoteData} quoteFormData={quoteFormData} onSetQuoteFormDataChange={onSetQuoteFormDataChange} />\r\n        </Route>\r\n        <Route path=\"/quotes/:qid/print\" >\r\n          <QuotePrint key={quoteData} quoteFormData={quoteFormData}  quoteData={quoteData} onEditQuoteFormData={onEditQuoteFormData} />\r\n        </Route>\r\n        <Route path=\"/quotes/quoteList\">\r\n          <QuoteList/>\r\n        </Route>\r\n      </Switch>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\linkbutton\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\avatar\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\index.js",["621","622"],"import { Route, Switch,  Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport OrderList from \"../orders/orderList\";\r\nimport NewOrder from \"./newOrder\";\r\nimport { Button, Space } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nexport default function Orders() {\r\n  let { path, url } = useRouteMatch();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <div style={{padding: \"10px\", margin: \"10px\"}}>\r\n      <div>\r\n        <h2> Orders<Space style={{float:\"right\"}}><Link to=\"/quotes/quoteList\" ><Button>View All Work Orders</Button></Link>  <Link to=\"/quotes\"><Button> New Work Order</Button></Link></Space></h2>\r\n      </div> \r\n      <hr/>\r\n      <Switch>\r\n        <Route exact path={path} >\r\n          \r\n          </Route>\r\n        <Route path=\"/orders/:oid/new\" >\r\n          <NewOrder />\r\n        </Route>\r\n        <Route path=\"/orders/:oid/edit\" >\r\n          \r\n        </Route>\r\n        <Route path=\"/orders/orderList\">\r\n          <OrderList/>\r\n        </Route>\r\n      </Switch>\r\n      </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newcustomer\\index.js",["623","624","625","626"],"import React from \"react\";\r\nimport { Form, Input, Button, Select, message } from \"antd\";\r\nimport { addOrder, addEstimate, getLatestCustomer, addAddress, getLatestAddress } from \"../../api/neworder\";\r\nimport \"./index.css\";\r\nconst layout = {\r\n  labelCol: { span: 2 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\nexport default function NewCustomer(props) {\r\n  const [form] = Form.useForm();\r\n  const regions = [\r\n    \"Elmira & area\",\r\n    \"Guelph & area\",\r\n    \"Cambridge & area\",\r\n    \"Hamilton & area\",\r\n    \"Stratford & area\",\r\n    \"Listowel area\",\r\n    \"Greater Toronto Area\",\r\n    \"Kitchener - Waterloo\",\r\n    \"Brantford, Paris, Burford, Waterford, Brant County, Haldmald, Caledonia\",\r\n  ];\r\n  const options = regions.map((item, index) => (\r\n    <Option key={index + 1}>{item}</Option>\r\n  ));\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    var result = await addOrder(values);\r\n    var customerID = await getLatestCustomer();\r\n    var latestCustomer = customerID.data[0].CustomerID;\r\n    var newAddress = await addAddress(latestCustomer, values);\r\n    console.log(\"new address\",newAddress);\r\n    if (newAddress.status == 200) {\r\n      message.success(\"Added successfully\");\r\n      props.history.push(\"/customers\");\r\n    } else message.warn(\"fail\");\r\n  };\r\n  return (\r\n    <div className=\"neworder\">\r\n      <Form form={form} onFinish={onFinish} {...layout}>\r\n        <Item\r\n        label=\"First Name\"\r\n          name=\"FirstName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"First Name\" />\r\n        </Item>\r\n        <Item\r\n        label=\"Last Name\"\r\n          name=\"LastName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Last Name\" />\r\n        </Item>\r\n        <Item\r\n        label=\"Address\"\r\n          name=\"BillingAddress\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Billing Address\" />\r\n        </Item>\r\n        <Item\r\n          label=\"City\"\r\n          name=\"City\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"City\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Province\"\r\n          name=\"Prov\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Province\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Postal Code\"\r\n          name=\"PostalCode\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Postal Code\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Phone\"\r\n          name=\"Phone\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Phone Number\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Email\"\r\n          name=\"Email\"\r\n        >\r\n          <Input placeholder=\"Email\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Region\"\r\n          name=\"Region\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Cannot be Empty\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select>{options}</Select>\r\n        </Item>\r\n        <Item className=\"login_button\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customerInfo\\index.js",["627","628","629","630","631","632","633","634","635","636","637","638","639"],"import React, {useEffect, setState, useState} from 'react';\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select, Space } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {getRegion, updateCustomer, getRegionAPI, getCustomer, getCustomerAddresses, deleteCustomer, addAddress, addNotes, getNotes} from '../../api/customer';\r\nimport { Redirect, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport {getUser} from '../../util/storage';\r\nconst { Item } = Form;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst {TextArea, Search} = Input;\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\n\r\nexport function CustomerInfo() {\r\n\r\n  let history = useHistory();\r\n  let match = useRouteMatch('/customerinfo/:customer').params.customer;\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showAddress, setShowAddress] = useState(false);\r\n  const [formAddress] = Form.useForm();\r\n  const [form1] = Form.useForm();\r\n  const [regions, setRegions] = useState([]);\r\n  const [customerInfo, setcustomerinfo] = useState([]);\r\n  const [addressList, setAddressList] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const options = regions.map((item) => (\r\n    <Option key={item.id}>{item.name}</Option>\r\n  ));\r\n    useEffect(() => {\r\n        const func = async () => {\r\n          var result = await getCustomer(match).then((info) => {\r\n            var customerInfo = info.data.map((item) =>({\r\n            id: item.CustomerID,\r\n            firstName: item.CustFirstName,\r\n            lastName: item.CustLastName,\r\n            email: item.Email,\r\n            phone: item.Phone,\r\n            billing: item.BillingAddress,\r\n            city: item.CustCity,\r\n            postal: item.CustPostalCode,\r\n            region: item.CustRegion\r\n          }));\r\n          setcustomerinfo(customerInfo[0]);\r\n          });\r\n          let userInfo = getUser();\r\n          let initial = userInfo.FirstName.charAt(0) + userInfo.LastName.charAt(0);\r\n          setUser(initial);\r\n          var notes = await getNotes(match).then((notes) => {\r\n            setNotes(notes.data);\r\n          })\r\n        };\r\n        func();\r\n        getAddressList();\r\n        getRegions();\r\n        \r\n      }, []);\r\n\r\n    const getAddressList = async () => {\r\n        var result = await getCustomerAddresses(match).then((list) => {\r\n          var addresses = list.data.map((item) =>({\r\n          id: item.AddressID,\r\n          address: item.Address,\r\n          postalcode: item.PostalCode,\r\n          city: item.City,\r\n          prov: item.Province,\r\n          region: item.Region\r\n        }));\r\n        setAddressList(addresses);\r\n        })\r\n      };\r\n      const getRegions = async() => {\r\n        var result = await getRegionAPI();\r\n        var regionList = result.data.map((item) =>({\r\n          id:item.RegionID,\r\n          name:item.Region\r\n        }));\r\n        setRegions(regionList);\r\n      }\r\n      const title = (\r\n        <div>\r\n          <Space>\r\n\r\n          \r\n          <Button\r\n            type=\"primary\"\r\n          onClick={() => {\r\n              setShowForm(true);\r\n              form1.setFieldsValue({\r\n              firstName: customerInfo.firstName,\r\n              lastName: customerInfo.lastName,\r\n              email: customerInfo.email,\r\n              phone: customerInfo.phone,\r\n              billing: customerInfo.billing,\r\n             city: customerInfo.city,\r\n              postal: customerInfo.postal,\r\n              region: customerInfo.region\r\n             });\r\n            }}\r\n          >\r\n            Modify\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              handleDeleteCustomer(customerInfo.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n          </Space>\r\n        </div>\r\n      )\r\n      const handleUpdate = async () => {\r\n        const validResult = await form1.validateFields();\r\n        if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n        const value = form1.getFieldsValue();\r\n        console.log(value);\r\n        //const { firstName, lastName, email, phone, billing, city, postal, region } = value;\r\n        const id = customerInfo.id;\r\n        console.log(\"id\", id);\r\n        //update data in the backend\r\n        const result = await updateCustomer(id, value.firstName, value.lastName, value.email, value.phone, value.billing, value.city, value.postal, value.region);\r\n        setShowForm(false);\r\n        console.log(result);\r\n        if (result.status === 200) {\r\n          message.success(\"Successfully updated customer information\");\r\n        }\r\n      };\r\n      const handleDeleteCustomer = async (id) => {\r\n        confirm({\r\n          title: \"Are you sure you want to delete this customer?\",\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: \"\",\r\n          okText: \"Yes\",\r\n          okType: \"danger\",\r\n          cancelText: \"No\",\r\n          onOk() {\r\n            return new Promise((resolve, reject) => {\r\n              const result = deleteCustomer(id);\r\n              console.log(result);\r\n              message.success(\"Customer has been successfully deleted\");\r\n              resolve();\r\n              \r\n            });\r\n          },\r\n          onCancel() {\r\n            console.log(\"Cancel\");\r\n          },\r\n        });\r\n        \r\n      }\r\n      const handleNewAddress = async () =>{\r\n        const validResult = await formAddress.validateFields();\r\n        if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n        const value = formAddress.getFieldsValue();\r\n        const info = {\r\n          BillingAddress: value.address,\r\n          PostalCode: value.postalCode,\r\n          City: value.city,\r\n          Prov: value.prov,\r\n          Region: value.region\r\n        }\r\n        let id = customerInfo.id;\r\n        var result = await addAddress(id, info);\r\n        console.log(result);\r\n        if (result.status == 200){\r\n          message.success(\"added new address\");\r\n        }\r\n        setShowAddress(false);\r\n\r\n      }\r\n      const getNoteTable = () => {\r\n        let rows = [];\r\n        notes.map((item) => {\r\n          rows.push(\r\n            <tr>\r\n              <td>\r\n                {item.custNotes}\r\n              </td>\r\n              <td>\r\n                {format(new Date(item.dateAdded), \"MMMM do',' yyyy\")}\r\n              </td>\r\n              <td>\r\n                {item.UserInitial}\r\n              </td>\r\n            </tr>\r\n         \r\n            \r\n          );\r\n        });\r\n        return rows;\r\n      }\r\n    const columns =[\r\n      {\r\n        title:\"Address\",\r\n        dataIndex:\"address\",\r\n        key:\"address\"\r\n      },\r\n      {\r\n        title:\"Postal Code\",\r\n        dataIndex:\"postalcode\",\r\n        key:\"postal\"\r\n      },\r\n      {\r\n        title:\"City\",\r\n        dataIndex:\"city\",\r\n        key:\"city\"\r\n      },\r\n      {\r\n        title:\"Province\",\r\n        dataIndex:\"prov\",\r\n        key:\"prov\"\r\n      },\r\n      {\r\n        title:\"Region\",\r\n        dataIndex:\"region\",\r\n        key:\"region\"\r\n      }\r\n      \r\n    ]\r\n      return(\r\n        <div>\r\n          <Card\r\n          title = {title}\r\n          >\r\n            <div>\r\n              <div style={{float:\"left\", width:\"30%\"}}>\r\n              <Card title=\"Customer Information\">\r\n            <p>First Name: {customerInfo.firstName}</p>\r\n            <p>Last Name: {customerInfo.lastName}</p>\r\n            <p>Email: {customerInfo.email}</p>\r\n            <p>Phone: {customerInfo.phone}</p>\r\n            <br />      \r\n        </Card>\r\n        <Card title=\"Billing Address\">\r\n          <p>Billing Address: {customerInfo.billing}</p>\r\n            <p>City: {customerInfo.city}</p>\r\n            <p>Postal Code: {customerInfo.postal}</p>\r\n        </Card>\r\n            </div>\r\n            <div style={{float:\"right\", width:\"50%\"}}>\r\n              <h1>Customer Notes</h1>\r\n              <Item>\r\n                <table style={{display:'block', height:\"350px\", overflowY:\"scroll\", width:\"100%\"}}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <td style={{position:\"sticky\", top:\"0\", width:\"60%\", backgroundColor:\"white\"}}>\r\n                      <strong>Notes</strong>\r\n                    </td>\r\n                    \r\n                    <td style={{position:\"sticky\", top:\"0\", width:\"30%\", backgroundColor:\"white\"}}>\r\n                      <strong>Date Added</strong>\r\n                    </td>\r\n                    <td style={{position:\"sticky\", top:\"0\", width:\"10%\", backgroundColor:\"white\"}}>\r\n                      <strong>User Initial</strong>\r\n                    </td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getNoteTable()}\r\n                </tbody>\r\n              </table>\r\n              </Item>\r\n              \r\n              <Item>\r\n                <TextArea\r\n                name=\"notes\"\r\n                allowClear={true}\r\n                autoSize={{minRows: 2, maxRows: 3}}\r\n                ></TextArea>\r\n              </Item>\r\n              <Item>\r\n                <Button\r\n                onClick={async() => {\r\n                  let value = document.getElementsByName(\"notes\");\r\n                  console.log(value[0].value);\r\n                  let result = await addNotes(value[0].value, user, match);\r\n                  if(result.status === 200){\r\n                    message.success(\"added new note\");\r\n                  }\r\n                  else{\r\n                    message.error(\"Something went wrong. Please try again.\")\r\n                  }\r\n                  document.getElementsByName(\"notes\")[0].value = \"\";\r\n                }}>\r\n                Submit\r\n                </Button>\r\n              </Item>\r\n              \r\n            </div>\r\n            </div>\r\n            \r\n        \r\n            \r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        bordered\r\n        dataSource={addressList}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n\r\n          </Table>\r\n          <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setShowAddress(true);\r\n            formAddress.resetFields();\r\n          }}\r\n          >New Address</Button>\r\n\r\n          <Modal\r\n          visible={showForm}\r\n          title=\"Update Customer\"\r\n          onOk={handleUpdate}\r\n          onCancel={() => setShowForm(false)}\r\n        >\r\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                \r\n              ]}\r\n              \r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Billing Address\"\r\n              name=\"billing\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"City\"\r\n              name=\"city\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Postal Code\"\r\n              name=\"postal\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n              </Item>\r\n              <Item\r\n              label=\"Region\"\r\n              name=\"region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={showAddress}\r\n          title=\"New Address\"\r\n          onOk={handleNewAddress}\r\n          onCancel={() => setShowAddress(false)}\r\n          >\r\n          <Form\r\n              form={formAddress}\r\n              labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n              >\r\n              <Item \r\n              label=\"Address\"\r\n              name=\"address\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Postal Code\"\r\n              name=\"postalCode\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"City\"\r\n              name=\"city\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Province\"\r\n              name=\"prov\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Region\"\r\n              name=\"region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n              </Item>\r\n\r\n          </Form>\r\n        </Modal>\r\n        </Card>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    export default withRouter(CustomerInfo)","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\roles\\index.js",["640","641","642","643"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Tree } from \"antd\";\r\nimport { addRole, getRoles } from \"../../api/index\";\r\nimport { manuList } from \"../../config/leftnav\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Item } = Form;\r\n\r\nexport default function Roles() {\r\n  //control the adding form status\r\n  const [addingShow, setaddingShow] = useState(false);\r\n  //control the modify tree component status\r\n  const [modifyShow, setmodifyShow] = useState(false);\r\n  const [form] = Form.useForm();\r\n  //handle the selected row\r\n  const [row, setRow] = useState({});\r\n  //handle the menu of the selected row\r\n  const [selectedRowMenu, setselectedRowMenu] = useState([]);\r\n  //the added role name\r\n  const columns = [\r\n    {\r\n      title: \"Role Name\",\r\n      dataIndex: \"rolename\",\r\n      key: \"rolename\",\r\n    },\r\n    {\r\n      title: \"Creat Time\",\r\n      dataIndex: \"createtime\",\r\n      key: \"createtime\",\r\n    },\r\n    {\r\n      title: \"Authorized Time\",\r\n      dataIndex: \"authorizedtime\",\r\n      key: \"authorizedtime\",\r\n    },\r\n    {\r\n      title: \"Authorizor\",\r\n      dataIndex: \"authorizor\",\r\n      key: \"authorizor\",\r\n    },\r\n  ];\r\n\r\n  //getting tree nodes\r\n  const getTreeNodes = (array) => {\r\n    return array.map((item, index) => {\r\n      return {\r\n        title: item.content,\r\n        key: item.key,\r\n        children: item.children ? getTreeNodes(item.children) : \"\",\r\n      };\r\n    });\r\n  };\r\n  //the data format of tree component\r\n  const treeDatas = [\r\n    {\r\n      title: \"Authority\",\r\n      key: \"All\",\r\n      children: getTreeNodes(manuList),\r\n    },\r\n  ];\r\n\r\n  //handle tree component(settings for role)\r\n  const handleTree = () => {};\r\n  //handle onrow callback function in table settings\r\n  const handleonRow = (record, index) => {\r\n    return {\r\n      onClick: () => {\r\n        setRow(record);\r\n        console.log(row.rolename);\r\n      },\r\n    };\r\n  };\r\n  //handle adding a new role\r\n  const handleAdding = async () => {\r\n    const validResult = await form.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const rolename = form.getFieldValue(\"rolename\");\r\n    const result = await addRole(rolename);\r\n    if (result.data.status === 1) {\r\n      message.success(\"success!\");\r\n      setaddingShow(false);\r\n    } else {\r\n      message.warn(result.data.err);\r\n      setaddingShow(false);\r\n    }\r\n    setaddingShow(false);\r\n  };\r\n\r\n  //handle all form status being cancel\r\n  const handleCancle = () => {\r\n    setaddingShow(false);\r\n    setmodifyShow(false);\r\n  };\r\n\r\n  //the title of card component\r\n  const title = (\r\n    <>\r\n      <Button\r\n        style={{ marginRight: 20 }}\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setaddingShow(true);\r\n        }}\r\n      >\r\n        Create A Role\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          console.log(\"click\");\r\n          setmodifyShow(true);\r\n        }}\r\n        disabled={!row.id}\r\n      >\r\n        Set Roles\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Card title={title} bordered>\r\n      <Table\r\n        rowKey=\"id\"\r\n        columns={columns}\r\n        rowSelection={{\r\n          type: \"radio\",\r\n          selectedRowKeys: [row.id],\r\n          onChange: (rowkeys, rows) => {\r\n            setRow(rows[0]);\r\n          },\r\n        }}\r\n        onRow={handleonRow}\r\n        dataSource={datas.role}\r\n      ></Table>\r\n      <Modal\r\n        visible={addingShow}\r\n        onOk={handleAdding}\r\n        onCancel={handleCancle}\r\n        title=\"Adding a role\"\r\n      >\r\n        <Form form={form}>\r\n          <Item\r\n            name=\"rolename\"\r\n            label=\"role_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Input..\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={modifyShow}\r\n        title=\"set roles\"\r\n        onOk={handleTree}\r\n        onCancel={handleCancle}\r\n      >\r\n        <Form>\r\n          <Item label=\"Role:\" wrapperCol={{ span: 18 }}>\r\n            <Input disabled value={row.rolename} />\r\n          </Item>\r\n        </Form>\r\n        <Tree checkable treeData={treeDatas} defaultExpandAll={true}></Tree>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newestimate\\index.js",["644","645","646","647","648","649","650","651","652"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, DatePicker, Input, Button, Select, message, Card, Modal } from \"antd\";\r\nimport {\r\n  addOrder,\r\n  addEstimate,\r\n  getLatestCustomer,\r\n  addAddress,\r\n  getLatestAddress,\r\n} from \"../../api/neworder\";\r\nimport SalesSnapshot from '../../Components/HomeTemplate/SalesCalendar/SalesSnapshot'\r\nimport { getRegionAPI, getUsers, sendConfirm } from \"../../api/calendar\";\r\nimport \"./index.css\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport Confirmation from \"../../Components/Email_Templates/confirmation\"\r\nimport {renderEmail} from 'react-html-email';\r\nimport { useStore } from \"react-redux\";\r\nconst { RangePicker } = DatePicker;\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\nconst { format } = require(\"date-fns-tz\");\r\n\r\nexport default function NewEstimate(props) {\r\n  const [info, setInfo] = useState(false);\r\n  const [salesmen, setSalesmen] = useState([]);\r\n  const [regions, setRegions] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n  const options = regions.map((item) => (\r\n    <Option key={item.id}>{item.region}</Option>\r\n  ));\r\n  const jobs = [\"loosefill\", \"spray\"];\r\n  const options1 = jobs.map((item, index) => (\r\n    <Option key={item}>{item}</Option>\r\n  ));\r\n\r\n  const getregions = async () => {\r\n    const data = await getRegionAPI();\r\n    let regionData = data.data.map((item) => ({\r\n      id: item.RegionID,\r\n      region: item.Region,\r\n      color: item.color,\r\n    }));\r\n    setRegions(regionData);\r\n  };\r\n\r\n  const getsalesmen = async () => {\r\n    const data = await getUsers();\r\n    let salesData = data.data.map((item) => ({\r\n      id: item.UserID,\r\n      FirstName: item.FirstName,\r\n      LastName: item.LastName,\r\n    }));\r\n    setSalesmen(salesData);\r\n  };\r\n\r\n  const options2 = salesmen.map((item) => (\r\n    <Option key={item.id}>{item.FirstName}</Option>\r\n  ));\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    var customer = {\r\n      FirstName: values.FirstName,\r\n      LastName: values.LastName,\r\n      Phone: values.Phone,\r\n      Email: values.Email,\r\n      BillingAddress: values.BillingAddress,\r\n      City: values.City,\r\n      Prov: values.Prov,\r\n      PostalCode: values.PostalCode,\r\n      Region: values.Region,\r\n    };\r\n    var siteAddress = {\r\n      BillingAddress: values.siteAddress,\r\n      City: values.siteCity,\r\n      Prov: values.siteProv,\r\n      PostalCode: values.sitePostal,\r\n      Region: values.siteRegion\r\n    };\r\n    var estimate = {\r\n      UserID: values.salesman,\r\n      JobType: values.JobType,\r\n      Region: values.siteRegion,\r\n      startDate: format(\r\n        values.selectedDate[0]._d,\r\n        \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\"\r\n      ),\r\n      endDate: format(\r\n        values.selectedDate[1]._d,\r\n        \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\"\r\n      ),\r\n      estimateInfo: values.EstimateInfo,\r\n    };\r\n    var result = await addOrder(customer);\r\n\r\n    if (result.status == 200) {\r\n      message.success(\"add success!\");\r\n    } else message.warn(\"fail\");\r\n    var getCustomerID = await getLatestCustomer();\r\n    var latestCustomer = getCustomerID.data[0].CustomerID;\r\n    console.log(\"customerID\", getCustomerID);\r\n    if(customer.BillingAddress !== undefined){\r\n          var newAddress = await addAddress(latestCustomer, customer);\r\n    }\r\n    if (siteAddress.BillingAddress !== undefined) {\r\n      var siteAddressSent = await addAddress(latestCustomer, siteAddress);\r\n    }\r\n    var getAddressID = await getLatestAddress();\r\n    var latestAddress = getAddressID.data[0].CustomerID;\r\n    console.log(latestAddress);\r\n    console.log(\"addressID\", getAddressID);\r\n    var estimateResult = await addEstimate(\r\n      latestCustomer,\r\n      getAddressID.data[0].AddressID,\r\n      estimate\r\n    );\r\n    sendConfirm(customer.Email, renderEmail(<Confirmation customerInfo = {customer} siteInfo = {siteAddress} estimateInfo = {estimate}  />))\r\n    props.history.push(\"/home\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getsalesmen();\r\n    getregions();\r\n    if (salesmen != [] && regions != []) {\r\n      setInfo(true);\r\n    }\r\n  }, []);\r\n  if (info != true) {\r\n    return <p>Loading Information...</p>;\r\n  } else {\r\n    return (\r\n      <div className=\"neworder\">\r\n        <Card>\r\n          <Form form={form} onFinish={onFinish} {...layout}>\r\n            <Item\r\n              label=\"First Name\"\r\n              name=\"FirstName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"First Name\" />\r\n            </Item>\r\n            <Item\r\n              label=\"Last Name\"\r\n              name=\"LastName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Last Name\" />\r\n            </Item>\r\n            <Item\r\n              label=\"Phone\"\r\n              name=\"Phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Phone Number\" />\r\n            </Item>\r\n            <Item label=\"Email Address\" name=\"Email\">\r\n              <Input placeholder=\"Email\" />\r\n            </Item>\r\n            <Item label=\"Site Address\" name=\"siteAddress\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}>\r\n              <Input placeholder=\"Address\" />\r\n            </Item>\r\n            <Item label=\"Site City\" name=\"siteCity\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}>\r\n              <Input placeholder=\"City\" />\r\n            </Item>\r\n            <Item label=\"Site Province\" name=\"siteProv\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}>\r\n              <Input placeholder=\"Province\" />\r\n            </Item>\r\n            <Item label=\"Postal Code\" name=\"sitePostal\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}>\r\n              <Input placeholder=\"Postal Code\" />\r\n            </Item>\r\n            <Item name=\"siteRegion\" label=\"Site Region\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}>\r\n              <Select>{options}</Select>\r\n            </Item>\r\n            <i>optional billing address</i><br/>\r\n            <i>---</i>\r\n            <Item\r\n              label=\"Billing Address\"\r\n              name=\"BillingAddress\" \r\n            >\r\n            <Input placeholder=\"Billing Address\" />\r\n            </Item>\r\n            <Item\r\n              label=\"City\"\r\n              name=\"City\"\r\n            >\r\n              <Input placeholder=\"City\" />\r\n            </Item>\r\n            <Item\r\n              label=\"Province\"\r\n              name=\"Prov\"\r\n            >\r\n              <Input placeholder=\"Province\" />\r\n            </Item>\r\n            <Item\r\n              label=\"Postal Code\"\r\n              name=\"PostalCode\"\r\n            >\r\n              <Input placeholder=\"Postal Code\" />\r\n            </Item>\r\n            <Item\r\n              name=\"Region\"\r\n              label=\"Region\"\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n            <i>---</i>\r\n            <Item\r\n              name=\"selectedDate\"\r\n              label=\"Time\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <RangePicker\r\n                showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD HH:mm\"\r\n                className=\"datepicker\"\r\n              />\r\n              <Button type=\"primary\" onClick={() => {setShowCalendar(true)}}>Show Calendar</Button>\r\n            </Item>\r\n            \r\n            <Item\r\n              name=\"JobType\"\r\n              label=\"Type of Job\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options1}</Select>\r\n            </Item>\r\n            <Item\r\n              label=\"Information\"\r\n              name=\"EstimateInfo\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea rows={4} placeholder=\"Estimate Information\" />\r\n            </Item>\r\n            <Item\r\n              name=\"salesman\"\r\n              label=\"Assigned Salesman\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options2}</Select>\r\n            </Item>\r\n            <Item className=\"login_button\">\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                shape=\"round\"\r\n                size=\"large\"\r\n                block\r\n              >\r\n                Create Estimate\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </Card>\r\n        <Modal\r\n        visible={showCalendar}\r\n        onCancel={() => {setShowCalendar(false)}}\r\n        width=\"90%\"\r\n        >\r\n        <SalesSnapshot />\r\n      </Modal>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\addressInfo\\index.js",["653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],"import React, {useEffect, setState, useState} from 'react';\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport {getQuotes, getAddress, getUser, } from '../../api/addresses';\r\nimport { useHistory, useRouteMatch, Route, Switch } from \"react-router-dom\";\r\nimport {getAllInfo} from \"../../api/quoteEditAPI\";\r\nconst { Item } = Form;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst {format } = require('date-fns-tz')\r\n\r\nexport default function AddressInfo() {\r\n \r\n  let history = useHistory();\r\n  let match = useRouteMatch('/addressinfo/:address').params.address;\r\n  const [addressInfo, setaddressinfo] = useState([]);\r\n  const [quoteList, setQuoteList] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const currentDate = new Date();\r\n  const [formView] = Form.useForm();\r\n  const [formData, setFormData] = useState([]);\r\n  const [testData, setTestData] = useState([]);\r\n\r\n    useEffect(async() => {\r\n        const func = async () => {\r\n          let result2 = await getAllInfo(match);\r\n          console.log(result2);\r\n          setTestData(result2.data);\r\n    };\r\n        func();\r\n        \r\n        if(testData !== []){\r\n          setTableData(createTable());\r\n          setLoaded(true);\r\n        }\r\n        \r\n      }, [tableData.length]);\r\n\r\n    const checkDate = (date) => {\r\n      console.log('date', date);\r\n      let returnDate = \"\";\r\n      if(date === \"December 31st, 1969\"){\r\n      }\r\n      else{\r\n        returnDate = date;\r\n    }\r\n    return returnDate;\r\n    }\r\n    const createTable = () => {\r\n      let tableList = testData.map((item) => (\r\n        {\r\n          id: item.QuoteID,\r\n          salesman: item.FirstName + \" \" + item.LastName,\r\n          creationDate: format(new Date(item.creationDate),\"MMMM do',' yyyy\"),\r\n          modifyDate: checkDate(format(new Date(item.modifyDate), \"MMMM do',' yyyy\")),\r\n          total: item.QuoteTotal\r\n      }));\r\n      return tableList;\r\n    };\r\n\r\n    const findSalesman = (id) => {\r\n      let salesman = \"\";\r\n      userData.forEach(element => {\r\n        if(element.id === id){\r\n          salesman = element.firstName + \" \" + element.lastName;\r\n        }\r\n      });\r\n      return salesman;\r\n    }\r\n    const columns =[\r\n      \r\n      {\r\n        title:\"Salesman\",\r\n        dataIndex:\"FirstName\",\r\n        key:\"user\"\r\n      },\r\n      {\r\n        title:\"Quote Total\",\r\n        dataIndex:\"QuoteTotal\",\r\n        key:\"total\"\r\n      },\r\n      {\r\n        title:\"Show/Edit Quote Info\",\r\n        key:\"OpenQuote\",\r\n        render: (data) => \r\n          (\r\n            <div>\r\n              <Button\r\n         \r\n          href={`/quoteinfo/${data.id}`}>\r\n          Edit Quote  \r\n          </Button>\r\n            <Button\r\n            onClick={() => {setShowForm(true);\r\n                            setFormData(data);\r\n                            }}>\r\n            View Quote</Button>\r\n            </div>)\r\n      },\r\n      {\r\n        title:\"Creation Date\",\r\n        dataIndex:\"creationDate\",\r\n        key:\"date\"\r\n      },\r\n      {\r\n        title:\"Last Modified\",\r\n        dataIndex:\"modifyDate\",\r\n        key:\"modDate\"\r\n      }   \r\n\r\n    ]\r\n    if(loaded){\r\n\r\n      return(\r\n        <div>\r\n          <Card title=\"Customer Information\"></Card>\r\n        <Card title=\"Address Information\">\r\n           {addressInfo.address}\r\n           <br />\r\n           {addressInfo.city}\r\n           <br />\r\n          {addressInfo.postal}\r\n        </Card>\r\n\r\n        <h2>Active Quotes</h2>\r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        dataSource={testData}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n          </Table>\r\n\r\n\r\n        <Modal\r\n        visible={showForm}\r\n        title=\"View Quote\"\r\n        onOk={() => {console.log(\"submit\")}}\r\n        onCancel={() => {setShowForm(false)}}>\r\n          <Form \r\n          form={formView}\r\n          labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item name=\"test\">\r\n\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n          </div>\r\n      )\r\n    }\r\n\r\n    else{\r\n      return(\r\n        <div>\r\n          Loading...\r\n        </div>\r\n        \r\n      );\r\n      \r\n    }\r\n    }","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\users\\index.js",["673","674","675","676"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { addUser, getUsers, updateUser, deleteUser } from \"../../api/index\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Item } = Form;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nexport default function Users() {\r\n  //form ref to control the adding form\r\n  const [form] = Form.useForm();\r\n  //form ref to control the updating form\r\n  const [form1] = Form.useForm();\r\n  //control the status of adding form modal\r\n  const [addShow, setAddShow] = useState(false);\r\n  //control the status of updating form modal\r\n  const [updateShow, setupdateShow] = useState(false);\r\n  //control the status of the deleting form modal\r\n  const [deleteShow, setdeleteShow] = useState(false);\r\n\r\n  const [onSelected, setonSelected] = useState();\r\n  const [, setForce] = useState();\r\n\r\n  const [users, setusers] = useState([]);\r\n\r\n  //the selected to be updated or deleted data\r\n  const [selectedData, setselectedData] = useState({});\r\n  const title = (\r\n    <Button\r\n      onClick={() => {\r\n        form.resetFields();\r\n        setAddShow(true);\r\n      }}\r\n      type=\"primary\"\r\n    >\r\n      New User\r\n    </Button>\r\n  );\r\n\r\n  const options = datas.role.map((item) => (\r\n    <Option key={item.rolename}>{item.rolename}</Option>\r\n  ));\r\n\r\n  //for table coloums\r\n  const columns = [\r\n    {\r\n      title: \"LoginId\",\r\n      dataIndex: \"loginId\",\r\n      key: \"loginId\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      key: \"role\",\r\n    },\r\n    {\r\n      title: \"Operate\",\r\n      key: \"operate\",\r\n      render: (data) => (\r\n        <div className=\"operate-button\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setselectedData(data);\r\n              setupdateShow(true);\r\n              form1.setFieldsValue({\r\n                loginId: data.loginId,\r\n                loginPwd: data.loginPwd,\r\n                loginPwdConfirm: data.loginPwdConfirm,\r\n                email: data.email,\r\n                role: data.role,\r\n              });\r\n            }}\r\n          >\r\n            Modify\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setselectedData(data);\r\n              showDeleteConfirm(data.key);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  //handle adding form\r\n  const handleAdd = async () => {\r\n    const validResult = await form.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const value = form.getFieldsValue();\r\n    const { loginId, loginPwd, email, role } = value;\r\n    const result = await addUser({ loginId, loginPwd, email, role });\r\n    if (result.data && result.data.affectedRows > 0) {\r\n      message.success(\"Success!\");\r\n      setAddShow(false);\r\n      setForce();\r\n    }\r\n  };\r\n  //handle updating form\r\n  const handleUpdate = async () => {\r\n    //validate first\r\n    const validResult = await form1.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const value = form1.getFieldsValue();\r\n    const { loginId, loginPwd, email, role } = value;\r\n    const id = selectedData.key;\r\n    console.log(\"id\", id);\r\n    //update data in the backend\r\n    const result = await updateUser(id, loginId, loginPwd, email, role);\r\n    setupdateShow(false);\r\n    console.log(result);\r\n    if (result.data.status === 1) {\r\n      message.success(\"success!\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAddShow(false);\r\n    setupdateShow(false);\r\n  };\r\n  //handle delete user function\r\n  const showDeleteConfirm = (id) => {\r\n    confirm({\r\n      title: \"Are you sure delete this user?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          const result = deleteUser(id);\r\n          if (result === 1) message.success(\"success!\");\r\n          resolve();\r\n        });\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      var result = await getUsers();\r\n      var tables = result.data.map((item) => ({\r\n        id: item.UserId,\r\n        loginId: item.FirstName,\r\n        loginPwd: item.Password,\r\n        email: item.Email,\r\n        role: item.SecurityLevel,\r\n      }));\r\n      setusers(tables);\r\n    };\r\n    func();\r\n  }, [users.length]);\r\n  return (\r\n    <div className=\"settings-user\">\r\n      <Card title={title} bordered>\r\n        <Table\r\n          style={{ width: \"80%\", margin: \"0 auto\" }}\r\n          rowKey=\"id\"\r\n          bordered\r\n          dataSource={users}\r\n          columns={columns}\r\n          tableLayout=\"auto\"\r\n          pagination={{ pageSize: 3 }}\r\n        ></Table>\r\n        <Modal\r\n          visible={addShow}\r\n          title=\"Create A New User\"\r\n          onOk={handleAdd}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"LoginId\"\r\n              name=\"loginId\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"loginPwd\"\r\n              name=\"loginPwd\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"ConfirmPwd\"\r\n              name=\"loginPwdConfirm\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"the two passwords that you entered do not match\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n\r\n            <Item\r\n              label=\"role\"\r\n              name=\"role\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={updateShow}\r\n          title=\"Update\"\r\n          onOk={handleUpdate}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"LoginId\"\r\n              name=\"loginId\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"loginPwd\"\r\n              name=\"loginPwd\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"ConfirmPwd\"\r\n              name=\"loginPwdConfirm\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"the two password that you entered do not match\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n\r\n            <Item\r\n              label=\"role\"\r\n              name=\"role\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\invoices\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customers\\index.js",["677","678","679","680","681","682","683","684","685"],"import React, { useState, useEffect, Link } from \"react\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport { getCustomers, getAddresses, customerLookup } from \"../../api/customer\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst {Search} = Input;\r\nfunction Customers(props) {\r\n  const [customers, setcustomers] = useState([]);\r\n  const [addressList, setaddresses] = useState([]);\r\n  const [form1] = Form.useForm();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"First Name\",\r\n      dataIndex: \"firstName\",\r\n      key: \"FirstName\",\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      dataIndex: \"lastName\",\r\n      key: \"LastName\",\r\n    },\r\n    {\r\n      title: \"Customer Billing Address\",\r\n      dataIndex: \"billing\",\r\n      key: \"BillingAddress\",\r\n    },\r\n    {\r\n      title: \"See Customer Page\",\r\n      key: \"OpenCustomer\",\r\n      render: (data) => (\r\n        <div className=\"operate-button\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              props.history.push(`/customerinfo/${data.id}`);\r\n            }}\r\n          >\r\n            Show Customer\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      var result = await getCustomers();\r\n      var tables = result.data.map((item) => ({\r\n        id: item.CustomerID,\r\n        firstName: item.CustFirstName,\r\n        lastName: item.CustLastName,\r\n        billing: item.BillingAddress,\r\n      }));\r\n      setcustomers(tables);\r\n    };\r\n    func();\r\n  }, []);\r\n\r\n  const findCustomers = async (value) => {\r\n    let result = await customerLookup(value);\r\n    var tables = result.data.map((item) => ({\r\n      id: item.CustomerID,\r\n      firstName: item.CustFirstName,\r\n      lastName: item.CustLastName,\r\n      billing: item.BillingAddress,\r\n    }));\r\n    setcustomers(tables);\r\n  }\r\n  return (\r\n    <div>\r\n      <Search\r\n      style={{width:\"40%\"}}\r\n      className=\"searchbar\"\r\n      size = \"medium\"\r\n      enterButton=\"Find Customer\"\r\n      onChange={(e) => {findCustomers(e.target.value)}} />\r\n\r\n      <Table\r\n      style={{ width: \"80%\", margin: \"0 auto\" }}\r\n      rowKey=\"id\"\r\n      bordered\r\n      dataSource={customers}\r\n      columns={columns}\r\n      tableLayout=\"auto\"\r\n      pagination={{ pageSize: 10 }}\r\n    ></Table>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default withRouter(Customers);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\neworder.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\addresses.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\calendar.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\customer.js",["686"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\Template.js",["687","688"],"import React, { Component } from 'react';\r\nimport Tabs from \"../../Components/HomeTemplate/Tabs\"; \r\nimport SalesCalendar from '../../Components/HomeTemplate/SalesCalendar/SalesCalendar';\r\nimport FoamCalendar from '../../Components/HomeTemplate/FoamCalendar/FoamCalendar';\r\nimport FillCalendar from '../../Components/HomeTemplate/FillCalendar/FillCalendar';\r\nimport './Template.css';\r\n\r\nclass Template extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n      \r\n    render() {\r\n        \r\n        return(\r\n      <div>\r\n       <Tabs> \r\n         <div label=\"Sales\"> \r\n           <SalesCalendar />\r\n         </div> \r\n         <div label=\"Foam\"> \r\n           <FoamCalendar />\r\n         </div> \r\n         <div label=\"Fill\"> \r\n         <FillCalendar />\r\n         </div> \r\n       </Tabs> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Template;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuoteOne.js",["689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"import React, {useState, useEffect} from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Button from \"../../component/quotes/Button\";\r\nimport {useInput} from '../../hooks/input-hook';\r\nimport { useParams } from \"react-router\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport CustomSelect from \"../../component/quotes/CustomSelect\";\r\nimport qData from './quoteData.js';\r\nimport {getCustomerAddresses, getCustomers} from '../../api/customer';\r\nimport {getUser} from '../../util/storage';\r\n\r\nimport axios from \"axios\";\r\nimport { AutoComplete, Card, Row, Col, Checkbox, Modal } from \"antd\";\r\nimport { isDOMComponentElement } from \"react-dom/test-utils\";\r\n\r\nconst {confirm} = Modal;\r\n\r\nfunction QuoteOne(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    let { qid } = useParams();\r\n\r\n    let { path, url } = useRouteMatch();\r\n    let history = useHistory();\r\n\r\n    const {value, bind, reset} = useInput('');\r\n    \r\n    const data = useSelector( state => state.quoteOneReducer.quote_one);\r\n    \r\n    let  quotes = qData.quote_data;\r\n    let selectedQuote  = (parseInt(qid)) ? quotes.find((d) => { return parseInt(d.id) == parseInt(qid) }): {};\r\n    \r\n    \r\n    if(Object.keys(selectedQuote).length == 0){\r\n        history.push(`/quotes`);\r\n    }\r\n    const [user, setUser] = useState([]);\r\n    const [quoteData, setQuoteData] = useState({});\r\n    const [customers, setCustomers] = useState([]);\r\n    const [addresses, setAddresses] = useState([]);\r\n    \r\n    useEffect(async () => {\r\n        let result = await getCustomers();\r\n            let cust = result.data.map((c) => (\r\n                    {\r\n                    value : c.CustFirstName + \" \" + c.CustLastName + \" \" + c.CustomerID,\r\n                    id : c.CustomerID,\r\n                    name : c.CustFirstName + \" \" + c.CustLastName,\r\n                    first_name : c.CustFirstName,\r\n                    last_name : c.CustLastName,\r\n                    phone : c.Phone,\r\n                    email : c.Email,\r\n                    address : c.BillingAddress,\r\n                    city : c.CustCity,\r\n                    postal_code : c.CustPostalCode,\r\n                    region : c.CustRegion,\r\n                }\r\n            ));\r\n            setCustomers(cust);\r\n            setLoading(false);\r\n            setUser(getUser());    \r\n        },[selectedQuote]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {value: custID, bind: bindCustID, reset: resetCustID, assignValue: assignCustID} = useInput();\r\n    const {value: firstName, bind: bindFirstName, reset: resetFirstName,assignValue: assignFirstName} = useInput();\r\n    const {value: lastName, bind: bindLastName, reset: resetLastName,assignValue: assignLastName} = useInput();\r\n    const {value: billingAddress, bind: bindBillingAddress, reset: resetBillingAddress, assignValue: assignBillingAddress} = useInput();\r\n    const {value: city, bind: bindCity, reset: resetCity, assignValue: assignCity} = useInput();\r\n    const {value: postCode, bind: bindPostCode, reset: resetPostCode,assignValue: assignPostCode} = useInput();\r\n    const {value: phoneNumber, bind: bindPhoneNumber, reset: resetPhoneNumber, assignValue: assignPhoneNumber} = useInput();\r\n    const {value: email, bind: bindEmail, reset: resetEmail, assignValue: assignEmail} = useInput();\r\n\r\n    const {value: addressID, bind: bindAddressID, reset: resetAddressID, assignValue: assignAddressID} = useInput();\r\n    const {value: siteAddress, bind: bindSiteAddress, reset: resetSiteAddress, assignValue: assignSiteAddress} = useInput();\r\n    const {value: siteCity, bind: bindSiteCity, reset: resetSiteCity, assignValue: assignSiteCity} = useInput();\r\n    const {value: siteCode, bind: bindSiteCode, reset: resetSiteCode,assignValue: assignSiteCode} = useInput();\r\n    const {value: siteProv, bind: bindSiteProv, reset: resetSiteProv, assignValue: assignSiteProv} = useInput();\r\n    \r\n    const {value: customerNotes, bind: bindCustomerNotes, reset: resetCustomerNotes, assignValue: assignCustomerNotes} = useInput();\r\n    const {value: installerNotes, bind: bindInstallerNotes, reset: resetInstallerNotes, assignValue: assignInstallerNotes} = useInput();\r\n    const {value: salesman, bind: bindSalesman, reset: resetSalesman, assignValue: assignSalesman} = useInput();\r\n\r\n    const [tax, setTax] = useState(true);\r\n        const [counter, setcounter] = useState(1);\r\n        const [detailKey, setDetailKey] = useState(1);\r\n        const [prodKey, setProdKey] = useState(1);\r\n        const [quotedetails, setquotedetails] = useState([{\r\n                    key:0,\r\n                    details:selectedQuote.details,\r\n                    total:0.00,\r\n                    productArr:[{\r\n                        prodKey:0,\r\n                        product:\"\",\r\n                        notes:\"\",\r\n                        price:0.00\r\n                    }]\r\n                }]);\r\n\r\n    \r\n    \r\n    async function onCustomerSelect(e, option) {\r\n        if ((e == null || e == \"\" || e == undefined)) {\r\n            \r\n        } else {\r\n            assignCustID(option.id)\r\n            assignFirstName(option.first_name)\r\n            assignLastName(option.last_name)\r\n            assignPhoneNumber(option.phone)\r\n            assignEmail(option.email)\r\n            assignBillingAddress(option.address)\r\n            assignCity(option.city)\r\n            assignPostCode(option.postal_code)\r\n            let result = await getCustomerAddresses(option.id);\r\n            let addressList = result.data.map((item) => (\r\n                {\r\n                    value : item.Address,\r\n                    id:item.AddressID,\r\n                    address:item.Address,\r\n                    postal:item.PostalCode,\r\n                    city:item.City,\r\n                    prov:item.Province,\r\n                    region:item.Region\r\n\r\n                }\r\n            ));\r\n            setAddresses(addressList);\r\n        }\r\n    }\r\n\r\n    async function onAddressSelect(e, option){\r\n        if ((e == null || e == \"\" || e == undefined)) {\r\n            \r\n        } else {\r\n            assignAddressID(option.id)\r\n            assignSiteAddress(option.address)\r\n            assignSiteCity(option.city)\r\n            assignSiteProv(option.prov)\r\n            assignSiteCode(option.postal)\r\n        }\r\n    }\r\n    const [formSubmit, setFormSubmit] = useState(false)\r\n    \r\n    const handleSubmit = (evt) => {\r\n\r\n        var payload = \r\n        {\r\n            userInfo:user,\r\n            id:custID,\r\n            addressID: addressID,\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            billing_address: billingAddress,\r\n            city: city,\r\n            post_code: postCode,\r\n            phone_number: phoneNumber,\r\n            email: email,\r\n            site_address: siteAddress,\r\n            site_city: siteCity,\r\n            site_prov:siteProv,\r\n            site_postal:siteCode,\r\n            customer_notes: customerNotes,\r\n            installer_notes: installerNotes,\r\n            details: quotedetails,\r\n            total: getQuoteTotal(quotedetails)\r\n        }\r\n\r\n        dispatch({\r\n            type: \"quote_one\",\r\n            payload: payload\r\n        })\r\n\r\n        props.onSetQuoteFormDataChange(payload);\r\n        reset();\r\n        evt.preventDefault();\r\n\r\n    }\r\n\r\n    \r\n\r\n    const handleSubmitEvent = (values) => {\r\n        console.log((values))\r\n        values.preventDefault();\r\n    }\r\n\r\n    const changeTax = () => {\r\n        if (tax == true){\r\n            setTax(false);\r\n        }\r\n        else if (tax == false){\r\n            setTax(true);\r\n        }\r\n    }        \r\n    const addNewDetail = (e) => {\r\n        e.preventDefault();\r\n        setcounter(counter +1);\r\n        var temp = quotedetails;\r\n        if(temp[temp.length] == 0){\r\n            temp[0] = {\r\n                key:detailKey,\r\n                details:\"\",\r\n                total:0.00,\r\n                productArr:[]\r\n            }\r\n        }\r\n        else{\r\n            temp[temp.length] = {\r\n                key:detailKey,\r\n                details:\"\",\r\n                total:0.00,\r\n                productArr:[]\r\n            }\r\n        }\r\n        setDetailKey(detailKey + 1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleAddProduct = (details,e) => {\r\n        e.preventDefault();\r\n        setcounter(counter + 1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        if(temp[index].productArr.length == 0){\r\n            temp[index].productArr[0] = {\r\n                prodKey:prodKey,\r\n                product:\"\",\r\n                notes:\"\",\r\n                price:0.00\r\n            }\r\n        }\r\n        else{\r\n            temp[index].productArr[temp[index].productArr.length] = {\r\n                prodKey:prodKey,\r\n                product:\"\",\r\n                notes:\"\",\r\n                price:0.00\r\n            }\r\n        }\r\n        setProdKey(prodKey + 1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleRemoveRow = (details, prod ,e) => {\r\n        e.preventDefault();\r\n        setcounter(counter - 1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        var prodIndex = temp[index].productArr.indexOf(prod);\r\n        temp[index].productArr.splice(prodIndex,1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleRemoveDetail = (details,e) => {\r\n        e.preventDefault();\r\n        setcounter(counter -1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        temp.splice(index,1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleDetailChange = (details, e) => {\r\n        details.details = e.target.value\r\n        details.details.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\r\n    }\r\n    const handleProductDetails = (prod, e) => {\r\n        prod.product = e.target.value;\r\n    }\r\n    const handleProductNotes = (prod, e) => {\r\n        prod.notes = e.target.value;\r\n    }\r\n    const handleProductPrice = (prod, e) => {\r\n        if(e.target.value == \"\"){\r\n            e.target.value = 0.00;\r\n        }\r\n        let newPrice = parseFloat(e.target.value);\r\n        let rounded = newPrice.toFixed(2);\r\n        prod.price = rounded;\r\n        setcounter(counter + 1);\r\n    }\r\n\r\n    const renderProducts = (details) => {\r\n        let rows = [];\r\n            if(details.productArr.length !== 0){\r\n                details.productArr.map((prod) => {\r\n\r\n                    rows.push(\r\n                         <tr>\r\n                             <td>\r\n                                 Product:\r\n                                 <input type=\"text\" key={prod.prodKey}  defaultValue={prod.product}\r\n                                    onChange={(e) => {\r\n                                        handleProductDetails(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     />\r\n        \r\n                             </td>\r\n                            <td>\r\n                                Details:\r\n                                <input type=\"text\" key={prod.prodKey} defaultValue={prod.notes}\r\n                                    onChange={(e) => {\r\n                                        handleProductNotes(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     />\r\n                            </td>\r\n                            <td>\r\n                                Price:\r\n                                <input type=\"number\" step=\".01\" key={prod.prodKey} defaultValue={prod.price}\r\n                                    onChange={(e) => {\r\n                                        handleProductPrice(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     defaultValue='0.00'\r\n                                     />\r\n                            </td>\r\n                             <td style={{textAlign:\"right\"}}>\r\n                             <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveRow(details, prod, e)}} >x</Button>\r\n                             </td>\r\n                         </tr>);\r\n                });\r\n            }\r\n            return rows;\r\n    }\r\n    const getTotal = (details) => {\r\n        let total = 0.00;\r\n        details.productArr.map((item) => {\r\n            total = total + parseFloat(item.price);\r\n        });\r\n        if (tax == true){\r\n            total = total * 1.13;\r\n        }\r\n        total = total.toFixed(2);\r\n        details.total = total;\r\n        return total;\r\n    }\r\n    const getQuoteTotal = (detail) => {\r\n        let total = 0.00;\r\n        detail.map((item) => {\r\n            total = total + parseFloat(item.total);\r\n        });\r\n        total = total.toFixed(2);\r\n        return total;\r\n    }\r\n    const renderRows = () => {\r\n        let rows = [];\r\n        if(quotedetails !== []){\r\n            \r\n            quotedetails.map((detail) => {\r\n            rows.push(\r\n            <tr>\r\n            <tr>\r\n            <tr>\r\n            <td colSpan=\"2\">\r\n                    <textarea \r\n                    key={detail.key}\r\n                    cols=\"150\" \r\n                    rows=\"6\" \r\n                    className=\"ant-input\"\r\n                    defaultValue={detail.details}\r\n                    onChange={(e) => {\r\n                            handleDetailChange(detail, e)\r\n                        }}\r\n                    >\r\n                    </textarea>\r\n                </td>\r\n                <td></td>\r\n                <td style={{textAlign:\"right\"}}>\r\n                    <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveDetail(detail,e)}} >Delete</Button>\r\n                </td>\r\n            </tr>\r\n            Products:\r\n            </tr>\r\n                <tr>\r\n                    {renderProducts(detail)}\r\n                </tr>\r\n        <tr>\r\n            <td>\r\n                <Button size=\"sm\" variant=\"primary\" onClick={(e) => {handleAddProduct(detail,e)}}>Add Product</Button>\r\n            </td>\r\n              \r\n        </tr>\r\n              \r\n            <tr>\r\n            <td style={{textAlign:\"right\"}}>\r\n                        Subtotal: {getTotal(detail)}\r\n                        </td>\r\n            </tr>\r\n            </tr>\r\n            );\r\n            \r\n        });\r\n        }\r\n        return rows;\r\n    }\r\n    \r\n\r\n    \r\n    if (isLoading) {\r\n        return <div className=\"App\">Loading...</div>;\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"Quote\" style={{width:\"80%\"}}>\r\n                <h2> {quoteData.name}</h2>\r\n                <div>\r\n                    Select Customer:\r\n                    <AutoComplete \r\n                    onSelect={(e, option) => {onCustomerSelect(e, option)}}\r\n                    style={{ width: 200 }}\r\n                    options={customers}\r\n                    placeholder=\"Enter a customer\"\r\n                    filterOption={(inputValue, option) =>\r\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                      }>    \r\n                    </AutoComplete>\r\n                    <br/>\r\n                    Select Site Address:\r\n                    <AutoComplete\r\n                    onSelect={(e, option) => {onAddressSelect(e, option)}}\r\n                    style={{ width: 200 }}\r\n                    options={addresses}\r\n                    placeholder=\"Choose an address\"\r\n                    filterOption={(inputValue, option) =>\r\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    notFoundContent=\"Choose a customer first or no addresses found\"\r\n                    ></AutoComplete>\r\n                    <br/>\r\n                    <Row gutter={16}>\r\n                        <Col span={10}>\r\n                            <Card title=\"Customer and Billing\" bordered={false}>\r\n                            Customer:<br />\r\n                    <input type=\"text\" className=\"ant-input ant-col-8\" name=\"first_name\"\r\n                            placeholder=\"First Name\" {...bindFirstName} />\r\n                    <input type=\"text\" className=\"ant-input ant-col-8\" name=\"last_name\"\r\n                            placeholder=\"Last Name\" {...bindLastName} />\r\n                    <br/>\r\n                    Address:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"billing_address\"\r\n                            placeholder=\"Billing Address\" {...bindBillingAddress} />\r\n                    <br/>\r\n                    City:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"city\"\r\n                            placeholder=\"contractor city\" {...bindCity} />\r\n\r\n                    <br/>\r\n                    Postal Code:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"postal_code\"\r\n                            placeholder=\"contractor postal code\" {...bindPostCode} />\r\n                    <br/>\r\n                    Phone:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"phone_number\"\r\n                            placeholder=\"contractor phone number\" {...bindPhoneNumber} />\r\n\r\n                    <br/>\r\n                    Email:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"email\"\r\n                            placeholder=\"contractor email\" {...bindEmail} />\r\n                            </Card>\r\n                        </Col>\r\n                         <Col span={10}>\r\n                            <Card title=\"Site Address\" bordered={false}>\r\n                    Address:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"site_address\"\r\n                            placeholder=\"Site Address\" {...bindSiteAddress} />\r\n                    <br/>\r\n                    City:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"site_city\"\r\n                            placeholder=\"Site City\" {...bindSiteCity} />\r\n                    <br/>\r\n                    Province:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"site_prov\"\r\n                            placeholder=\"Site Province\" {...bindSiteProv} />\r\n                            < br/>\r\n                    Postal Code:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"site_code\"\r\n                            placeholder=\"Site Postal Code\" {...bindSiteCode} />\r\n                            </Card>\r\n                        </Col>\r\n                     </Row>\r\n                    <br/>\r\n                    <br/>\r\n                    <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <td>Quote Details and Products:</td>\r\n                            \r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {renderRows()}\r\n                        <tr>\r\n                            <td>\r\n                                <Button onClick={(e) => {addNewDetail(e)}}>Add Details</Button>\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Apply tax <Checkbox defaultChecked = {true} onChange={() => {changeTax()}}></Checkbox>\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Quote Total: ${getQuoteTotal(quotedetails)}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                </table>\r\n\r\n                    Notes to customer:\r\n                    <textarea \r\n                    cols=\"150\" \r\n                    rows=\"3\" \r\n                    className=\"ant-input\"\r\n                    name=\"customer_notes\"\r\n                    defaultValue={selectedQuote.customer_notes}\r\n                    onChange={(e) => {\r\n                        assignCustomerNotes(e.target.value);\r\n                    }  }\r\n                    {...bindCustomerNotes}\r\n                    >\r\n                    </textarea>\r\n\r\n                    <br/>\r\n\r\n                    Notes to installers:\r\n                    <textarea \r\n                    cols=\"150\" \r\n                    rows=\"3\" \r\n                    className=\"ant-input\"\r\n                    name=\"installer_notes\"\r\n                    defaultValue={selectedQuote.installer_notes}\r\n                    onChange={(e) => {\r\n                        assignInstallerNotes(e.target.value);\r\n                    }}\r\n                    {...bindInstallerNotes}\r\n                    >\r\n                    </textarea>\r\n                    <br/>\r\n                    Estimator: {user.FirstName + \" \" + user.LastName} \r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button size=\"md\" variant=\"primary\" type=\"submit\" className=\"ant-btn ant-btn-primary\">Submit</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default QuoteOne;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuotePrint.js",["742","743","744","745","746","747","748","749","750","751","752","753","754","755"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"../../component/quotes/Button\";\r\nimport { useInput } from \"../../hooks/input-hook\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport qData from \"./quoteData.js\";\r\nimport Headerforquoto from \"../headforquote\";\r\nimport Footerforquoto from \"../footer\";\r\nimport { message, Card } from \"antd\";\r\nimport {sendQuote, addNewQuote, addNewDetails, addNewProductLine, getLatestQuote, getLatestDetail} from '../../api/quotes';\r\nimport QuoteEmail from \"../../Components/Email_Templates/quote_template\";\r\nimport {renderEmail} from 'react-html-email';\r\n\r\n\r\nfunction printQuote() {\r\n  var content = document.getElementById(\"printContents\");\r\n  var pri = document.getElementById(\"ifmcontentstoprint\").contentWindow;\r\n  pri.document.open();\r\n  pri.document.write(content.innerHTML);\r\n  pri.document.close();\r\n  pri.focus();\r\n  pri.print();\r\n}\r\n\r\nasync function emailQuote (customer){\r\n  console.log(customer);\r\n  try {\r\n    let result = await addNewQuote(customer)\r\n    let latestQuote = await getLatestQuote()\r\n    let quoteID = latestQuote.data[0].QuoteID;\r\n    customer.details.map(async (detail) => {\r\n      let result = await addNewDetails(detail, quoteID);\r\n      let latestDetail = await getLatestDetail()\r\n      let detailID = latestDetail.data[0].subtotalID;\r\n      detail.productArr.map(async (prod) => {\r\n        let result = await addNewProductLine(prod, quoteID, detailID);\r\n      })\r\n    })\r\n    message.success(\"Quote added\");\r\n  } catch (error) {\r\n    message.error(\"Something dun fucked up\");\r\n    console.log(error);\r\n  }\r\n  try {\r\n    sendQuote(customer.email, renderEmail(<QuoteEmail info={customer}/>))\r\n  } catch (error) {\r\n    console.log(error);\r\n    message.error(\"Whoops\");\r\n  }\r\n\r\n  \r\n  //var content = document.getElementById(\"printContents\");\r\n  //var email = sendQuote(customer.email, content.innerHTML);\r\n  //message.success(\"Email sent\");\r\n}\r\n\r\nfunction QuotePrint(props) {\r\n  let { qid } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  let quotes = qData.quote_data;\r\n  let selectedQuote = parseInt(qid)\r\n    ? quotes.find((d) => {\r\n        return parseInt(d.id) == parseInt(qid);\r\n      })\r\n    : {};\r\n\r\n  if (Object.keys(selectedQuote).length == 0) {\r\n    history.push(`/quotes`);\r\n  }\r\n\r\n  const [quoteData, setQuoteData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setQuoteData(selectedQuote);\r\n  }, [selectedQuote]);\r\n\r\n  const [quoteFormData, setQuoteFormData] = useState(props.quoteFormData);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"printContents\"\r\n        className=\"Quote print-page\"\r\n        style={{ width: \"80%\", margin: \"auto\" }}\r\n      >\r\n        <Headerforquoto />\r\n        <Card>\r\n          <strong>Attention:</strong> {quoteFormData.first_name}{\" \"}\r\n          {quoteFormData.last_name}\r\n          <br /> Address: {quoteFormData.billing_address}\r\n          <br /> City: {quoteFormData.city}\r\n          <br /> Postal Code: {quoteFormData.post_code}\r\n          <br /> Phone: {quoteFormData.phone_number}\r\n          <br /> Email: {quoteFormData.email}\r\n          <br />\r\n        </Card>\r\n        <Card>\r\n          <strong>Site Address</strong>\r\n          <br /> Site Address: {quoteFormData.site_address}\r\n          <br /> Site City: {quoteFormData.site_city}\r\n          <br /> Site Province: {quoteFormData.site_prov}\r\n          <br /> Site Postal Code: {quoteFormData.site_postal}\r\n        </Card>\r\n        <div>\r\n          {quoteFormData.details.length > 0 && (\r\n            <table width=\"100%\" border=\"1\" cellPadding=\"10px\">\r\n              <thead>\r\n                <tr>\r\n                  <td colSpan=\"3\">Quote Details</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {quoteFormData.details.map((item) => {\r\n\r\n                    return (\r\n                      <tr key={item.key} >\r\n                      <tr >\r\n                        <td colSpan=\"3\" style={{width:'100%', minWidth:\"875px\"}}>\r\n                          {item.details}\r\n                        </td>\r\n                        \r\n                      </tr>\r\n                      {item.productArr.map((prod) => {\r\n                        return (\r\n                            <tr key={prod.prodKey}>\r\n                              <td width=\"40%\">\r\n                                {prod.product}\r\n                              </td>\r\n                              <td width=\"40%\">\r\n                                {prod.notes}\r\n                              </td>\r\n                                <td width=\"20%\">\r\n                                  {prod.price}\r\n                                </td>\r\n                              </tr>\r\n                          );\r\n                          })}\r\n                      <tr>\r\n                        <td colSpan=\"3\" style={{textAlign:\"right\"}}>\r\n                          Subtotal:${item.total}\r\n                        </td>\r\n                      </tr>\r\n                      </tr>\r\n                    );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n        <p>Notes to customer: {quoteFormData.customer_notes}</p>\r\n        <p>Notes to installers: {quoteFormData.installer_notes}</p>\r\n        <p>Estimator: {quoteFormData.userInfo.FirstName + \" \" + quoteFormData.userInfo.LastName}</p>\r\n        <p>\r\n        WSIB# Account #1941844 /  Firm # 245166V\r\n        </p>\r\n              <Footerforquoto />\r\n      </div>\r\n      <button onClick={printQuote}> Print this Quote</button>\r\n      <button onClick={() => emailQuote(quoteFormData)}>Submit and send as Email</button> \r\n      <iframe\r\n        id=\"ifmcontentstoprint\"\r\n        style={{ height: \"0px\", width: \"0px\", position: \"absolute\" }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuotePrint;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\FormOne.js",["756","757","758","759","760","761","762","763","764","765"],"import React, { useState, useEffect } from \"react\";\r\nimport CustomSelect from \"../../component/quotes/CustomSelect.js\";\r\nimport ToggleSwitch from \"../../component/quotes/ToggleSwitch.js\";\r\nimport Button from \"../../component/quotes/Button.js\";\r\nimport Modal from \"../../component/quotes/Modal.js\";\r\nimport QuoteOne from \"./QuoteOne.js\";\r\nimport axios from \"axios\";\r\nimport qData from \"./quoteData.js\";\r\n\r\nconst data = qData.quote_data;\r\n\r\nfunction FormOne(props) {\r\n  const [quoteDataId, setQuoteDataId] = useState(props.quoteDataId);\r\n  // const [quoteData, setQuoteData] = useState(\r\n  //     [...data].find((d) => d.id == quoteDataId)\r\n  // );\r\n\r\n  function onSelectChange(e) {\r\n    if (!(e == null || e == \"\" || e == undefined)) {\r\n      props.onSetQuoteDataChange(data.find((d) => d.id == e));\r\n    } else {\r\n      props.onSetQuoteDataChange({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Form\">\r\n      <h2>Quote Selection</h2>\r\n      <form>\r\n        <div>\r\n          <label> Select Quote Type</label>\r\n          <CustomSelect\r\n            data={data}\r\n            quoteDataId={quoteDataId}\r\n            onSelectChange={onSelectChange}\r\n          />\r\n        </div>\r\n      </form>\r\n      {/* { Object.keys(quoteData).length > 0 ? <QuoteOne key={quoteData} quoteData={quoteData} />: null } */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormOne;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Button.js",["766"],"// ./components/Button.js\r\nimport React, { useState } from \"react\";\r\nfunction Button(props) {\r\n  // const [size] = useState(props.size);\r\n  // const [variant] = useState(props.variant);\r\n  return (\r\n    <button class={`ant-btn ant-btn-${props.variant} ant-btn-${props.size}`} onClick={props.onClick}>{props.children}</button>\r\n  );\r\n}\r\nexport default Button;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\CustomSelect.js",["767","768"],"import React, { useState } from \"react\";\r\n\r\nfunction CustomSelect(props) {\r\n\tconst [data] = useState(props.data);\r\n\tconst [quoteDataId, setQuoteDataId] = useState(props.quoteDataId);\r\n\r\n\tfunction onChange(event) {\r\n\t\t// setQuoteDataId(event.target.value);\r\n\t\tif (props.onSelectChange) {\r\n\t\t\tprops.onSelectChange(event.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\tlet options = data.map((d) => (\r\n\t\t<option key={d.id} value={d.id} data={d} >\r\n\t\t\t{d.name}\r\n\t\t</option>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<select\r\n\t\t\tname=\"customSearch\"\r\n\t\t\tclassName=\"custom-search-select\"\r\n\t\t\tonChange={onChange}\r\n\t\t\tplaceholder=\"Select Item\"\r\n\t\t>\r\n\t\t\t<option value=\"\">Select Item</option>\r\n\t\t\t{options}\r\n\t\t</select>\r\n\t);\r\n}\r\nexport default CustomSelect;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Modal.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\ToggleSwitch.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js",["769","770","771"],"import React from \"react\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Switch from 'devextreme-react/switch';\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport SalesTemplate from './SalesTemplate.js'\r\nimport SalesTooltip from './salesTooltip.js';\r\nimport {getEstimates, deleteEstimate, getUsers, updateEstimate, getRegionAPI, sendUpdate, findCustomer} from '../../../api/calendar';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { Modal } from 'antd';\r\nimport UpdateConfirm from '../../Email_Templates/updateConfirm';\r\nimport {renderEmail} from 'react-html-email';\r\n\r\nconst { confirm } = Modal;\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\n\r\nconst dataSource = new CustomStore({\r\n  key: \"EstimateID\",\r\n  load: async () => {\r\n    const data = await getEstimates();\r\n    let formatData = data.data.map((item) => ({\r\n      EstimateID : item.EstimateID,\r\n      CustomerID : item.CustomerID,\r\n      AddressID : item.AddressID,\r\n      UserID : item.UserID,\r\n      CreationDate : item.CreationDate,\r\n      text : item.EstimateInfo,\r\n      RegionID : item.RegionID,\r\n      startDate : timeFormat(item.startDate),\r\n      endDate : timeFormat(item.endDate)\r\n    }));\r\n    return formatData\r\n  },\r\n  update: async (key, values) => {\r\n    let formatData = {\r\n      EstimateID : values.EstimateID,\r\n      CustomerID : values.CustomerID,\r\n      AddressID : values.AddressID,\r\n      UserID : values.UserID,\r\n      CreationDate : values.CreationDate,\r\n      EstimateInfo : values.EstimateInfo,\r\n      RegionID : values.RegionID,\r\n      startDate : timeDeformat(values.startDate),\r\n      endDate : timeDeformat(values.endDate)\r\n  }\r\n    const check = await updateEstimate(key, formatData);\r\n    console.log(check);\r\n    return check;\r\n  },\r\n  remove: async(key) => {\r\n    console.log(`removed ${key}`);\r\n    const data = await deleteEstimate(key);\r\n    return data\r\n  },\r\n  insert: async (key, values) =>{\r\n    console.log(\"attempted insert\");\r\n  },\r\n  onUpdating: (key, values) => {\r\n    confirm({title:\"Send email update to customer?\", onOk() {sendEmailUpdate(values)}, cancelText:\"No\"})\r\n  }\r\n});\r\nconst sendEmailUpdate = async (values) => {\r\n  console.log(values);\r\n  let findCustomerEmail = await findCustomer(values.CustomerID);\r\n  console.log(findCustomerEmail);\r\n  let customerEmail = findCustomerEmail.data[0];\r\n  sendUpdate(customerEmail.Email, renderEmail(<UpdateConfirm estimateInfo = {values}/>));\r\n}\r\n\r\nconst timeFormat = (date) => {\r\n   let newdate = zonedTimeToUtc(new Date(date), 'America/Edmonton');\r\n   var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\n\r\nconst timeDeformat = (date) => {\r\n  let newdate = utcToZonedTime(new Date(date), 'America/Edmonton');\r\n  var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\nconst groups = ['UserID'];\r\n\r\nconst renderResourceCell = (model) => {\r\n  return (\r\n      <b>{model.data.FirstName}</b>\r\n  );\r\n}\r\n\r\nconst onAppointmentDeleting = (e) => {\r\n  console.log(e);\r\n  var cancel = true;\r\n  e.cancel = cancel;\r\n  var r = confirm({title:\"Do you want to delete this appointment?\", onOk(){dataSource.remove(e.appointmentData.EstimateID) }, onCancel(){cancel = true}});\r\n}\r\n\r\nclass SalesCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      groupByDate:false,\r\n      cancel:true,\r\n      userList:\"\",\r\n      regionList:\"\",\r\n      info:false\r\n    };\r\n    \r\n    this.onGroupByDateChanged = this.onGroupByDateChanged.bind(this);\r\n    this.onAppointmentForm = this.onAppointmentForm.bind(this);\r\n    this.salesmanSource = this.salesmanSource.bind(this);\r\n    this.regionSource = this.regionSource.bind(this);\r\n    this.InfoIsHere = this.InfoIsHere.bind(this);\r\n  }\r\n  async InfoIsHere() {\r\n  let regionData = await this.regionSource();\r\n  let userData = await this.salesmanSource();\r\n  this.setState({userList:userData});\r\n  this.setState({regionList:regionData});\r\n  this.setState({info:true});\r\n} \r\n  \r\n  onAppointmentForm(args) {\r\n    args.cancel = true;\r\n  }\r\n  onGroupByDateChanged(args) {\r\n    this.setState({\r\n      groupByDate: args.value\r\n    });\r\n  }\r\n  async regionSource() {\r\n    const data = await getRegionAPI();\r\n    let regionData = data.data.map((item) => ({\r\n      id  : item.RegionID,\r\n      region: item.Region,\r\n      color: item.color\r\n    }))\r\n    console.log(regionData);\r\n    return regionData;\r\n  }\r\n\r\n  async salesmanSource() {\r\n    const data = await getUsers();\r\n    let salesData = data.data.map((item) => ({\r\n      id: item.UserID,\r\n      FirstName : item.FirstName,\r\n      LastName: item.LastName\r\n    }))\r\n    console.log(salesData);\r\n    return salesData;\r\n  }\r\n  componentDidMount(){\r\n    this.InfoIsHere();\r\n}\r\n\r\n \r\n  render() {\r\n    if (this.state.info == false){\r\n        return (\r\n          <p>Loading information...</p>\r\n        )\r\n      }\r\n      else{\r\n\r\n      \r\n    return (\r\n      \r\n      <div>\r\n      <Scheduler\r\n        timeZone=\"America/Edmonton\"\r\n        groups = {groups}\r\n        groupByDate={this.state.groupByDate}\r\n        resourceCellRender={renderResourceCell}\r\n        dataSource={dataSource}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        endDayHour={21}\r\n        appointmentComponent={SalesTemplate}\r\n        //appointmentTooltipComponent={SalesTooltip}\r\n        onAppointmentDeleting={onAppointmentDeleting}\r\n        onAppointmentFormOpening={this.onAppointmentForm}\r\n        >\r\n        <Resource\r\n          dataSource={this.state.userList}\r\n          fieldExpr=\"UserID\"\r\n          >\r\n        </Resource>\r\n        <Resource\r\n          dataSource={this.state.regionList}\r\n          fieldExpr=\"RegionID\"\r\n          useColorAsDefault={true}\r\n        ></Resource>\r\n        </Scheduler>\r\n        <div className=\"options\">\r\n        <div className=\"caption\">Group by Date First</div>\r\n        <div className=\"option\">\r\n          <Switch\r\n            value={ this.state.groupByDate }\r\n            onValueChanged={this.onGroupByDateChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default SalesCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js",["772"],"import React from 'react';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport FoamTemplate from './FoamTemplate.js'\r\n\r\nimport { data, foamData} from './foamData';\r\n\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\n\r\n\r\nclass FoamCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Scheduler\r\n        width\r\n        timeZone=\"America/Los_Angeles\"\r\n        dataSource={data}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        appointmentComponent={FoamTemplate}\r\n        >\r\n        <Resource\r\n          dataSource={foamData}\r\n          fieldExpr=\"id\"\r\n          useColorAsDefault={true}\r\n          >\r\n        </Resource>\r\n        </Scheduler>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FoamCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tabs.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js",["773"],"import React from 'react';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport FillTemplate from './FillTemplate.js'\r\n\r\nimport { data, loosefillData} from './fillData';\r\n\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\n\r\n\r\nclass FillCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Scheduler\r\n        timeZone=\"America/Los_Angeles\"\r\n        dataSource={data}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        appointmentComponent={FillTemplate}\r\n        >\r\n        <Resource\r\n          dataSource={loosefillData}\r\n          fieldExpr=\"id\"\r\n          useColorAsDefault={true}\r\n          >\r\n        </Resource>\r\n        </Scheduler>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FillCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\hooks\\input-hook.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js",["774","775"],"import React from 'react';\r\nimport Query from 'devextreme/data/query';\r\nimport {salesmanData} from './salesData.js';\r\n\r\n\r\n\r\nexport default function SalesTemplate(model) {\r\n  const { appointmentData } = model.data;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {appointmentData.text}</div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tab.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\footer\\index.js",["776","777","778","779"],"import { Center } from \"devextreme-react/map\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst visa = \"https://i.ibb.co/XXWJ82B/visa.png\";\r\nconst master = \"https://i.ibb.co/DgctQDJ/master.png\";\r\nconst express = \"https://i.ibb.co/HhyY0k3/express.png\";\r\n\r\n\r\nexport default function Footerforquote() {\r\n  return (\r\n    <div className=\"footerforqueto\">\r\n      <div className=\"beware\">\r\n        PLEASE BE AWARE THAT POLYURETHANE SPRAY FOAM INSULATION REQUIRES A\r\n        THERMAL BARRIER I.E. DRYWALL, OR FIREPROOFING. ¼ INCH TOLERANCE DURING\r\n        APPLICATION IS REQUIRED.{\" \"}\r\n      </div>\r\n      <div className=\"payment\">\r\n        PAYMENT UPON COMPLETION OF WORK IS REQUIRED IN FULL BY CASH, CHEQUE,\r\n        VISA, MASTERCARD, OR AMERICAN EXPRESS. REITZEL INSULATION DOES NOT GIVE\r\n        TERMS UNLESS PRE-AUTHORIZED PRIOR TO PROJECT START DATE.\r\n      </div>\r\n      <div className=\"cardlogos\">\r\n        <img src={visa}></img>\r\n        <img src={express}></img>\r\n        <img src={master}></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\headforquote\\index.js",["780","781"],"import React from \"react\";\r\nimport \"./index.css\";\r\nconst logo=  \"https://i.ibb.co/FVFjQwV/logo.png\";\r\nconst header = \"https://i.ibb.co/0snCVqq/header.png\";\r\n\r\nexport default function HeadForQuote() {\r\n  return (\r\n    <div className=\"headerforquoto\">\r\n      <img src={header}></img>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quotes.js",["782","783","784"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteCreation.js",["785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../component/quotes/Button\";\r\nimport qData from './quoteData';\r\nimport { AutoComplete, Form, Input, Checkbox } from 'antd';\r\nimport {getCustomers, getCustomerFiltered} from \"../../api/quotes\"\r\n\r\nimport Item from \"antd/lib/list/Item\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { PropertiesPanel } from \"devextreme-react/diagram\";\r\n\r\n\r\n\r\nfunction QuoteCreate(props){\r\n        let quoteData = qData.quote_data;\r\n        const [tax, setTax] = useState(true);\r\n        const [counter, setcounter] = useState(1);\r\n        const [detailKey, setDetailKey] = useState(1);\r\n        const [prodKey, setProdKey] = useState(1);\r\n        const [quotedetails, setquotedetails] = useState([{\r\n                    key:0,\r\n                    details:\"\",\r\n                    total:0.00,\r\n                    productArr:[{\r\n                        prodKey:0,\r\n                        product:\"\",\r\n                        notes:\"\",\r\n                        price:0.00\r\n                    }]\r\n                }]);\r\n        const changeTax = () => {\r\n            if (tax == true){\r\n                setTax(false);\r\n            }\r\n            else if (tax == false){\r\n                setTax(true);\r\n            }\r\n        }        \r\n        const addNewDetail = (e) => {\r\n            e.preventDefault();\r\n            setcounter(counter +1);\r\n            var temp = quotedetails;\r\n            if(temp[temp.length] == 0){\r\n                temp[0] = {\r\n                    key:detailKey,\r\n                    details:\"\",\r\n                    total:0.00,\r\n                    productArr:[]\r\n                }\r\n            }\r\n            else{\r\n                temp[temp.length] = {\r\n                    key:detailKey,\r\n                    details:\"\",\r\n                    total:0.00,\r\n                    productArr:[]\r\n                }\r\n            }\r\n            setDetailKey(detailKey + 1);\r\n            setquotedetails(temp);\r\n            console.log(quotedetails);\r\n        }\r\n        const handleAddProduct = (details,e) => {\r\n            e.preventDefault();\r\n            setcounter(counter + 1);\r\n            var temp = quotedetails;\r\n            var index = temp.indexOf(details);\r\n            if(temp[index].productArr.length == 0){\r\n                temp[index].productArr[0] = {\r\n                    prodKey:prodKey,\r\n                    product:\"\",\r\n                    notes:\"\",\r\n                    price:0.00\r\n                }\r\n            }\r\n            else{\r\n                temp[index].productArr[temp[index].productArr.length] = {\r\n                    prodKey:prodKey,\r\n                    product:\"\",\r\n                    notes:\"\",\r\n                    price:0.00\r\n                }\r\n            }\r\n            setProdKey(prodKey + 1);\r\n            setquotedetails(temp);\r\n        }\r\n        const handleRemoveRow = (details, prod ,e) => {\r\n            e.preventDefault();\r\n            setcounter(counter - 1);\r\n            var temp = quotedetails;\r\n            var index = temp.indexOf(details);\r\n            var prodIndex = temp[index].productArr.indexOf(prod);\r\n            temp[index].productArr.splice(prodIndex,1);\r\n            setquotedetails(temp);\r\n        }\r\n        const handleRemoveDetail = (details,e) => {\r\n            e.preventDefault();\r\n            setcounter(counter -1);\r\n            var temp = quotedetails;\r\n            var index = temp.indexOf(details);\r\n            temp.splice(index,1);\r\n            setquotedetails(temp);\r\n        }\r\n        const handleDetailChange = (details, e) => {\r\n            details.details = e.target.value\r\n            details.details.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\r\n        }\r\n        const handleProductDetails = (prod, e) => {\r\n            prod.product = e.target.value;\r\n        }\r\n        const handleProductNotes = (prod, e) => {\r\n            prod.notes = e.target.value;\r\n        }\r\n        const handleProductPrice = (prod, e) => {\r\n            let newPrice = parseFloat(e.target.value);\r\n            let rounded = newPrice.toFixed(2);\r\n            prod.price = rounded;\r\n        }\r\n\r\n        const renderProducts = (details) => {\r\n            let rows = [];\r\n                if(details.productArr.length !== 0){\r\n                    details.productArr.map((prod) => {\r\n\r\n                        rows.push(\r\n                             <tr>\r\n                                 <td>\r\n                                     Product:\r\n                                     <input type=\"text\" key={prod.prodKey}  defaultValue={prod.product}\r\n                                        onChange={(e) => {\r\n                                            handleProductDetails(prod, e);\r\n                                         }}\r\n                                         className=\"ant-input\"\r\n                                         />\r\n            \r\n                                 </td>\r\n                                <td>\r\n                                    Details:\r\n                                    <input type=\"text\" key={prod.prodKey} defaultValue={prod.notes}\r\n                                        onChange={(e) => {\r\n                                            handleProductNotes(prod, e);\r\n                                         }}\r\n                                         className=\"ant-input\"\r\n                                         />\r\n                                </td>\r\n                                <td>\r\n                                    Price:\r\n                                    <input type=\"number\" key={prod.prodKey} defaultValue={prod.price}\r\n                                        onChange={(e) => {\r\n                                            handleProductPrice(prod, e);\r\n                                         }}\r\n                                         className=\"ant-input\"\r\n                                         defaultValue='0.00'\r\n                                         />\r\n                                </td>\r\n                                 <td style={{textAlign:\"right\"}}>\r\n                                 <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveRow(details, prod, e)}} >x</Button>\r\n                                 </td>\r\n                             </tr>);\r\n                    });\r\n                }\r\n                return rows;\r\n        }\r\n        const getTotal = (details) => {\r\n            let total = 0.00;\r\n            details.productArr.map((item) => {\r\n                total = total + parseFloat(item.price);\r\n            });\r\n            if (tax == true){\r\n                total = total * 1.13;\r\n            }\r\n            total = total.toFixed(2);\r\n            details.total = total;\r\n            return total;\r\n        }\r\n        const getQuoteTotal = (detail) => {\r\n            let total = 0.00;\r\n            detail.map((item) => {\r\n                total = total + parseFloat(item.total);\r\n            });\r\n            total = total.toFixed(2);\r\n            return total;\r\n        }\r\n        const renderRows = () => {\r\n            let rows = [];\r\n            if(quotedetails !== []){\r\n                \r\n                quotedetails.map((detail) => {\r\n                rows.push(\r\n                <tr>\r\n                <tr>\r\n                <tr>\r\n                <td colSpan=\"2\">\r\n                        <textarea \r\n                        key={detail.key}\r\n                        cols=\"150\" \r\n                        rows=\"6\" \r\n                        className=\"ant-input\"\r\n                        defaultValue={detail.details}\r\n                        onChange={(e) => {\r\n                                handleDetailChange(detail, e)\r\n                            }}\r\n                        >\r\n                        </textarea>\r\n                    </td>\r\n                    <td></td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                        <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveDetail(detail,e)}} >Delete</Button>\r\n                    </td>\r\n                </tr>\r\n                Products:\r\n                </tr>\r\n                    <tr>\r\n                        {renderProducts(detail)}\r\n                    </tr>\r\n            <tr>\r\n                  <Button size=\"sm\" variant=\"primary\" onClick={(e) => {handleAddProduct(detail,e)}}>Add Product</Button>\r\n            </tr>\r\n                  \r\n                <tr>\r\n                <td style={{textAlign:\"right\"}}>\r\n                            Subtotal: {getTotal(detail)}\r\n                            </td>\r\n                </tr>\r\n                </tr>\r\n                );\r\n                \r\n            });\r\n            }\r\n            return rows;\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n                <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <td>Quote Details and Products:</td>\r\n                            \r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {renderRows()}\r\n                        <Button onClick={(e) => {addNewDetail(e)}}>Add Details</Button>\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Apply tax <Checkbox defaultChecked = {true} onChange={() => {changeTax()}}></Checkbox>\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Quote Total: ${getQuoteTotal(quotedetails)}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default QuoteCreate;",["806","807"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\confirmation.js",["808","809","810"],"import React from 'react';\r\nimport { Email, Item, A} from 'react-html-email';\r\nconst header = \"https://i.ibb.co/0snCVqq/header.png\";\r\nconst footer = \"https://ibb.co/kHTHdfL\";\r\n\r\nconst { format} = require(\"date-fns-tz\");\r\n\r\nfunction Confirmation(props){\r\n    \r\n    return(\r\n        <Email title=\"Thank you for choosing Reitzel!\">\r\n            <Item>\r\n                <img src={header}></img>\r\n            </Item>\r\n            <Item>\r\n                <p>Hi {props.customerInfo.FirstName} {props.customerInfo.LastName},</p>\r\n            <br/>\r\n            <p>Thank you for choosing Reitzel Insulation! Here are the details for your booking:</p>\r\n            <p>Job Type: {props.estimateInfo.JobType}</p>\r\n            <p>Date: {format(new Date(props.estimateInfo.startDate),\"MMMM do',' yyyy\")}</p>\r\n            <p> Approximate Arrival Time:  {format(new Date(props.estimateInfo.startDate),\"K:mm\")}</p>\r\n            <br />\r\n            <p>Included is some information on \"How to Prepare your Home Before Your Insulation Arrives.\"</p>\r\n            <br/>\r\n            </Item>\r\n            <Item>\r\n            Download document:\r\n                <a href=\"src\\assets\\Customer Info Sheet _ Reitzel Insulation.pdf\" download=\"Customer_Info_Sheet_Reitzel_Insulation\">Customer Info</a>\r\n                <br/>\r\n                Download COVID-19 protocols:\r\n                <a href=\"src\\assets\\COVID-19.docx\" download=\"COVID-19\">COVID-19 Info</a>\r\n            </Item>\r\n            <Item>\r\n               If you have any questions after reading this document, please reply to this email or call the office at 519-886-6100.\r\n            Thank you for your business!\r\n            Regards,\r\n\r\n            The Reitzel Team \r\n            </Item>\r\n\r\n\r\n        </Email>\r\n    )\r\n}\r\n\r\nexport default Confirmation;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\updateConfirm.js",["811"],"import React from 'react';\r\nimport { Email, Item, A} from 'react-html-email';\r\nconst header = \"https://i.ibb.co/0snCVqq/header.png\";\r\n\r\nconst { format} = require(\"date-fns-tz\");\r\n\r\nfunction Confirmation(props){\r\n    \r\n    return(\r\n        <Email title=\"\">\r\n            <Item>\r\n            <img src={header}></img>\r\n            </Item>\r\n            <Item>\r\n            <br />\r\n            <p>There has been a change in your appointment time. Here are the new details for your booking:</p>\r\n            <p>Job Type: {props.estimateInfo.JobType}</p>\r\n            <p>Date: {format(new Date(props.estimateInfo.startDate),\"MMMM do',' yyyy\")}</p>\r\n            <p> Approximate Arrival Time:  {format(new Date(props.estimateInfo.startDate),\"K:mm\")}</p>\r\n            <br />\r\n            </Item>\r\n            <Item>\r\n            Download document:<br />\r\n            <A href=\"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\assets\\Customer Info Sheet _ Reitzel Insulation.pdf\" download=\"Customer_Info_Sheet_Reitzel_Insulation\">Customer Info</A>\r\n                <br/>\r\n                Download COVID-19 protocols:<br />\r\n                <A href=\"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\assets\\COVID-19.docx\" download=\"COVID-19\">COVID-19 Info</A>\r\n\r\n            </Item>\r\n            <Item>\r\n               If you have any questions after reading this document, please reply to my email or call the office at 519-886-6100.\r\n            Thank you for your business!\r\n            Regards,\r\n\r\n            The Reitzel Team \r\n            </Item>\r\n\r\n            \r\n\r\n\r\n        </Email>\r\n    )\r\n}\r\n\r\nexport default Confirmation;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Email_Templates\\quote_template.js",["812","813","814","815"],"import { findProps } from 'devextreme-react/core/template';\r\nimport React from 'react';\r\nimport Text from 'react';\r\nimport { Email, Item, Box, Image} from 'react-html-email';\r\nimport {Card} from 'antd';\r\nconst header = \"https://i.ibb.co/0snCVqq/header.png\";\r\nconst footer = \"https://ibb.co/kHTHdfL\";\r\n\r\n\r\n\r\nfunction QuoteEmail (props) {\r\n  let customer = props.info;\r\nreturn (\r\n  <Email title=\"Reitzel Insulation Quote Details\"> \r\n    <Box>\r\n    <Image src={header} alt=\"Reitzel Insulation\" width={875} height={100}>\r\n    </Image>\r\n      <Item align=\"left\">\r\n     \r\n          <strong>Attention:</strong> {customer.first_name}{\" \"}\r\n          {customer.last_name}\r\n          <br /> Address: {customer.billing_address}\r\n          <br /> City: {customer.city}\r\n          <br /> Postal Code: {customer.post_code}\r\n          <br /> Phone: {customer.phone_number}\r\n          <br /> Email: {customer.email}\r\n          <br />\r\n\r\n          <strong>Site Address</strong>\r\n          <br /> Site Address: {customer.site_address}\r\n          <br /> Site City: {customer.site_city}\r\n          <br /> Site Province: {customer.site_prov}\r\n          <br /> Site Postal Code: {customer.site_postal}\r\n\r\n      </Item>\r\n      <div>\r\n          {customer.details.length > 0 && (\r\n            <table width=\"100%\" border=\"1\" cellPadding=\"10px\">\r\n              <thead>\r\n                <tr>\r\n                  <td colSpan=\"3\">Quote Details</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {customer.details.map((item) => {\r\n\r\n                    return (\r\n                      <tr key={item.key}>\r\n                      <tr>\r\n                        <td colSpan=\"3\" style={{width:'100%', minWidth:\"875px\"}}>\r\n                          {item.details}\r\n                        </td>\r\n                        \r\n                      </tr>\r\n                      {item.productArr.map((prod) => {\r\n                        return (\r\n                            <tr key={prod.prodKey}>\r\n                              <td>\r\n                                {prod.product}\r\n                              </td>\r\n                              <td>\r\n                                {prod.notes}\r\n                              </td>\r\n                                <td>\r\n                                  {prod.price}\r\n                                </td>\r\n                              </tr>\r\n                          );\r\n                          })}\r\n                      <tr>\r\n                        <td colSpan=\"3\" style={{textAlign:\"right\"}}>\r\n                          Subtotal:${item.total}\r\n                        </td>\r\n                      </tr>\r\n                      </tr>\r\n                    );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n    </Box>\r\n  </Email>\r\n)\r\n}\r\n\r\nexport default QuoteEmail;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteEdit.js",["816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876"],"import { getAddressID, getCustomerID, getQuoteDetails, getUserID, getProductList, getQuoteID, updateQuote, updateDetail, updateProduct, deleteProduct, deleteDetail } from \"../../api/quoteEditAPI\";\r\nimport {addNewDetails, addNewProductLine} from '../../api/quotes';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Button from \"../../component/quotes/Button\";\r\nimport {useInput} from '../../hooks/input-hook';\r\nimport {Row, Col, Card, Checkbox} from 'antd';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nfunction QuoteEdit (props) {\r\n    let quoteID = useRouteMatch('/quoteinfo/:qid').params.qid;\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const {value, bind, reset} = useInput('');\r\n    const [quoteData, setQuoteData] = useState([]);\r\n    const [quoteDetail, setQuoteDetail] = useState([]);\r\n    const [customerData, setCustomerData] = useState([]);\r\n    const [addressData, setAddressData] = useState([]);\r\n    const [userData, setUserData] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [detailKey, setDetailKey] = useState(0);\r\n    const [prodKey, setProdKey] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let quote = await getQuoteID(quoteID);\r\n            let quoteInfo = quote.data[0];\r\n            setQuoteData(quoteInfo);\r\n            let customerInfo = await getCustomerID(quoteInfo.CustomerID);\r\n            setCustomerData(customerInfo.data[0]);\r\n            console.log(customerInfo.data[0]);\r\n            let addressInfo = await getAddressID(quoteInfo.AddressID);\r\n            setAddressData(addressInfo.data[0]);\r\n            let detailList = await getQuoteDetails(quoteInfo.QuoteID);\r\n            setQuoteDetail(detailList.data);\r\n            console.log(detailList.data);\r\n            let products = await getProductList(quoteInfo.QuoteID);\r\n            setProductList(products.data);\r\n            console.log(products.data);\r\n            let user = await getUserID(quoteInfo.UserID);\r\n            setUserData(user.data[0]);\r\n            console.log(user.data[0]);\r\n            createDetails(detailList.data, products.data);\r\n            setText(customerInfo.data[0], addressInfo.data[0], quoteInfo, user.data[0]);            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n        setcounter(counter + 1);\r\n        console.log(quotedetails);\r\n        },[]);\r\n \r\n\r\n    const createDetails = (detlist, prodlist) => {\r\n        let temp = quotedetails;\r\n        detlist.map((detail) => {\r\n           let detailObj = {\r\n                    id: detail.subtotalID,\r\n                    key:detailKey,\r\n                    details:detail.subtotalNotes,\r\n                    total:detail.subtotalAmount,\r\n                    productArr:[]\r\n                \r\n            }\r\n            setDetailKey(detailKey + 1);\r\n            prodlist.map((prod) => {\r\n                if(prod.subtotalID === detail.subtotalID){\r\n                    let prodObj = {\r\n                        id:prod.QuoteLineID,\r\n                        key:prodKey,\r\n                        product:prod.Product,\r\n                        notes:prod.Notes,\r\n                        price:prod.Subtotal\r\n                    }\r\n                    if(detailObj.productArr.length === 0){\r\n                        detailObj.productArr[0] =prodObj;\r\n                    }\r\n                    else{\r\n                        detailObj.productArr[detailObj.productArr.length] = prodObj;\r\n                    }\r\n                    setProdKey(prodKey + 1);\r\n                }\r\n            })\r\n            if(temp.length === 0){\r\n                temp[0] = detailObj;\r\n            }\r\n            else{\r\n                temp[temp.length] = detailObj;\r\n            }\r\n            setquotedetails(temp);\r\n        });        \r\n    }\r\n    const setText = (customerInfo, addressInfo, quoteInfo, userInfo) => {\r\n        assignCustID(customerInfo.CustomerID);\r\n        assignFirstName(customerInfo.CustFirstName);\r\n        assignLastName(customerInfo.CustLastName);\r\n        assignPhoneNumber(customerInfo.Phone);\r\n        assignEmail(customerInfo.Email);\r\n        assignBillingAddress(customerInfo.BillingAddress);\r\n        assignCity(customerInfo.CustCity);\r\n        assignPostCode(customerInfo.CustPostalCode);\r\n        assignSiteAddress(addressInfo.Address);\r\n        assignSiteCity(addressInfo.City);\r\n        assignSiteCode(addressInfo.PostalCode);\r\n        assignSiteProv(addressInfo.Province);\r\n        assignCustomerNotes(quoteInfo.notesCustomers);\r\n        assignInstallerNotes(quoteInfo.notesInstallers);\r\n        assignUserFirstName(userInfo.FirstName);\r\n        assignUserLastName(userInfo.LastName);\r\n\r\n    setcounter(counter + 1);\r\n    }\r\n\r\n    const {value: custID, bind: bindCustID, reset: resetCustID, assignValue: assignCustID} = useInput();\r\n    const {value: firstName, bind: bindFirstName, reset: resetFirstName,assignValue: assignFirstName} = useInput();\r\n    const {value: lastName, bind: bindLastName, reset: resetLastName,assignValue: assignLastName} = useInput();\r\n    const {value: billingAddress, bind: bindBillingAddress, reset: resetBillingAddress, assignValue: assignBillingAddress} = useInput();\r\n    const {value: city, bind: bindCity, reset: resetCity, assignValue: assignCity} = useInput();\r\n    const {value: postCode, bind: bindPostCode, reset: resetPostCode,assignValue: assignPostCode} = useInput();\r\n    const {value: phoneNumber, bind: bindPhoneNumber, reset: resetPhoneNumber, assignValue: assignPhoneNumber} = useInput();\r\n    const {value: email, bind: bindEmail, reset: resetEmail, assignValue: assignEmail} = useInput();\r\n\r\n    const {value: addressID, bind: bindAddressID, reset: resetAddressID, assignValue: assignAddressID} = useInput();\r\n    const {value: siteAddress, bind: bindSiteAddress, reset: resetSiteAddress, assignValue: assignSiteAddress} = useInput();\r\n    const {value: siteCity, bind: bindSiteCity, reset: resetSiteCity, assignValue: assignSiteCity} = useInput();\r\n    const {value: siteCode, bind: bindSiteCode, reset: resetSiteCode,assignValue: assignSiteCode} = useInput();\r\n    const {value: siteProv, bind: bindSiteProv, reset: resetSiteProv, assignValue: assignSiteProv} = useInput();\r\n    \r\n    const {value: customerNotes, bind: bindCustomerNotes, reset: resetCustomerNotes, assignValue: assignCustomerNotes} = useInput();\r\n    const {value: installerNotes, bind: bindInstallerNotes, reset: resetInstallerNotes, assignValue: assignInstallerNotes} = useInput();\r\n\r\n    const {value: userFirstName, bind: bindUserFirstName, reset: resetUserFirstName, assignValue: assignUserFirstName} = useInput();\r\n    const {value: userLastName, bind: bindUserLastName, reset: resetUserLastName, assignValue: assignUserLastName} = useInput();\r\n\r\n    const [tax, setTax] = useState(true);\r\n    const [counter, setcounter] = useState(1);\r\n    const [quotedetails, setquotedetails] = useState([]);\r\n    \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        var quoteInfo = \r\n        {\r\n            id:quoteID,\r\n            customer_notes: customerNotes,\r\n            installer_notes: installerNotes,\r\n            \r\n            total: getQuoteTotal(quotedetails)\r\n        }\r\n        console.log('details',quotedetails);\r\n        await updateQuote(quoteInfo);\r\n        quotedetails.map(async (details) => {\r\n            if(details.id !== null){\r\n                await updateDetail(details).then(() => {\r\n                details.productArr.map(async (prod) => {\r\n                    if(prod.id !== null){\r\n                        console.log(\"prod found\");\r\n                        let prodEdit = await updateProduct(prod);\r\n                    } \r\n                    else{\r\n                        console.log(\"prod not found\");\r\n                        let newProd = await addNewProductLine(prod, quoteID, details.id);\r\n                    }\r\n                });\r\n            });\r\n                \r\n\r\n            }\r\n            else{\r\n                await addNewDetails(details, quoteID).then(() => {\r\n                     details.productArr.map(async (prod) => {\r\n                    if(prod.id !== null){\r\n                        let prodEdit = await updateProduct(prod);\r\n                    } \r\n                    else{\r\n                        let newProd = await addNewProductLine(prod, quoteID, details.id);\r\n                    }\r\n                });\r\n                });\r\n               \r\n            }\r\n        })\r\n    }\r\n\r\n    const changeTax = () => {\r\n        if (tax == true){\r\n            setTax(false);\r\n        }\r\n        else if (tax == false){\r\n            setTax(true);\r\n        }\r\n    }        \r\n    const addNewDetail = (e) => {\r\n        e.preventDefault();\r\n        setcounter(counter +1);\r\n        var temp = quotedetails;\r\n        if(temp[temp.length] == 0){\r\n            temp[0] = {\r\n                id:null,\r\n                key:detailKey,\r\n                details:\"\",\r\n                total:0.00,\r\n                productArr:[]\r\n            }\r\n        }\r\n        else{\r\n            temp[temp.length] = {\r\n                id:null,\r\n                key:detailKey,\r\n                details:\"\",\r\n                total:0.00,\r\n                productArr:[]\r\n            }\r\n        }\r\n        setDetailKey(detailKey + 1);\r\n        setquotedetails(temp);\r\n        console.log(quotedetails);\r\n    }\r\n    const handleAddProduct = (details,e) => {\r\n        e.preventDefault();\r\n        setcounter(counter + 1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        if(temp[index].productArr.length == 0){\r\n            temp[index].productArr[0] = {\r\n                id:null,\r\n                prodKey:prodKey,\r\n                product:\"\",\r\n                notes:\"\",\r\n                price:0.00\r\n            }\r\n        }\r\n        else{\r\n            temp[index].productArr[temp[index].productArr.length] = {\r\n                id:null,\r\n                prodKey:prodKey,\r\n                product:\"\",\r\n                notes:\"\",\r\n                price:0.00\r\n            }\r\n        }\r\n        setProdKey(prodKey + 1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleRemoveRow = async(details, prod ,e) => {\r\n        e.preventDefault();\r\n        console.log(prod.id);\r\n        await deleteProduct(prod.id);\r\n        setcounter(counter - 1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        var prodIndex = temp[index].productArr.indexOf(prod);\r\n        temp[index].productArr.splice(prodIndex,1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleRemoveDetail = async(details,e) => {\r\n        e.preventDefault();\r\n        console.log(details.id);\r\n        details.productArr.forEach(async element => {\r\n            console.log(element.id);\r\n            await deleteProduct(element.id);\r\n        });\r\n        await deleteDetail(details.id);\r\n        setcounter(counter -1);\r\n        var temp = quotedetails;\r\n        var index = temp.indexOf(details);\r\n        temp.splice(index,1);\r\n        setquotedetails(temp);\r\n    }\r\n    const handleDetailChange = (details, e) => {\r\n        details.details = e.target.value\r\n        details.details.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\r\n    }\r\n    const handleProductDetails = (prod, e) => {\r\n        prod.product = e.target.value;\r\n    }\r\n    const handleProductNotes = (prod, e) => {\r\n        prod.notes = e.target.value;\r\n    }\r\n    const handleProductPrice = (prod, e) => {\r\n        if(e.target.value == \"\"){\r\n            e.target.value = 0.00;\r\n        }\r\n        let newPrice = parseFloat(e.target.value);\r\n        let rounded = newPrice.toFixed(2);\r\n        prod.price = rounded;\r\n        setcounter(counter + 1);\r\n    }\r\n    const renderProducts = (details) => {\r\n        let rows = [];\r\n            if(details.productArr.length !== 0){\r\n                details.productArr.map((prod) => {\r\n\r\n                    rows.push(\r\n                         <tr>\r\n                             <td>\r\n                                 Product:\r\n                                 <input type=\"text\" key={prod.prodKey}  defaultValue={prod.product}\r\n                                    onChange={(e) => {\r\n                                        handleProductDetails(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     />\r\n        \r\n                             </td>\r\n                            <td>\r\n                                Details:\r\n                                <input type=\"text\" key={prod.prodKey} defaultValue={prod.notes}\r\n                                    onChange={(e) => {\r\n                                        handleProductNotes(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     />\r\n                            </td>\r\n                            <td>\r\n                                Price:\r\n                                <input type=\"number\" step=\".01\" key={prod.prodKey} defaultValue={prod.price}\r\n                                    onChange={(e) => {\r\n                                        handleProductPrice(prod, e);\r\n                                     }}\r\n                                     className=\"ant-input\"\r\n                                     />\r\n                            </td>\r\n                             <td style={{textAlign:\"right\"}}>\r\n                             <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveRow(details, prod, e)}} >x</Button>\r\n                             </td>\r\n                         </tr>);\r\n                });\r\n            }\r\n            return rows;\r\n    }\r\n    const getTotal = (details) => {\r\n        let total = 0.00;\r\n        details.productArr.map((item) => {\r\n            total = total + parseFloat(item.price);\r\n        });\r\n        if (tax == true){\r\n            total = total * 1.13;\r\n        }\r\n        total = total.toFixed(2);\r\n        details.total = total;\r\n        return total;\r\n    }\r\n    const getQuoteTotal = (detail) => {\r\n        let total = 0.00;\r\n        detail.map((item) => {\r\n            total = total + parseFloat(item.total);\r\n        });\r\n        total = total.toFixed(2);\r\n        return total;\r\n    }\r\n    const renderRows = () => {\r\n        let rows = [];\r\n        if(quotedetails.length > 0){\r\n            \r\n            quotedetails.map((detail) => {\r\n            rows.push(\r\n            <tr>\r\n            <tr>\r\n            <tr>\r\n            <td colSpan=\"2\">\r\n                    <textarea \r\n                    key={detail.key}\r\n                    cols=\"150\" \r\n                    rows=\"6\" \r\n                    className=\"ant-input\"\r\n                    defaultValue={detail.details}\r\n                    onChange={(e) => {\r\n                            handleDetailChange(detail, e)\r\n                        }}\r\n                    >\r\n                    </textarea>\r\n                </td>\r\n                <td></td>\r\n                <td style={{textAlign:\"right\"}}>\r\n                    <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveDetail(detail,e)}} >Delete</Button>\r\n                </td>\r\n            </tr>\r\n            Products:\r\n            </tr>\r\n                <tr>\r\n                    {renderProducts(detail)}\r\n                </tr>\r\n        <tr>\r\n            <td>\r\n                <Button size=\"sm\" variant=\"primary\" onClick={(e) => {handleAddProduct(detail,e)}}>Add Product</Button>\r\n            </td>\r\n              \r\n        </tr>\r\n              \r\n            <tr>\r\n            <td style={{textAlign:\"right\"}}>\r\n                        Subtotal: {getTotal(detail)}\r\n                        </td>\r\n            </tr>\r\n            </tr>\r\n            );\r\n            \r\n        });\r\n        }\r\n        return rows;\r\n    }\r\n    \r\n\r\n    \r\n    if (isLoading) {\r\n        return <div className=\"App\">Loading...</div>;\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"Quote\" style={{width:\"80%\"}}>\r\n                <div>\r\n                    <Row gutter={16}>\r\n                        <Col span={10}>\r\n                            <Card title=\"Customer and Billing\" bordered={false}>\r\n                            Customer:<br />\r\n                    <p>{firstName} {lastName}</p>\r\n                    Address:\r\n                    <p>{billingAddress}</p>\r\n                    City:\r\n                    <p>{city}</p>\r\n                    Postal Code:\r\n                    <p>{postCode}</p>\r\n                    Phone:\r\n                    <p>{phoneNumber}</p>\r\n                    Email:\r\n                    <p>{email}</p>\r\n                            </Card>\r\n                        </Col>\r\n                         <Col span={10}>\r\n                            <Card title=\"Site Address\" bordered={false}>\r\n                    Address:\r\n                    <p>{siteAddress}</p>\r\n                    City:\r\n                    <p>{siteCity}</p>\r\n                    Province:\r\n                    <p>{siteProv}</p>\r\n                    Postal Code:\r\n                    <p>{siteCode}</p>\r\n                            </Card>\r\n                        </Col>\r\n                     </Row>\r\n                    <br/>\r\n                    <br/>\r\n                    <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <td>Quote Details and Products:</td>\r\n                            \r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {renderRows()}\r\n                        <tr>\r\n                            <td>\r\n                                <Button onClick={(e) => {addNewDetail(e)}}>Add Details</Button>\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Apply tax <Checkbox defaultChecked = {true} onChange={() => {changeTax()}}></Checkbox>\r\n                                </td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td style={{textAlign:\"right\"}}>\r\n                                    Quote Total: ${getQuoteTotal(quotedetails)}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                </table>\r\n\r\n                    Notes to customer:\r\n                    <textarea \r\n                    cols=\"150\" \r\n                    rows=\"3\" \r\n                    className=\"ant-input\"\r\n                    name=\"customer_notes\"\r\n                    defaultValue={quoteData.customer_notes}\r\n                    onChange={(e) => {\r\n                        assignCustomerNotes(e.target.value);\r\n                    }  }\r\n                    {...bindCustomerNotes}\r\n                    >\r\n                    </textarea>\r\n\r\n                    <br/>\r\n\r\n                    Notes to installers:\r\n                    <textarea \r\n                    cols=\"150\" \r\n                    rows=\"3\" \r\n                    className=\"ant-input\"\r\n                    name=\"installer_notes\"\r\n                    defaultValue={quoteData.installer_notes}\r\n                    onChange={(e) => {\r\n                        assignInstallerNotes(e.target.value);\r\n                    }}\r\n                    {...bindInstallerNotes}\r\n                    >\r\n                    </textarea>\r\n                    <br/>\r\n                    <p>Estimator: {userFirstName + \" \" + userLastName}</p>< br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    \r\n                    <Button size=\"md\" variant=\"primary\" type=\"submit\" className=\"ant-btn ant-btn-primary\">Update Quote</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default QuoteEdit;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quoteEditAPI.js",["877"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteList.js",["878","879","880","881","882","883","884","885","886","887","888","889","890","891"],"import React, {useEffect, setState, useState} from 'react';\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select} from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {getAllInfo, getDetails, getProducts, SearchAllInfo} from \"../../api/quoteEditAPI\";\r\nimport { getUser } from '../../util/storage';\r\nconst {Search} = Input;\r\nconst {format } = require('date-fns-tz')\r\n\r\n  function QuoteList() {\r\n  let history = useHistory();\r\n  let user = getUser();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const currentDate = new Date();\r\n  const [formData, setFormData] = useState([]);\r\n  const [testData, setTestData] = useState([]);\r\n  const [detailData, setDetailData] = useState([]);\r\n  const [prodData, setProdData] = useState([]);\r\n\r\n    useEffect(async() => {\r\n          const func = async () => {\r\n          getAllInfo().then((result) => {\r\n            setTestData(result.data);\r\n          });\r\n        }\r\n          getDetails().then((item) => {\r\n            setDetailData(item.data);\r\n          });\r\n          getProducts().then((item) => {\r\n            setProdData(item.data);\r\n          })\r\n        func();\r\n        \r\n        if(testData !== []){\r\n          setLoaded(true);\r\n        }\r\n        \r\n      }, []);\r\n\r\n      const getUserQuotes = (list) => {\r\n        let newList = [];\r\n        list.map((item) => {\r\n          if(item.UserID === user.UserID){\r\n            newList.push(item);\r\n          }\r\n        });\r\n        return newList;\r\n      }\r\n    const getDetailsByID = (id) => {\r\n        let array = [];\r\n        let arr = [];\r\n        detailData.map((item) => {\r\n          if(item.quoteID === id){\r\n            array.push({\r\n              quoteID:item.quoteID,\r\n              id:item.subtotalID,\r\n              subtotalNotes:item.subtotalNotes,\r\n              total:item.subtotalAmount,\r\n              arr:getProductArr(item.subtotalID)\r\n            });\r\n          }\r\n        });\r\n        return array;\r\n    }\r\n    const checkDate = (date) => {\r\n      let returnDate = \"\";\r\n      if(date === \"December 31st, 1969\"){\r\n      }\r\n      else{\r\n        returnDate = date;\r\n    }\r\n    return returnDate;\r\n    }\r\n    const getProductArr = (id) => {\r\n      let array = [];\r\n      prodData.map((item) => {\r\n             if(item.subtotalID === id){\r\n                  array.push({\r\n                    prodID:item.QuoteLineID,\r\n                    product:item.Product,\r\n                    notes:item.Notes,\r\n                    price:item.Subtotal\r\n                  })\r\n              }\r\n          });\r\n          return array;\r\n    }\r\n    const renderDetails = () => {\r\n      let rows = [];\r\n      formData.map((item) => {\r\n        rows.push(<Card title=\"Details\" bordered={true} type=\"inner\">\r\n          <p>{item.subtotalNotes}</p>\r\n          <strong>Products</strong>\r\n          <table style={{width:'100%'}}>\r\n            <tbody>\r\n              {renderProducts(item.arr)}\r\n            </tbody>\r\n          </table>\r\n          \r\n          <p><strong>Total: </strong>{item.total}</p>\r\n        </Card>)\r\n\r\n      });\r\n      return rows;\r\n    }\r\n    const renderProducts = (array) => {\r\n      let rows = [];\r\n      array.map((item) => {\r\n        rows.push(\r\n          <tr width=\"100px\">\r\n            <td>{item.product}</td>\r\n            <td>{item.notes}</td>\r\n            <td>{item.price}</td>\r\n          </tr>\r\n      )})\r\n      return rows\r\n\r\n    }\r\n    const findQuote = async (value) => {\r\n      let result = await SearchAllInfo(value);\r\n      setTestData(result.data)\r\n    }\r\n    const columns =[\r\n      {\r\n        title:\"Customer Name\",\r\n        key:\"customer\",\r\n        render:(data) => (\r\n          <p>{data.CustFirstName + \" \" + data.CustLastName}</p>\r\n        )\r\n      },\r\n      {\r\n        title:\"Address\",\r\n        key:\"address\",\r\n        render:(data) => (\r\n          <p>{data.Address  + \",\" + \" \" + data.City}</p>\r\n        )\r\n      },\r\n      {},\r\n\r\n      {\r\n        title:\"Salesman\",\r\n        key:\"user\",\r\n        render: (data) =>(\r\n          <div>\r\n             <p>{data.FirstName + \" \" + data.LastName}</p>\r\n          </div>\r\n         \r\n        )\r\n        \r\n      },\r\n      {\r\n        title:\"Show/Edit Quote Info\",\r\n        key:\"OpenQuote\",\r\n        render: (data) => \r\n          (\r\n            <div>\r\n            <Button\r\n            onClick={() => {\r\n                \r\n                setFormData(getDetailsByID(data.QuoteID));\r\n                setShowForm(true);     \r\n                            }}>\r\n            View Quote</Button>\r\n            </div>)\r\n      },\r\n      {\r\n        title:\"Creation Date\",\r\n        key:\"date\",\r\n        render: (data) => (\r\n          <p>{format(new Date(data.creationDate),\"MMMM do',' yyyy\")}</p>\r\n        ),\r\n        sorter: (a,b) => new Date(a.creationDate) - new Date(b.creationDate)\r\n      },\r\n      {\r\n        title:\"Last Modified\",\r\n        key:\"modDate\",\r\n        render: (data) => (\r\n          <p>{checkDate(format(new Date(data.modifyDate), \"MMMM do',' yyyy\"))}</p>\r\n        ),\r\n        sorter: (a,b) => new Date(a.modifyDate) - new Date(b.modifyDate)\r\n      },\r\n      {\r\n        title:\"Options\",\r\n        key:\"options\",\r\n        render: (data) => (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(`/orders/${data.QuoteID}/new`)\r\n            }}>\r\n              Create Work Order\r\n            </Button>\r\n        )\r\n      }   \r\n    ]\r\n    if(loaded){\r\n\r\n      if(user.SecurityLevel === 'admin'){\r\n        return(\r\n        <div>\r\n          <div style={{marginLeft:\"auto 0\", marginRight:\"auto 0\"}}>\r\n            <Search\r\n                  style={{width:\"40%\"}}\r\n                  className=\"searchbar\"\r\n                  size = \"medium\"\r\n                  enterButton=\"Find Quote\"\r\n                  onChange={(e) => {findQuote(e.target.value)}} />\r\n          </div>\r\n          \r\n\r\n        <h2>Active Quotes</h2>\r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        dataSource={testData}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n          </Table>\r\n\r\n        <Modal\r\n        visible={showForm}\r\n        title=\"View Quote\"\r\n        onCancel={() => {setShowForm(false)}}\r\n        onOk={() => {history.push(`/quoteinfo/${formData[0].quoteID}`)}}\r\n        okText=\"Edit Quote\"\r\n        >\r\n         <div>\r\n           {renderDetails()}\r\n         </div>\r\n        </Modal>\r\n          </div>\r\n      )\r\n      }\r\n      else if (user.SecurityLevel === 'salesman'){\r\n        return (\r\n          <div>\r\n          <div style={{marginLeft:\"auto 0\", marginRight:\"auto 0\"}}>\r\n            <Search\r\n                  style={{width:\"40%\"}}\r\n                  className=\"searchbar\"\r\n                  size = \"medium\"\r\n                  enterButton=\"Find Quote\"\r\n                  onChange={(e) => {findQuote(e.target.value)}} />\r\n          </div>\r\n          \r\n\r\n        <h2>Your Active Quotes</h2>\r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        dataSource={getUserQuotes(testData)}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n          </Table>\r\n\r\n        <Modal\r\n        visible={showForm}\r\n        title=\"View Quote\"\r\n        onCancel={() => {setShowForm(false)}}\r\n        onOk={() => {history.push(`/quoteinfo/${formData[0].quoteID}`)}}\r\n        okText=\"Edit Quote\"\r\n        >\r\n         <div>\r\n           {renderDetails()}\r\n         </div>\r\n        </Modal>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n    }\r\n\r\n    else{\r\n      return(\r\n        <div>\r\n          Loading...\r\n        </div>\r\n        \r\n      );\r\n      \r\n    }\r\n    }\r\nexport default QuoteList;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\orderList.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\SalesmanTemplate.js",["892"],"import React from \"react\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport {getEstimateByID, getUsers,  getRegionAPI} from '../../api/calendar';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { getUser } from \"../../util/storage\";\r\nimport Legend from \"../../Components/Legend\";\r\n\r\nconst { zonedTimeToUtc, format } = require('date-fns-tz')\r\n\r\nconst dataSource = new CustomStore({\r\n  key: \"EstimateID\",\r\n  load: async () => {\r\n    let user = getUser();\r\n    const data = await getEstimateByID(user.UserID);\r\n    let formatData = data.data.map((item) => ({\r\n      EstimateID : item.EstimateID,\r\n      CustomerID : item.CustomerID,\r\n      AddressID : item.AddressID,\r\n      UserID : item.UserID,\r\n      CreationDate : item.CreationDate,\r\n      text : item.EstimateInfo,\r\n      RegionID : item.RegionID,\r\n      startDate : timeFormat(item.startDate),\r\n      endDate : timeFormat(item.endDate)\r\n    }));\r\n    return formatData\r\n  }\r\n});\r\n\r\nconst timeFormat = (date) => {\r\n   let newdate = zonedTimeToUtc(new Date(date), 'America/Edmonton');\r\n   var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\n\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day'];\r\n\r\nconst renderResourceCell = (model) => {\r\n  return (\r\n      <b>{model.data.FirstName}</b>\r\n  );\r\n}\r\n\r\nclass SalesmanTemplate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      groupByDate:false,\r\n      cancel:true,\r\n      userList:\"\",\r\n      regionList:\"\",\r\n      info:false\r\n    };\r\n    \r\n    this.onGroupByDateChanged = this.onGroupByDateChanged.bind(this);\r\n    this.onAppointmentForm = this.onAppointmentForm.bind(this);\r\n    this.salesmanSource = this.salesmanSource.bind(this);\r\n    this.regionSource = this.regionSource.bind(this);\r\n    this.InfoIsHere = this.InfoIsHere.bind(this);\r\n  }\r\n  async InfoIsHere() {\r\n  let regionData = await this.regionSource();\r\n  let userData = await this.salesmanSource();\r\n  this.setState({userList:userData});\r\n  this.setState({regionList:regionData});\r\n  this.setState({info:true});\r\n} \r\n  \r\n  onAppointmentForm(args) {\r\n    args.cancel = true;\r\n  }\r\n  onGroupByDateChanged(args) {\r\n    this.setState({\r\n      groupByDate: args.value\r\n    });\r\n  }\r\n  async regionSource() {\r\n    const data = await getRegionAPI();\r\n    let regionData = data.data.map((item) => ({\r\n      id  : item.RegionID,\r\n      region: item.Region,\r\n      color: item.color\r\n    }))\r\n    console.log(regionData);\r\n    return regionData;\r\n  }\r\n\r\n  async salesmanSource() {\r\n    const data = await getUsers();\r\n    let salesData = data.data.map((item) => ({\r\n      id: item.UserID,\r\n      FirstName : item.FirstName,\r\n      LastName: item.LastName\r\n    }))\r\n    console.log(salesData);\r\n    return salesData;\r\n  }\r\n  componentDidMount(){\r\n    this.InfoIsHere();\r\n}\r\n\r\n \r\n  render() {\r\n    if (this.state.info == false){\r\n        return (\r\n          <p>Loading information...</p>\r\n        )\r\n      }\r\n      else{\r\n\r\n      \r\n    return (\r\n      \r\n      <div style={{display:\"flex\",flexDirection:\"row\", margin:\"auto\"}}>\r\n          <div style={{width:\"30%\"}}>\r\n        <Legend />\r\n        </div>\r\n          <div style={{padding:\"15px\", width:\"100%\"}}>\r\n            <h1>Your work day</h1>\r\n             <Scheduler\r\n              timeZone=\"America/Edmonton\"\r\n              resourceCellRender={renderResourceCell}\r\n              dataSource={dataSource}\r\n              views={views}\r\n              defaultCurrentView=\"day\"\r\n              defaultCurrentDate={date}\r\n              width={'60%'}\r\n              height={800}\r\n              startDayHour={6}\r\n              endDayHour={21}\r\n              onAppointmentAdding={(e) => {e.cancel = true}}\r\n              onAppointmentDeleting={(e) => {e.cancel = true}}\r\n              onAppointmentFormOpening={(e) => {e.cancel = true}}\r\n              onAppointmentUpdating={(e) => {e.cancel = true}}\r\n        >\r\n        <Resource\r\n          dataSource={this.state.regionList}\r\n          fieldExpr=\"RegionID\"\r\n          useColorAsDefault={true}\r\n        ></Resource>\r\n        </Scheduler>\r\n        </div>\r\n        \r\n     \r\n    </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default SalesmanTemplate;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\Legend.js",["893","894"],"import React, { useEffect, useState } from 'react';\r\nimport { getRegionAPI } from '../api/calendar';\r\n\r\n\r\nfunction Legend(props) {\r\n\r\n    useEffect(async () => {\r\n        let result = await getRegionAPI();\r\n        setRegionInfo(result.data);\r\n    },[]);\r\n    const [regionInfo, setRegionInfo] = useState([]);\r\n\r\n    const renderLegend = () => {\r\n        let rows = [];\r\n\r\n        regionInfo.map((item) =>{\r\n            rows.push(\r\n\r\n            \r\n            <tr key={item.RegionID}>\r\n                <td colSpan='2'>\r\n                    <p>{item.Region}</p>\r\n                </td>\r\n                <td>\r\n                    <div style={{backgroundColor:item.color, color:item.color, padding:\"5px\"}}>_</div>\r\n                </td>\r\n            </tr>);\r\n        })\r\n        return rows;\r\n    }\r\n    return (\r\n        <div>\r\n            <table style={{fontSize:\"12px\", width:\"80%\"}}>\r\n                <thead>\r\n                    <tr >\r\n                        <td colSpan='2'>\r\n                           <h1>Region</h1> \r\n                        </td>\r\n                        <td>\r\n                            <h1>Colour</h1>\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderLegend()}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>\r\n                            <i>Legend for Region Colours</i>\r\n                        </td>\r\n                    </tr>\r\n                    \r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Legend;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesSnapshot.js",["895","896","897","898","899","900","901"],"import React from \"react\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Switch from 'devextreme-react/switch';\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport SalesTemplate from './SalesTemplate.js'\r\nimport SalesTooltip from './salesTooltip.js';\r\nimport {getEstimates, deleteEstimate, getUsers, updateEstimate, getRegionAPI, sendUpdate, findCustomer} from '../../../api/calendar';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { Modal } from 'antd';\r\nimport UpdateConfirm from '../../Email_Templates/updateConfirm';\r\nimport {renderEmail} from 'react-html-email';\r\n\r\nconst { confirm } = Modal;\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\n\r\nconst dataSource = new CustomStore({\r\n  key: \"EstimateID\",\r\n  load: async () => {\r\n    const data = await getEstimates();\r\n    let formatData = data.data.map((item) => ({\r\n      EstimateID : item.EstimateID,\r\n      CustomerID : item.CustomerID,\r\n      AddressID : item.AddressID,\r\n      UserID : item.UserID,\r\n      CreationDate : item.CreationDate,\r\n      text : item.EstimateInfo,\r\n      RegionID : item.RegionID,\r\n      startDate : timeFormat(item.startDate),\r\n      endDate : timeFormat(item.endDate)\r\n    }));\r\n    return formatData\r\n  }\r\n});\r\nconst sendEmailUpdate = async (values) => {\r\n  console.log(values);\r\n  let findCustomerEmail = await findCustomer(values.CustomerID);\r\n  console.log(findCustomerEmail);\r\n  let customerEmail = findCustomerEmail.data[0];\r\n  sendUpdate(customerEmail.Email, renderEmail(<UpdateConfirm estimateInfo = {values}/>));\r\n}\r\n\r\nconst timeFormat = (date) => {\r\n   let newdate = zonedTimeToUtc(new Date(date), 'America/Edmonton');\r\n   var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\n\r\nconst timeDeformat = (date) => {\r\n  let newdate = utcToZonedTime(new Date(date), 'America/Edmonton');\r\n  var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','workWeek','month'];\r\nconst groups = ['UserID'];\r\n\r\nconst renderResourceCell = (model) => {\r\n  return (\r\n      <b>{model.data.FirstName}</b>\r\n  );\r\n}\r\n\r\nclass SalesCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      groupByDate:false,\r\n      cancel:true,\r\n      userList:\"\",\r\n      regionList:\"\",\r\n      info:false\r\n    };\r\n    \r\n    this.onGroupByDateChanged = this.onGroupByDateChanged.bind(this);\r\n    this.onAppointmentForm = this.onAppointmentForm.bind(this);\r\n    this.salesmanSource = this.salesmanSource.bind(this);\r\n    this.regionSource = this.regionSource.bind(this);\r\n    this.InfoIsHere = this.InfoIsHere.bind(this);\r\n  }\r\n  async InfoIsHere() {\r\n  let regionData = await this.regionSource();\r\n  let userData = await this.salesmanSource();\r\n  this.setState({userList:userData});\r\n  this.setState({regionList:regionData});\r\n  this.setState({info:true});\r\n} \r\n  \r\n  onAppointmentForm(args) {\r\n    args.cancel = true;\r\n  }\r\n  onGroupByDateChanged(args) {\r\n    this.setState({\r\n      groupByDate: args.value\r\n    });\r\n  }\r\n  async regionSource() {\r\n    const data = await getRegionAPI();\r\n    let regionData = data.data.map((item) => ({\r\n      id  : item.RegionID,\r\n      region: item.Region,\r\n      color: item.color\r\n    }))\r\n    console.log(regionData);\r\n    return regionData;\r\n  }\r\n\r\n  async salesmanSource() {\r\n    const data = await getUsers();\r\n    let salesData = data.data.map((item) => ({\r\n      id: item.UserID,\r\n      FirstName : item.FirstName,\r\n      LastName: item.LastName\r\n    }))\r\n    console.log(salesData);\r\n    return salesData;\r\n  }\r\n  componentDidMount(){\r\n    this.InfoIsHere();\r\n}\r\n\r\n \r\n  render() {\r\n    if (this.state.info == false){\r\n        return (\r\n          <p>Loading information...</p>\r\n        )\r\n      }\r\n      else{\r\n\r\n      \r\n    return (\r\n      \r\n      <div>\r\n      <Scheduler\r\n        timeZone=\"America/Edmonton\"\r\n        groups = {groups}\r\n        groupByDate={this.state.groupByDate}\r\n        resourceCellRender={renderResourceCell}\r\n        dataSource={dataSource}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        endDayHour={21}\r\n        appointmentComponent={SalesTemplate}\r\n        //appointmentTooltipComponent={SalesTooltip}\r\n        onAppointmentAdding={(e) => {e.cancel = true}}\r\n        onAppointmentDeleting={(e) => {e.cancel = true}}\r\n        onAppointmentFormOpening={(e) => {e.cancel = true}}\r\n        onAppointmentUpdating={(e) => {e.cancel = true}}\r\n        >\r\n        <Resource\r\n          dataSource={this.state.userList}\r\n          fieldExpr=\"UserID\"\r\n          >\r\n        </Resource>\r\n        <Resource\r\n          dataSource={this.state.regionList}\r\n          fieldExpr=\"RegionID\"\r\n          useColorAsDefault={true}\r\n        ></Resource>\r\n        </Scheduler>\r\n        <div className=\"options\">\r\n        <div className=\"caption\">Group by Date First</div>\r\n        <div className=\"option\">\r\n          <Switch\r\n            value={ this.state.groupByDate }\r\n            onValueChanged={this.onGroupByDateChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default SalesCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\newOrder.js",["902","903","904","905","906","907","908","909","910"],"import React, {useState, useEffect} from 'react';\r\nimport Button from \"../../component/quotes/Button\";\r\nimport {useInput} from '../../hooks/input-hook';\r\nimport { Card, Checkbox, Row, Col, Form, DatePicker, Modal} from 'antd';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { getAllInfoID, getDetailsID, getProductsID } from '../../api/orders';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Item } = Form;\r\n\r\n\r\nfunction NewOrder (props) {\r\n    \r\n    let quoteID = useRouteMatch('/orders/:oid/new').params.oid;\r\n\r\n    const [quoteData, setQuoteData] = useState([]);\r\n    const [detailData, setDetailData] = useState([]);\r\n    const [prodData, setProdData] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [quoteDetails, setQuoteDetails] = useState([]);\r\n    const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n    useEffect(async() => {\r\n      try {\r\n\r\n        await getAllInfoID(quoteID).then((result) => {\r\n          setQuoteData(result.data[0]);\r\n          console.log(result.data[0]);\r\n        });\r\n        let detailsInfo = await getDetailsID(quoteID);\r\n        //.then((item) => {\r\n          setDetailData(detailsInfo.data);\r\n        //});\r\n        let productInfo = await getProductsID(quoteID)\r\n        //.then((item) => {\r\n          setProdData(productInfo.data);\r\n        //})\r\n        createDetails(detailsInfo.data, productInfo.data);\r\n      \r\n      }\r\n      \r\n      catch(e) {\r\n        console.log(e);\r\n      }\r\n\r\n      \r\n      if(quoteData !== []){\r\n        \r\n        setLoaded(true);\r\n      }\r\n      \r\n    }, [])\r\n\r\n    const createDetails = (detlist, prodlist) => {\r\n      if(quoteDetails !== []){\r\n      let temp = quoteDetails;\r\n      detlist.map((detail) => {\r\n         let detailObj = {\r\n                  id: detail.subtotalID,\r\n                  details:detail.subtotalNotes,\r\n                  total:detail.subtotalAmount,\r\n                  selected:false,\r\n                  productArr:[]\r\n              \r\n          }\r\n          prodlist.map((prod) => {\r\n              if(prod.subtotalID === detail.subtotalID){\r\n                  let prodObj = {\r\n                      id:prod.QuoteLineID,\r\n                      product:prod.Product,\r\n                      notes:prod.Notes,\r\n                      price:prod.Subtotal\r\n                  }\r\n                  if(detailObj.productArr.length === 0){\r\n                      detailObj.productArr[0] =prodObj;\r\n                  }\r\n                  else{\r\n                      detailObj.productArr[detailObj.productArr.length] = prodObj;\r\n                  }\r\n                  \r\n              }\r\n          })\r\n          if(temp.length === 0){\r\n              temp[0] = detailObj;\r\n          }\r\n          else{\r\n              temp[temp.length] = detailObj;\r\n          }\r\n          setQuoteDetails(temp);\r\n      });        \r\n    }\r\n    else{\r\n      console.log(\"already created details\");\r\n    }\r\n  }\r\n\r\n    const renderList = () => {\r\n      let rows = [];\r\n      if(quoteDetails.length > 0){\r\n        quoteDetails.map((detail) => {\r\n          rows.push(\r\n            <div>\r\n              <tr>\r\n            <td>\r\n              <Checkbox onChange={() => {detail.selected = !detail.selected}}></Checkbox>\r\n            </td>\r\n            <td colSpan='2' style={{fontSize:\"15px\"}}>\r\n              {detail.details}\r\n            </td>\r\n          </tr>\r\n            {renderProducts(detail.productArr)}\r\n            <tr>\r\n              <td>\r\n\r\n              </td>\r\n              <td style={{fontSize:\"15px\"}}>\r\n                <b>Total:</b>\r\n              </td>\r\n              <td>\r\n                {detail.total}\r\n              </td>\r\n            </tr>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      return rows;\r\n    }\r\n\r\n    const renderProducts = (products) => {\r\n      let rows = [];\r\n      products.map((prod) => {\r\n        rows.push(\r\n          <tr>\r\n            <td>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <td>\r\n              {prod.product}\r\n            </td>\r\n            <td>\r\n              {prod.notes}\r\n            </td>\r\n            <td>\r\n              {prod.price}\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n\r\n      return rows;\r\n    }\r\n\r\n    if(loaded === true){\r\n     return (\r\n        <div>\r\n            <h2>New Order Creation</h2>\r\n            \r\n            <Card title=\"Customer and Address Information\">\r\n                <Row>\r\n              <Col>\r\n                <Card title=\"Customer\" bordered={false} style={{ height:\"250px\"}}>\r\n                    <p>{quoteData.CustFirstName} {quoteData.CustLastName}</p>\r\n                    <p>{quoteData.Email}</p>\r\n                    <p>{quoteData.Phone}</p>\r\n                    <p>{quoteData.BillingAddress}</p>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n              <Card title=\"Site Address\" bordered={false} style={{ height:\"250px\"}}>\r\n                  <p>{quoteData.Address}, {quoteData.City} {quoteData.Province}</p>\r\n                  <p></p>\r\n                  <p>{quoteData.PostalCode}</p>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n                \r\n            \r\n                \r\n            </Card>\r\n            <Card title=\"Select the details\">\r\n              <table>\r\n                <tbody>\r\n                  {renderList()}\r\n                </tbody>\r\n              </table>\r\n              \r\n            </Card>\r\n            <Card title=\"Select the date\">\r\n              <Item>\r\n                <RangePicker\r\n                showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD HH:mm\"\r\n                className=\"datepicker\"\r\n              />\r\n              <Button variant=\"primary\" onClick={() => {setShowCalendar(true)}}>Show Calendar</Button>\r\n              </Item>\r\n            \r\n            </Card>\r\n            <Card title=\"Select the truck\">\r\n\r\n            </Card>\r\n            <Button size=\"lg\" variant=\"primary\">Create Work Order</Button>\r\n            <Modal\r\n            visible={showCalendar}\r\n            onCancel={() => {setShowCalendar(false)}}\r\n            width=\"90%\"\r\n            >\r\n\r\n            </Modal>\r\n        </div>\r\n    )   \r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewOrder;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\orders.js",["911"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\index.js",[],["912","913"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\App.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\redux\\store.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\redux\\reducers\\quoteOneReducer.js",["914"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\admin\\index.js",["915","916"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\login\\index.js",["917"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\index.js",["918"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"https://reitzel-server.herokuapp.com\";\r\n\r\n//get the information from weather api\r\nexport const reqWeather = async (city) => {\r\n  const url = `http://api.openweathermap.org/data/2.5/weather`;\r\n  const result = await ajax(url, {\r\n    q: city,\r\n    appid: \"31b67d550e93316925f5913b31894f17\",\r\n  });\r\n  return result;\r\n};\r\n\r\nexport async function getLogin(loginId, loginPwd) {\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = `Email='${loginId}'and Password='${loginPwd}'`;\r\n  const user = await ajax(\r\n    `${baseURL}/fetchValues`,\r\n    { tableName, columns, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"user\", user);\r\n  if (user !== []) return user;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//add user\r\nexport async function addUser(user) {\r\n  var tableName = \"users\";\r\n  var values = `null,'${user.loginId}','${user.loginId}','${user.email}','${user.loginPwd}','${user.role}',\"null\"`;\r\n\r\n  var users = await ajax(`${baseURL}/insertValues`, { tableName, values }, \"post\");\r\n  console.log(\"user\", users);\r\n  if (users !== []) return users;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n//update user\r\nexport async function updateUser(id, loginId, loginPwd, email, role) {\r\n  var tableName = \"users\";\r\n  var columsAndvalues = `FirstName='${loginId}',Password='${loginPwd}',Email='${email}',SecurityLevel='${role}'`;\r\n  var condition = `UserID='${id}'`;\r\n  const result = await ajax(\r\n    `${baseURL}/updateValues`,\r\n    { tableName, columsAndvalues, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n//delete user\r\nexport async function deleteUser(id) {\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = `UserID='${id}'`;\r\n  const result = await ajax(`${baseURL}/deleteValues`, { tableName, columns }, \"post\");\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//get the userlist information\r\nexport async function getUsers() {\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = ``;\r\n  const user = await ajax(\r\n    `${baseURL}/fetchValues`,\r\n    { tableName, columns, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"user\", user);\r\n  if (user !== []) return user;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//adding a new role\r\nexport function addRole(rolename) {\r\n  const obj = {\r\n    rolename,\r\n    authTime: \"\",\r\n    authAuthor: \"\",\r\n    menus: [\"\"],\r\n    createAt: \"\",\r\n  };\r\n  datas.role.push(obj);\r\n  return 1;\r\n}\r\n\r\n//getting the role lists\r\nexport function getRoles() {\r\n  return datas.role;\r\n}\r\n\r\nexport const datas = {\r\n  user: [\r\n    {\r\n      imgUrl:\r\n        \"https://img.icons8.com/ios-filled/50/000000/change-user-male.png\",\r\n    },\r\n  ],\r\n  role: [\r\n    {\r\n      id: \"1\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"admin\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"salesman\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"trucklead\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"manager\",\r\n    },\r\n  ],\r\n};\r\n","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\util\\storage.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\main\\index.js",["919"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\leftnav\\index.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\head\\index.js",["920"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\searchbar\\index.js",["921","922","923","924","925","926","927","928"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\base.js",["929","930"],"import axios from \"axios\";\r\nimport { message } from \"antd\";\r\nimport { getUser } from \"../util/storage\";\r\nimport { manuList } from \"../config/leftnav\";\r\n\r\n//set the interceptor for response: errorhandling\r\naxios.interceptors.response.use(null, (err) => {\r\n  const expectedError =\r\n    err.response && err.response.status > 400 && err.response.status < 500;\r\n  if (err.response && err.response.status === 400) {\r\n    message.warn(\"Please Login First\");\r\n  } else if (err.response && err.response.status === 404) {\r\n    message.warn(\"Forbidden\");\r\n  } else if (err.response && err.response.status === 401) {\r\n    message.warn(\"Access Denied\");\r\n  } else if (expectedError) {\r\n    message.warn(\"Try another name please\");\r\n  }\r\n  return Promise.reject(err);\r\n});\r\n//set the request goes with headers[token] automatically\r\n\r\naxios.defaults.headers.post = {\r\n  \"user_id\" : null,\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n};\r\n//axios.defaults.headers.post[\"user_id\"] = getUser();\r\n//axios.defaults.headers.put[\"user_id\"] = getUser();\r\n//axios.defaults.headers.delete[\"user_id\"] = getUser();\r\n\r\nexport default function ajax(url, body = {}, method = \"GET\") {\r\n  //\r\n  let promise;\r\n  if (method === \"GET\") {\r\n    promise = axios.get(url, {\r\n      params: body,\r\n    });\r\n  } else promise = axios.post(url, body);\r\n  return new Promise((resolve, reject) => {\r\n    promise\r\n      .then((data) => resolve(data))\r\n      .catch((err) => {\r\n        message.warn(\"err:\" + err);\r\n      });\r\n  });\r\n}\r\n","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteEdit.js",["931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\config\\leftnav.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\quote_template.js",["992","993","994","995"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\index.js",["996","997","998","999","1000"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\index.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\index.js",["1001","1002"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\users\\index.js",["1003","1004","1005","1006"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\roles\\index.js",["1007","1008","1009","1010"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\invoices\\index.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\customers\\index.js",["1011","1012","1013","1014","1015","1016","1017","1018","1019"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\addressInfo\\index.js",["1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\customerInfo\\index.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\newcustomer\\index.js",["1053","1054","1055","1056"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\avatar\\index.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\newestimate\\index.js",["1057","1058","1059","1060","1061","1062","1063","1064","1065"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\linkbutton\\index.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\quotes.js",["1066","1067","1068"],"import { getDate } from \"date-fns\";\r\nimport ajax from \"./base\";\r\n\r\nconst baseURL = \"https://reitzel-server.herokuapp.com\";\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\n\r\nexport async function sendQuote(customer, email){\r\n    var to = customer;\r\n    var subject = \"Your quote with Rietzel Insulation\";\r\n    var html = email;\r\n\r\n    var completed = await ajax(`${baseURL}/sendEmailHtml`, {to, subject, html}, \"post\");\r\n    if (completed !== []) return completed;\r\n    else return 0;\r\n }\r\n\r\n \r\nexport async function getCustomers() {\r\n    var tableName = \"Customers\";\r\n    const customerlist = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    console.log(\"customerlist\", customerlist);\r\n    if (customerlist !== []) return customerlist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getCustomerAddresses(id){\r\n    var tableName = \"address\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const addressList = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(addressList !== []) return addressList;\r\n    else return 0;\r\n  }\r\n\r\n  export async function getCustomerFiltered(filter){\r\n    var tableName = \"Customers\";\r\n    var condition = `FirstName = '${filter}%'`\r\n    const customerlist = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      { tableName, condition},\r\n      \"post\"\r\n    );\r\n    console.log(\"customerlist\", customerlist);\r\n    if (customerlist !== []) return customerlist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function addNewQuote(value){\r\n    var tableName = \"quotes\";\r\n    var values = `'${null}','${value.addressID}','${value.id}','${value.userInfo.UserID}','${value.total}','${value.customer_notes}','${value.installer_notes}','${date}'`;\r\n    var quote = await ajax(`${baseURL}/insertValues`, { tableName, values }, \"post\");\r\n    console.log(\"quote\", quote);\r\n    if (quote !== []) return quote;\r\n    else {\r\n      return 0;\r\n    }\r\n    }\r\n\r\n  export async function addNewDetails(values, id){\r\n    var tableName = \"subtotallines\";\r\n    var values = `'${null}','${id}','${values.details}','${values.total}'`;\r\n    var details = await ajax(`${baseURL}/insertValues`, {tableName, values }, \"post\");\r\n    console.log(details);\r\n    if(details !== []) return details;\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function addNewProductLine(values, id, detailID){\r\n    var tableName = \"quotelines\";\r\n    var values = `'${null}','${detailID}', '${id}','${values.product}','${values.notes}', '${values.price}'`;\r\n    var product = await ajax(`${baseURL}/insertValues`, {tableName, values }, \"post\");\r\n    console.log(product);\r\n    if(product !== []) return product;\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getLatestQuote() {\r\n    let sql = `SELECT * FROM quotes ORDER BY QuoteID DESC LIMIT 1`\r\n    const quote = await ajax(\r\n      `${baseURL}/processCustomQuery`,\r\n      {sql},\r\n      \"post\"\r\n    );\r\n    if (quote !== []) return quote;\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getLatestDetail() {\r\n    let sql = `SELECT * FROM subtotallines ORDER BY subtotalID DESC LIMIT 1`\r\n    const quote = await ajax(\r\n      `${baseURL}/processCustomQuery`,\r\n      {sql},\r\n      \"post\"\r\n    );\r\n    if (quote !== []) return quote;\r\n    else{\r\n      return 0;\r\n    }\r\n  }","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\quoteEditAPI.js",["1069"],"import { getDate } from \"date-fns\";\r\nimport ajax from \"./base\";\r\n\r\nconst baseURL = \"https://reitzel-server.herokuapp.com\";\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\n\r\nexport async function getCustomerID(id){\r\n    var tableName = \"customers\";\r\n    var condition = `CustomerID = '${id}'`;\r\n    const customer = await ajax (\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(customer !== []) return customer;\r\n    else return 0; \r\n}\r\n\r\nexport async function getAddressID(id){\r\n    var tableName = \"address\";\r\n    var condition = `AddressID = '${id}'`;\r\n    const addressinfo = await ajax (\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(addressinfo !== []) return addressinfo;\r\n    else return 0;\r\n}\r\n\r\nexport async function getQuoteDetails(id){\r\n    var tableName = \"subtotallines\";\r\n    var condition = `quoteID = '${id}'`;\r\n    const detaillist = await ajax (\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(detaillist !== []) return detaillist;\r\n    else return 0;\r\n}\r\n\r\nexport async function getProductList(id){\r\n    var tableName = \"quotelines\";\r\n    var condition = `QuoteID = '${id}'`;\r\n    const productlist = await ajax(\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(productlist !== []) return productlist;\r\n    else return 0;\r\n}\r\n\r\nexport async function getUserID(id){\r\n    var tableName = 'users';\r\n    var condition = `UserID = '${id}'`;\r\n    const userinfo = await ajax (\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(userinfo !== []) return userinfo;\r\n    else return 0;\r\n}\r\n\r\nexport async function getQuoteID(id){\r\n    var tableName = 'quotes';\r\n    var condition = `QuoteID = ${id}`;\r\n    const quoteData = await ajax(\r\n        `${baseURL}/fetchValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(quoteData !== []) return quoteData;\r\n    else return 0;\r\n}\r\n\r\nexport async function updateQuote(values){\r\n    var tableName = 'quotes';\r\n    var columnsAndValues = `QuoteTotal = '${values.total}', notesCustomers = '${values.customer_notes}', notesInstallers = '${values.installer_notes}', modifyDate = '${(date)}'`;\r\n    var condition = `QuoteID = '${values.id}'`;\r\n    const quoteUpdate = await ajax(\r\n        `${baseURL}/updateValues`,\r\n        {tableName, columnsAndValues, condition},\r\n        \"post\"\r\n    );\r\n    if(quoteUpdate !== []) return quoteUpdate;\r\n    else return 0;\r\n}\r\n\r\nexport async function updateDetail(values){\r\n    var tableName = 'subtotallines';\r\n    var columnsAndValues = `subtotalNotes = '${values.details}', subtotalAmount = '${values.total}'`;\r\n    var condition = `subtotalID = '${values.id}'`;\r\n    const detailUpdate = await ajax(\r\n        `${baseURL}/updateValues`,\r\n        {tableName, columnsAndValues, condition},\r\n        \"post\"\r\n    );\r\n    if(detailUpdate !== []) return detailUpdate;\r\n    else return 0;\r\n}\r\n\r\nexport async function updateProduct(values){\r\n    var tableName = 'quotelines';\r\n    var columnsAndValues = `Product = '${values.product}', Notes = '${values.notes}', Subtotal='${values.price}'`;\r\n    var condition = `QuoteLineID = '${values.id}'`;\r\n    const productUpdate = await ajax(\r\n        `${baseURL}/updateValues`,\r\n        {tableName, columnsAndValues, condition},\r\n        \"post\"\r\n    );\r\n    console.log('update',productUpdate);\r\n    if(productUpdate !== []) return productUpdate;\r\n    else return 0;\r\n}\r\n\r\nexport async function getAllInfo(){\r\n    var sql = `SELECT * FROM quotes LEFT JOIN address ON quotes.AddressID = address.AddressID LEFT JOIN users ON quotes.UserID = users.UserID LEFT JOIN customers ON quotes.CustomerID = customers.CustomerID\r\n    `;\r\n    const info = await ajax(\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(info !== []) return info;\r\n    else return 0; \r\n}\r\n\r\nexport async function getDetails(){\r\n    var sql = `SELECT * FROM subtotallines`;\r\n    const details = await ajax(\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(details !== []) return details;\r\n    else return 0;\r\n}\r\n\r\nexport async function getProducts(){\r\n    var sql = `SELECT * FROM quotelines`;\r\n    const prods = await ajax (\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(prods !== []) return prods;\r\n    else return 0;\r\n}\r\n\r\nexport async function SearchAllInfo(value) {\r\n    var sql = `SELECT * FROM quotes LEFT JOIN address ON quotes.AddressID = address.AddressID LEFT JOIN users ON quotes.UserID = users.UserID LEFT JOIN customers ON quotes.CustomerID = customers.CustomerID \r\n    WHERE CustFirstName LIKE '%${value}%' OR CustLastName LIKE '%${value}%' OR Address LIKE '%${value}%'`;\r\n    const info = await ajax(\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(info !== []) return info;\r\n    else return 0; \r\n}\r\n\r\nexport async function deleteProduct(id) {\r\n    var tableName = 'quotelines';\r\n    var condition = `QuoteLineID = '${id}'`;\r\n    const confirm = await ajax(\r\n        `${baseURL}/deleteValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(confirm !== []) return confirm;\r\n    else return 0;\r\n}\r\n\r\nexport async function deleteDetail(id) {\r\n    var tableName = 'subtotallines';\r\n    var condition = `subtotalID = '${id}'`;\r\n    const confirm = await ajax(\r\n        `${baseURL}/deleteValues`,\r\n        {tableName, condition},\r\n        \"post\"\r\n    );\r\n    if(confirm !== []) return confirm;\r\n    else return 0;\r\n}","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\hooks\\input-hook.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\Button.js",["1070"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteList.js",["1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\SalesmanTemplate.js",["1085"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\home\\Template.js",["1086","1087"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\confirmation.js",["1088","1089","1090"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\calendar.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\neworder.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\customer.js",["1091"],"import { getOverlappingDaysInIntervals } from \"date-fns\";\r\nimport ajax from \"./base\";\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst baseURL = \"https://reitzel-server.herokuapp.com\";\r\n\r\n\r\n\r\n\r\nexport async function getCustomers() {\r\n    console.log(\"here\");\r\n    var tableName = \"Customers\";\r\n    const customerlist = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    console.log(\"customerlist\", customerlist);\r\n    if (customerlist !== []) return customerlist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  export async function getAddresses() {\r\n    console.log(\"here\");\r\n    var tableName = \"Addresses\";\r\n    const addresslist = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    console.log(\"addresslist\", addresslist);\r\n    if (addresslist !== []) return addresslist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getCustomer(id){\r\n    var tableName = \"customers\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const customer = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n      if(customer !== []) return customer;\r\n      else return 0;\r\n\r\n    }\r\n  export async function getCustomerAddresses(id){\r\n    var tableName = \"address\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const addressList = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(addressList !== []) return addressList;\r\n    else return 0;\r\n  }\r\n  export async function getRegion(id){\r\n    var tableName = \"region\";\r\n    var condition = `RegionID = '${id}'`\r\n    const region = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }\r\n  export async function getRegionAPI(){\r\n    var tableName = \"region\";\r\n    const region = await ajax(\r\n      `${baseURL}/fetchValues`,\r\n      {tableName},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }\r\n\r\n  export async function updateCustomer(id, firstName, lastName, email, phone, billing, city, postal, region){\r\n    var tableName = \"customers\";\r\n    var columnsAndValues = `FirstName='${firstName}',LastName='${lastName}',Phone='${phone}',Email='${email}', BillingAddress='${billing}',City='${city}',PostalCode='${postal}',Region='${region}'`;\r\n  var condition = `CustomerID=${id}`;\r\n  const result = await ajax(\r\n    `${baseURL}/updateValues`,\r\n    { tableName, columnsAndValues, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function deleteCustomer(id) {\r\n  var tableName = \"customers\";\r\n  var columns = \"*\";\r\n  var condition = `CustomerID='${id}'`;\r\n  const result = await ajax(`${baseURL}/deleteValues`, { tableName, columns, condition }, \"post\");\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function addAddress(id, value){\r\n  var tableName = \"address\";\r\n  var values = `${null},'${id}','${value.BillingAddress}','${value.PostalCode}','${value.City}','${value.Prov}','${value.Region}'`;\r\n\r\n  var address = await ajax(`${baseURL}/insertValues`, { tableName, values }, \"post\");\r\n  console.log(\"address\", address);\r\n  if (address !== []) return address;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function customerLookup(value){\r\n  var tableName = \"customers\";\r\n  var condition = `CustFirstName LIKE '%${value}%' OR CustLastName LIKE '%${value}%' OR BillingAddress LIKE '%${value}%'`;\r\n  const customers = await ajax(\r\n    `${baseURL}/fetchValues`,\r\n    {tableName, condition},\r\n    \"post\"\r\n  );\r\n  if(customers !== []) return customers;\r\n  else return 0;\r\n}\r\n\r\nexport async function addNotes(value, user, id){\r\n  var tableName = \"customernotes\";\r\n  var values = `${null},'${value}','${date}','${user}','${id}'`;\r\n  const notes = await ajax(\r\n    `${baseURL}/insertValues`,\r\n    {tableName, values},\r\n    \"post\"\r\n  );\r\n  if(notes !== []) return notes;\r\n  else return 0;\r\n}\r\n\r\nexport async function getNotes(id){\r\n  var tableName = \"customernotes\";\r\n  var condition = `CustomerID = '${id}'`;\r\n  const notes = await ajax(\r\n    `${baseURL}/fetchValues`,\r\n    {tableName, condition},\r\n    \"post\");\r\n    if(notes !== []) return notes;\r\n    else return 0;\r\n}","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\addresses.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\newOrder.js",["1092","1093","1094","1095","1096","1097","1098","1099","1100"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\orders\\orderList.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesSnapshot.js",["1101","1102","1103","1104","1105","1106","1107"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\QuoteOne.js",["1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\FormOne.js",["1161","1162","1163","1164","1165","1166","1167","1168","1169","1170"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\QuotePrint.js",["1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js",["1185","1186"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Legend.js",["1187","1188"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\Tabs.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js",["1189","1190","1191"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\CustomSelect.js",["1192","1193"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\quotes\\quoteData.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\ToggleSwitch.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\component\\quotes\\Modal.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js",["1194"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js",["1195"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\api\\orders.js",["1196"],"import ajax from \"./base\";\r\nconst baseURL = \"https://reitzel-server.herokuapp.com\";\r\nconst {format} = require('date-fns-tz');\r\n\r\nexport async function getAllInfoID(id){\r\n    var sql = `SELECT * FROM quotes LEFT JOIN address ON quotes.AddressID = address.AddressID LEFT JOIN users ON quotes.UserID = users.UserID LEFT JOIN customers ON quotes.CustomerID = customers.CustomerID\r\n    WHERE quotes.QuoteID = '${id}'\r\n    `;\r\n    const info = await ajax(\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(info !== []) return info;\r\n    else return 0; \r\n}\r\n\r\nexport async function getDetailsID(id){\r\n    var sql = `SELECT * FROM subtotallines WHERE QuoteID = '${id}'`;\r\n    const details = await ajax(\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(details !== []) return details;\r\n    else return 0;\r\n}\r\n\r\nexport async function getProductsID(id){\r\n    var sql = `SELECT * FROM quotelines WHERE QuoteID = '${id}'`;\r\n    const prods = await ajax (\r\n        `${baseURL}/processCustomQuery`,\r\n        {sql},\r\n        \"post\"\r\n    );\r\n    if(prods !== []) return prods;\r\n    else return 0;\r\n}","C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\Email_Templates\\updateConfirm.js",["1197"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\Tab.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js",[],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\footer\\index.js",["1198","1199","1200","1201"],"C:\\Users\\amill\\Reitzel Desktop GitHub\\Reitzel-Insulation-Desktop\\src\\pages\\headforquote\\index.js",["1202","1203"],{"ruleId":"1204","replacedBy":"1205"},{"ruleId":"1206","replacedBy":"1207"},{"ruleId":"1208","severity":1,"message":"1209","line":24,"column":1,"nodeType":"1210","endLine":37,"endColumn":3},{"ruleId":"1211","severity":1,"message":"1212","line":10,"column":8,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":11},{"ruleId":"1211","severity":1,"message":"1215","line":24,"column":13,"nodeType":"1213","messageId":"1214","endLine":24,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1217","line":63,"column":7,"nodeType":"1213","messageId":"1214","endLine":63,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1218","line":18,"column":7,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":9},{"ruleId":"1211","severity":1,"message":"1219","line":2,"column":24,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1220","line":2,"column":39,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":44},{"ruleId":"1211","severity":1,"message":"1221","line":2,"column":46,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":52},{"ruleId":"1211","severity":1,"message":"1222","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1218","line":8,"column":7,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":9},{"ruleId":"1211","severity":1,"message":"1223","line":11,"column":10,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1224","line":11,"column":24,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1226","line":14,"column":24,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1229","line":12,"column":16,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1230","line":3,"column":10,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1231","line":4,"column":10,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1232","line":2,"column":33,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":33,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":47,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1226","line":29,"column":33,"nodeType":"1227","messageId":"1228","endLine":29,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1226","line":29,"column":47,"nodeType":"1227","messageId":"1228","endLine":29,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1233","line":9,"column":15,"nodeType":"1213","messageId":"1214","endLine":9,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1234","line":10,"column":7,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1235","line":3,"column":20,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1236","line":3,"column":64,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":80},{"ruleId":"1211","severity":1,"message":"1237","line":29,"column":9,"nodeType":"1213","messageId":"1214","endLine":29,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1226","line":34,"column":27,"nodeType":"1227","messageId":"1228","endLine":34,"endColumn":29},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1239","line":4,"column":9,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1240","line":5,"column":10,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1241","line":11,"column":18,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1242","line":12,"column":9,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1243","line":12,"column":25,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1234","line":16,"column":7,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1237","line":33,"column":15,"nodeType":"1213","messageId":"1214","endLine":33,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1244","line":50,"column":15,"nodeType":"1213","messageId":"1214","endLine":50,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1246","line":58,"column":10,"nodeType":"1247","endLine":58,"endColumn":12,"suggestions":"1248"},{"ruleId":"1211","severity":1,"message":"1237","line":61,"column":13,"nodeType":"1213","messageId":"1214","endLine":61,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":168,"column":27,"nodeType":"1227","messageId":"1228","endLine":168,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":176,"column":26,"nodeType":"1251","messageId":"1252","endLine":176,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1253","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1254","line":4,"column":19,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1255","line":18,"column":10,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1256","line":18,"column":27,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":45},{"ruleId":"1211","severity":1,"message":"1257","line":16,"column":10,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1226","line":100,"column":23,"nodeType":"1227","messageId":"1228","endLine":100,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1258","line":107,"column":15,"nodeType":"1213","messageId":"1214","endLine":107,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1259","line":110,"column":11,"nodeType":"1213","messageId":"1214","endLine":110,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1260","line":116,"column":9,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1261","line":128,"column":18,"nodeType":"1227","messageId":"1228","endLine":128,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1261","line":128,"column":35,"nodeType":"1227","messageId":"1228","endLine":128,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1262","line":131,"column":6,"nodeType":"1247","endLine":131,"endColumn":8,"suggestions":"1263"},{"ruleId":"1225","severity":1,"message":"1261","line":132,"column":12,"nodeType":"1227","messageId":"1228","endLine":132,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1264","line":2,"column":44,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1266","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":30},{"ruleId":"1211","severity":1,"message":"1230","line":3,"column":32,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1268","line":4,"column":37,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1269","line":4,"column":44,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":50},{"ruleId":"1211","severity":1,"message":"1270","line":7,"column":9,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1271","line":8,"column":9,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1234","line":13,"column":7,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1272","line":15,"column":23,"nodeType":"1213","messageId":"1214","endLine":15,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1273","line":16,"column":10,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1274","line":16,"column":21,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":33},{"ruleId":"1211","severity":1,"message":"1275","line":17,"column":20,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1276","line":21,"column":9,"nodeType":"1213","messageId":"1214","endLine":21,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1277","line":23,"column":10,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":18},{"ruleId":"1245","severity":1,"message":"1278","line":26,"column":15,"nodeType":"1251","endLine":39,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1279","line":39,"column":10,"nodeType":"1247","endLine":39,"endColumn":28,"suggestions":"1280"},{"ruleId":"1211","severity":1,"message":"1281","line":63,"column":11,"nodeType":"1213","messageId":"1214","endLine":63,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1282","line":20,"column":10,"nodeType":"1213","messageId":"1214","endLine":20,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1283","line":20,"column":22,"nodeType":"1213","messageId":"1214","endLine":20,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1284","line":22,"column":10,"nodeType":"1213","messageId":"1214","endLine":22,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1285","line":22,"column":22,"nodeType":"1213","messageId":"1214","endLine":22,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1286","line":1,"column":38,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1287","line":2,"column":10,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1220","line":2,"column":31,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1288","line":2,"column":60,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":66},{"ruleId":"1211","severity":1,"message":"1289","line":3,"column":24,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1290","line":10,"column":10,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1291","line":10,"column":23,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1292","line":11,"column":10,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1293","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1294","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":26},{"ruleId":"1295","severity":1,"message":"1296","line":9,"column":5,"nodeType":"1297","messageId":"1298","endLine":11,"endColumn":8},{"ruleId":"1211","severity":1,"message":"1299","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1300","line":12,"column":8,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1301","line":14,"column":10,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1270","line":16,"column":8,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1302","line":23,"column":11,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1233","line":23,"column":17,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1303","line":26,"column":12,"nodeType":"1213","messageId":"1214","endLine":26,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1304","line":26,"column":19,"nodeType":"1213","messageId":"1214","endLine":26,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1305","line":28,"column":11,"nodeType":"1213","messageId":"1214","endLine":28,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1306","line":31,"column":9,"nodeType":"1307","endLine":31,"endColumn":110},{"ruleId":"1225","severity":1,"message":"1226","line":31,"column":87,"nodeType":"1227","messageId":"1228","endLine":31,"endColumn":89},{"ruleId":"1225","severity":1,"message":"1226","line":34,"column":42,"nodeType":"1227","messageId":"1228","endLine":34,"endColumn":44},{"ruleId":"1211","severity":1,"message":"1308","line":38,"column":23,"nodeType":"1213","messageId":"1214","endLine":38,"endColumn":35},{"ruleId":"1245","severity":1,"message":"1278","line":42,"column":15,"nodeType":"1251","endLine":62,"endColumn":10},{"ruleId":"1211","severity":1,"message":"1309","line":66,"column":33,"nodeType":"1213","messageId":"1214","endLine":66,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1310","line":66,"column":52,"nodeType":"1213","messageId":"1214","endLine":66,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1311","line":67,"column":58,"nodeType":"1213","messageId":"1214","endLine":67,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1312","line":68,"column":56,"nodeType":"1213","messageId":"1214","endLine":68,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1313","line":69,"column":68,"nodeType":"1213","messageId":"1214","endLine":69,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1314","line":70,"column":48,"nodeType":"1213","messageId":"1214","endLine":70,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1315","line":71,"column":56,"nodeType":"1213","messageId":"1214","endLine":71,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1316","line":72,"column":62,"nodeType":"1213","messageId":"1214","endLine":72,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1317","line":73,"column":50,"nodeType":"1213","messageId":"1214","endLine":73,"endColumn":60},{"ruleId":"1211","severity":1,"message":"1318","line":75,"column":36,"nodeType":"1213","messageId":"1214","endLine":75,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1319","line":75,"column":58,"nodeType":"1213","messageId":"1214","endLine":75,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1320","line":76,"column":62,"nodeType":"1213","messageId":"1214","endLine":76,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1321","line":77,"column":56,"nodeType":"1213","messageId":"1214","endLine":77,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1322","line":78,"column":56,"nodeType":"1213","messageId":"1214","endLine":78,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1323","line":79,"column":56,"nodeType":"1213","messageId":"1214","endLine":79,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1324","line":81,"column":66,"nodeType":"1213","messageId":"1214","endLine":81,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1325","line":82,"column":68,"nodeType":"1213","messageId":"1214","endLine":82,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1326","line":83,"column":19,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1327","line":83,"column":35,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1328","line":83,"column":56,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1329","line":83,"column":84,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":98},{"ruleId":"1225","severity":1,"message":"1226","line":104,"column":29,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1226","line":104,"column":40,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1226","line":133,"column":29,"nodeType":"1227","messageId":"1228","endLine":133,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1226","line":133,"column":40,"nodeType":"1227","messageId":"1228","endLine":133,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1330","line":143,"column":12,"nodeType":"1213","messageId":"1214","endLine":143,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1331","line":143,"column":24,"nodeType":"1213","messageId":"1214","endLine":143,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1332","line":182,"column":11,"nodeType":"1213","messageId":"1214","endLine":182,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1226","line":188,"column":17,"nodeType":"1227","messageId":"1228","endLine":188,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":191,"column":22,"nodeType":"1227","messageId":"1228","endLine":191,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1226","line":199,"column":30,"nodeType":"1227","messageId":"1228","endLine":199,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1226","line":223,"column":42,"nodeType":"1227","messageId":"1228","endLine":223,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1226","line":270,"column":27,"nodeType":"1227","messageId":"1228","endLine":270,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":282,"column":47,"nodeType":"1251","messageId":"1252","endLine":282,"endColumn":49},{"ruleId":"1333","severity":1,"message":"1334","line":312,"column":38,"nodeType":"1335","endLine":312,"endColumn":57},{"ruleId":"1249","severity":1,"message":"1250","line":325,"column":39,"nodeType":"1251","messageId":"1252","endLine":325,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1226","line":328,"column":17,"nodeType":"1227","messageId":"1228","endLine":328,"endColumn":19},{"ruleId":"1249","severity":1,"message":"1250","line":337,"column":27,"nodeType":"1251","messageId":"1252","endLine":337,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":347,"column":39,"nodeType":"1251","messageId":"1252","endLine":347,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1221","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1337","line":5,"column":10,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1338","line":5,"column":23,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":34},{"ruleId":"1211","severity":1,"message":"1240","line":6,"column":10,"nodeType":"1213","messageId":"1214","endLine":6,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1237","line":29,"column":9,"nodeType":"1213","messageId":"1214","endLine":29,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1237","line":33,"column":11,"nodeType":"1213","messageId":"1214","endLine":33,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1237","line":37,"column":13,"nodeType":"1213","messageId":"1214","endLine":37,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1339","line":64,"column":7,"nodeType":"1307","endLine":68,"endColumn":9},{"ruleId":"1225","severity":1,"message":"1226","line":66,"column":31,"nodeType":"1227","messageId":"1228","endLine":66,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1226","line":70,"column":41,"nodeType":"1227","messageId":"1228","endLine":70,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1340","line":74,"column":10,"nodeType":"1213","messageId":"1214","endLine":74,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1341","line":80,"column":25,"nodeType":"1213","messageId":"1214","endLine":80,"endColumn":41},{"ruleId":"1342","severity":1,"message":"1343","line":163,"column":7,"nodeType":"1344","endLine":166,"endColumn":8},{"ruleId":"1211","severity":1,"message":"1253","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1345","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1221","line":4,"column":8,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1220","line":5,"column":8,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1346","line":6,"column":8,"nodeType":"1213","messageId":"1214","endLine":6,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1300","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1347","line":13,"column":23,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":26,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":37,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1226","line":20,"column":56,"nodeType":"1227","messageId":"1228","endLine":20,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1216","line":2,"column":17,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1348","line":5,"column":9,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1347","line":5,"column":22,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1349","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1350","line":96,"column":7,"nodeType":"1213","messageId":"1214","endLine":96,"endColumn":8},{"ruleId":"1225","severity":1,"message":"1226","line":159,"column":25,"nodeType":"1227","messageId":"1228","endLine":159,"endColumn":27},{"ruleId":"1295","severity":1,"message":"1296","line":16,"column":3,"nodeType":"1297","messageId":"1298","endLine":18,"endColumn":4},{"ruleId":"1295","severity":1,"message":"1296","line":16,"column":3,"nodeType":"1297","messageId":"1298","endLine":18,"endColumn":4},{"ruleId":"1211","severity":1,"message":"1351","line":2,"column":8,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1352","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1353","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":16},{"ruleId":"1354","severity":1,"message":"1355","line":24,"column":9,"nodeType":"1344","endLine":24,"endColumn":25},{"ruleId":"1354","severity":1,"message":"1355","line":25,"column":9,"nodeType":"1344","endLine":25,"endColumn":28},{"ruleId":"1354","severity":1,"message":"1355","line":26,"column":9,"nodeType":"1344","endLine":26,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1356","line":3,"column":7,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":11},{"ruleId":"1354","severity":1,"message":"1355","line":9,"column":7,"nodeType":"1344","endLine":9,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1357","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":17},{"ruleId":"1358","severity":1,"message":"1359","line":73,"column":9,"nodeType":"1213","messageId":"1360","endLine":73,"endColumn":15},{"ruleId":"1358","severity":1,"message":"1359","line":84,"column":9,"nodeType":"1213","messageId":"1360","endLine":84,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1253","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1361","line":4,"column":10,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1219","line":4,"column":24,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1264","line":4,"column":30,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1362","line":5,"column":9,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1363","line":5,"column":23,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1364","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":12},{"ruleId":"1211","severity":1,"message":"1365","line":8,"column":10,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1366","line":9,"column":10,"nodeType":"1213","messageId":"1214","endLine":9,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1367","line":10,"column":10,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1340","line":15,"column":13,"nodeType":"1213","messageId":"1214","endLine":15,"endColumn":22},{"ruleId":"1225","severity":1,"message":"1226","line":32,"column":21,"nodeType":"1227","messageId":"1228","endLine":32,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1226","line":35,"column":26,"nodeType":"1227","messageId":"1228","endLine":35,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1226","line":43,"column":34,"nodeType":"1227","messageId":"1228","endLine":43,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1226","line":68,"column":46,"nodeType":"1227","messageId":"1228","endLine":68,"endColumn":48},{"ruleId":"1249","severity":1,"message":"1250","line":123,"column":51,"nodeType":"1251","messageId":"1252","endLine":123,"endColumn":53},{"ruleId":"1333","severity":1,"message":"1334","line":153,"column":42,"nodeType":"1335","endLine":153,"endColumn":61},{"ruleId":"1249","severity":1,"message":"1250","line":166,"column":43,"nodeType":"1251","messageId":"1252","endLine":166,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1226","line":169,"column":21,"nodeType":"1227","messageId":"1228","endLine":169,"endColumn":23},{"ruleId":"1249","severity":1,"message":"1250","line":178,"column":31,"nodeType":"1251","messageId":"1252","endLine":178,"endColumn":33},{"ruleId":"1249","severity":1,"message":"1250","line":188,"column":43,"nodeType":"1251","messageId":"1252","endLine":188,"endColumn":45},{"ruleId":"1204","replacedBy":"1368"},{"ruleId":"1206","replacedBy":"1369"},{"ruleId":"1211","severity":1,"message":"1370","line":2,"column":23,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1371","line":4,"column":7,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":13},{"ruleId":"1354","severity":1,"message":"1355","line":13,"column":17,"nodeType":"1344","endLine":13,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1355","line":12,"column":13,"nodeType":"1344","endLine":12,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1372","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1373","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":12},{"ruleId":"1211","severity":1,"message":"1287","line":5,"column":9,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1371","line":7,"column":7,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1303","line":13,"column":12,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1304","line":13,"column":19,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1374","line":13,"column":25,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":30},{"ruleId":"1211","severity":1,"message":"1375","line":15,"column":12,"nodeType":"1213","messageId":"1214","endLine":15,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1376","line":16,"column":12,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1377","line":17,"column":12,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1378","line":18,"column":12,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1379","line":19,"column":12,"nodeType":"1213","messageId":"1214","endLine":19,"endColumn":23},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":15,"nodeType":"1251","endLine":51,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1380","line":51,"column":11,"nodeType":"1247","endLine":51,"endColumn":13,"suggestions":"1381"},{"ruleId":"1249","severity":1,"message":"1250","line":56,"column":30,"nodeType":"1251","messageId":"1252","endLine":56,"endColumn":32},{"ruleId":"1249","severity":1,"message":"1250","line":66,"column":33,"nodeType":"1251","messageId":"1252","endLine":66,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1382","line":114,"column":19,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1309","line":114,"column":33,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1310","line":114,"column":52,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1383","line":115,"column":36,"nodeType":"1213","messageId":"1214","endLine":115,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1311","line":115,"column":58,"nodeType":"1213","messageId":"1214","endLine":115,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1384","line":116,"column":35,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1312","line":116,"column":56,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1385","line":117,"column":41,"nodeType":"1213","messageId":"1214","endLine":117,"endColumn":59},{"ruleId":"1211","severity":1,"message":"1313","line":117,"column":68,"nodeType":"1213","messageId":"1214","endLine":117,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1386","line":118,"column":31,"nodeType":"1213","messageId":"1214","endLine":118,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1314","line":118,"column":48,"nodeType":"1213","messageId":"1214","endLine":118,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1387","line":119,"column":35,"nodeType":"1213","messageId":"1214","endLine":119,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1315","line":119,"column":56,"nodeType":"1213","messageId":"1214","endLine":119,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1388","line":120,"column":38,"nodeType":"1213","messageId":"1214","endLine":120,"endColumn":53},{"ruleId":"1211","severity":1,"message":"1316","line":120,"column":62,"nodeType":"1213","messageId":"1214","endLine":120,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1389","line":121,"column":32,"nodeType":"1213","messageId":"1214","endLine":121,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1317","line":121,"column":50,"nodeType":"1213","messageId":"1214","endLine":121,"endColumn":60},{"ruleId":"1211","severity":1,"message":"1390","line":123,"column":19,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1318","line":123,"column":36,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1319","line":123,"column":58,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1391","line":123,"column":87,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":102},{"ruleId":"1211","severity":1,"message":"1392","line":124,"column":38,"nodeType":"1213","messageId":"1214","endLine":124,"endColumn":53},{"ruleId":"1211","severity":1,"message":"1320","line":124,"column":62,"nodeType":"1213","messageId":"1214","endLine":124,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1393","line":125,"column":35,"nodeType":"1213","messageId":"1214","endLine":125,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1321","line":125,"column":56,"nodeType":"1213","messageId":"1214","endLine":125,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1394","line":126,"column":35,"nodeType":"1213","messageId":"1214","endLine":126,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1322","line":126,"column":56,"nodeType":"1213","messageId":"1214","endLine":126,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1395","line":127,"column":35,"nodeType":"1213","messageId":"1214","endLine":127,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1323","line":127,"column":56,"nodeType":"1213","messageId":"1214","endLine":127,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1324","line":129,"column":66,"nodeType":"1213","messageId":"1214","endLine":129,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1325","line":130,"column":68,"nodeType":"1213","messageId":"1214","endLine":130,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1396","line":132,"column":40,"nodeType":"1213","messageId":"1214","endLine":132,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1397","line":132,"column":66,"nodeType":"1213","messageId":"1214","endLine":132,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1398","line":133,"column":39,"nodeType":"1213","messageId":"1214","endLine":133,"endColumn":55},{"ruleId":"1211","severity":1,"message":"1399","line":133,"column":64,"nodeType":"1213","messageId":"1214","endLine":133,"endColumn":81},{"ruleId":"1211","severity":1,"message":"1400","line":157,"column":29,"nodeType":"1213","messageId":"1214","endLine":157,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1401","line":161,"column":29,"nodeType":"1213","messageId":"1214","endLine":161,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1400","line":172,"column":29,"nodeType":"1213","messageId":"1214","endLine":172,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1401","line":175,"column":29,"nodeType":"1213","messageId":"1214","endLine":175,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1226","line":185,"column":17,"nodeType":"1227","messageId":"1228","endLine":185,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":188,"column":22,"nodeType":"1227","messageId":"1228","endLine":188,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1226","line":196,"column":30,"nodeType":"1227","messageId":"1228","endLine":196,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1226","line":223,"column":42,"nodeType":"1227","messageId":"1228","endLine":223,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1226","line":280,"column":27,"nodeType":"1227","messageId":"1228","endLine":280,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":291,"column":47,"nodeType":"1251","messageId":"1252","endLine":291,"endColumn":49},{"ruleId":"1249","severity":1,"message":"1250","line":333,"column":39,"nodeType":"1251","messageId":"1252","endLine":333,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1226","line":336,"column":17,"nodeType":"1227","messageId":"1228","endLine":336,"endColumn":19},{"ruleId":"1249","severity":1,"message":"1250","line":345,"column":27,"nodeType":"1251","messageId":"1252","endLine":345,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":355,"column":39,"nodeType":"1251","messageId":"1252","endLine":355,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1357","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1219","line":2,"column":38,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1288","line":2,"column":60,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":66},{"ruleId":"1211","severity":1,"message":"1276","line":14,"column":9,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1278","line":20,"column":15,"nodeType":"1251","endLine":38,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1402","line":38,"column":10,"nodeType":"1247","endLine":38,"endColumn":12,"suggestions":"1403"},{"ruleId":"1249","severity":1,"message":"1250","line":42,"column":25,"nodeType":"1251","messageId":"1252","endLine":42,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1404","line":51,"column":13,"nodeType":"1213","messageId":"1214","endLine":51,"endColumn":16},{"ruleId":"1249","severity":1,"message":"1250","line":52,"column":31,"nodeType":"1251","messageId":"1252","endLine":52,"endColumn":33},{"ruleId":"1249","severity":1,"message":"1250","line":76,"column":27,"nodeType":"1251","messageId":"1252","endLine":76,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":90,"column":27,"nodeType":"1251","messageId":"1252","endLine":90,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":108,"column":24,"nodeType":"1251","messageId":"1252","endLine":108,"endColumn":26},{"ruleId":"1405","severity":1,"message":"1406","line":135,"column":35,"nodeType":"1227","messageId":"1407","endLine":135,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1226","line":108,"column":25,"nodeType":"1227","messageId":"1228","endLine":108,"endColumn":27},{"ruleId":"1245","severity":1,"message":"1278","line":7,"column":15,"nodeType":"1251","endLine":10,"endColumn":6},{"ruleId":"1249","severity":1,"message":"1250","line":16,"column":31,"nodeType":"1251","messageId":"1252","endLine":16,"endColumn":33},{"ruleId":"1211","severity":1,"message":"1349","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1408","line":8,"column":23,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1409","line":8,"column":49,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1270","line":14,"column":9,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1410","line":35,"column":7,"nodeType":"1213","messageId":"1214","endLine":35,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1411","line":49,"column":7,"nodeType":"1213","messageId":"1214","endLine":49,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":125,"column":25,"nodeType":"1227","messageId":"1228","endLine":125,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1336","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1412","line":17,"column":12,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1413","line":18,"column":12,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":15,"nodeType":"1251","endLine":52,"endColumn":6},{"ruleId":"1245","severity":1,"message":"1414","line":52,"column":8,"nodeType":"1247","endLine":52,"endColumn":10,"suggestions":"1415"},{"ruleId":"1249","severity":1,"message":"1250","line":57,"column":28,"nodeType":"1251","messageId":"1252","endLine":57,"endColumn":30},{"ruleId":"1249","severity":1,"message":"1250","line":66,"column":31,"nodeType":"1251","messageId":"1252","endLine":66,"endColumn":33},{"ruleId":"1249","severity":1,"message":"1250","line":100,"column":35,"nodeType":"1251","messageId":"1252","endLine":100,"endColumn":37},{"ruleId":"1249","severity":1,"message":"1250","line":132,"column":27,"nodeType":"1251","messageId":"1252","endLine":132,"endColumn":29},{"ruleId":"1211","severity":1,"message":"1416","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1204","replacedBy":"1417"},{"ruleId":"1206","replacedBy":"1418"},{"ruleId":"1208","severity":1,"message":"1209","line":24,"column":1,"nodeType":"1210","endLine":37,"endColumn":3},{"ruleId":"1211","severity":1,"message":"1212","line":10,"column":8,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":11},{"ruleId":"1211","severity":1,"message":"1215","line":24,"column":13,"nodeType":"1213","messageId":"1214","endLine":24,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1217","line":63,"column":7,"nodeType":"1213","messageId":"1214","endLine":63,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1218","line":18,"column":7,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":9},{"ruleId":"1211","severity":1,"message":"1229","line":12,"column":16,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1219","line":2,"column":24,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1220","line":2,"column":39,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":44},{"ruleId":"1211","severity":1,"message":"1221","line":2,"column":46,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":52},{"ruleId":"1211","severity":1,"message":"1222","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1218","line":8,"column":7,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":9},{"ruleId":"1211","severity":1,"message":"1223","line":11,"column":10,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1224","line":11,"column":24,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1226","line":14,"column":24,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1230","line":3,"column":10,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1231","line":4,"column":10,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1303","line":13,"column":12,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1304","line":13,"column":19,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1374","line":13,"column":25,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":30},{"ruleId":"1211","severity":1,"message":"1375","line":15,"column":12,"nodeType":"1213","messageId":"1214","endLine":15,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1376","line":16,"column":12,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1377","line":17,"column":12,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1378","line":18,"column":12,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1379","line":19,"column":12,"nodeType":"1213","messageId":"1214","endLine":19,"endColumn":23},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":15,"nodeType":"1251","endLine":51,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1380","line":51,"column":11,"nodeType":"1247","endLine":51,"endColumn":13,"suggestions":"1419"},{"ruleId":"1249","severity":1,"message":"1250","line":56,"column":30,"nodeType":"1251","messageId":"1252","endLine":56,"endColumn":32},{"ruleId":"1249","severity":1,"message":"1250","line":66,"column":33,"nodeType":"1251","messageId":"1252","endLine":66,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1382","line":114,"column":19,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1309","line":114,"column":33,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1310","line":114,"column":52,"nodeType":"1213","messageId":"1214","endLine":114,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1383","line":115,"column":36,"nodeType":"1213","messageId":"1214","endLine":115,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1311","line":115,"column":58,"nodeType":"1213","messageId":"1214","endLine":115,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1384","line":116,"column":35,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1312","line":116,"column":56,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1385","line":117,"column":41,"nodeType":"1213","messageId":"1214","endLine":117,"endColumn":59},{"ruleId":"1211","severity":1,"message":"1313","line":117,"column":68,"nodeType":"1213","messageId":"1214","endLine":117,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1386","line":118,"column":31,"nodeType":"1213","messageId":"1214","endLine":118,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1314","line":118,"column":48,"nodeType":"1213","messageId":"1214","endLine":118,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1387","line":119,"column":35,"nodeType":"1213","messageId":"1214","endLine":119,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1315","line":119,"column":56,"nodeType":"1213","messageId":"1214","endLine":119,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1388","line":120,"column":38,"nodeType":"1213","messageId":"1214","endLine":120,"endColumn":53},{"ruleId":"1211","severity":1,"message":"1316","line":120,"column":62,"nodeType":"1213","messageId":"1214","endLine":120,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1389","line":121,"column":32,"nodeType":"1213","messageId":"1214","endLine":121,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1317","line":121,"column":50,"nodeType":"1213","messageId":"1214","endLine":121,"endColumn":60},{"ruleId":"1211","severity":1,"message":"1390","line":123,"column":19,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1318","line":123,"column":36,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1319","line":123,"column":58,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1391","line":123,"column":87,"nodeType":"1213","messageId":"1214","endLine":123,"endColumn":102},{"ruleId":"1211","severity":1,"message":"1392","line":124,"column":38,"nodeType":"1213","messageId":"1214","endLine":124,"endColumn":53},{"ruleId":"1211","severity":1,"message":"1320","line":124,"column":62,"nodeType":"1213","messageId":"1214","endLine":124,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1393","line":125,"column":35,"nodeType":"1213","messageId":"1214","endLine":125,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1321","line":125,"column":56,"nodeType":"1213","messageId":"1214","endLine":125,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1394","line":126,"column":35,"nodeType":"1213","messageId":"1214","endLine":126,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1322","line":126,"column":56,"nodeType":"1213","messageId":"1214","endLine":126,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1395","line":127,"column":35,"nodeType":"1213","messageId":"1214","endLine":127,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1323","line":127,"column":56,"nodeType":"1213","messageId":"1214","endLine":127,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1324","line":129,"column":66,"nodeType":"1213","messageId":"1214","endLine":129,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1325","line":130,"column":68,"nodeType":"1213","messageId":"1214","endLine":130,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1396","line":132,"column":40,"nodeType":"1213","messageId":"1214","endLine":132,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1397","line":132,"column":66,"nodeType":"1213","messageId":"1214","endLine":132,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1398","line":133,"column":39,"nodeType":"1213","messageId":"1214","endLine":133,"endColumn":55},{"ruleId":"1211","severity":1,"message":"1399","line":133,"column":64,"nodeType":"1213","messageId":"1214","endLine":133,"endColumn":81},{"ruleId":"1211","severity":1,"message":"1400","line":157,"column":29,"nodeType":"1213","messageId":"1214","endLine":157,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1401","line":161,"column":29,"nodeType":"1213","messageId":"1214","endLine":161,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1400","line":172,"column":29,"nodeType":"1213","messageId":"1214","endLine":172,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1401","line":175,"column":29,"nodeType":"1213","messageId":"1214","endLine":175,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1226","line":185,"column":17,"nodeType":"1227","messageId":"1228","endLine":185,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":188,"column":22,"nodeType":"1227","messageId":"1228","endLine":188,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1226","line":196,"column":30,"nodeType":"1227","messageId":"1228","endLine":196,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1226","line":223,"column":42,"nodeType":"1227","messageId":"1228","endLine":223,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1226","line":280,"column":27,"nodeType":"1227","messageId":"1228","endLine":280,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":291,"column":47,"nodeType":"1251","messageId":"1252","endLine":291,"endColumn":49},{"ruleId":"1249","severity":1,"message":"1250","line":333,"column":39,"nodeType":"1251","messageId":"1252","endLine":333,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1226","line":336,"column":17,"nodeType":"1227","messageId":"1228","endLine":336,"endColumn":19},{"ruleId":"1249","severity":1,"message":"1250","line":345,"column":27,"nodeType":"1251","messageId":"1252","endLine":345,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":355,"column":39,"nodeType":"1251","messageId":"1252","endLine":355,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1372","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1373","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":12},{"ruleId":"1211","severity":1,"message":"1287","line":5,"column":9,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1371","line":7,"column":7,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1232","line":2,"column":33,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":33,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":47,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1226","line":29,"column":33,"nodeType":"1227","messageId":"1228","endLine":29,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1226","line":29,"column":47,"nodeType":"1227","messageId":"1228","endLine":29,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1233","line":9,"column":15,"nodeType":"1213","messageId":"1214","endLine":9,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1234","line":10,"column":7,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1282","line":20,"column":10,"nodeType":"1213","messageId":"1214","endLine":20,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1283","line":20,"column":22,"nodeType":"1213","messageId":"1214","endLine":20,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1284","line":22,"column":10,"nodeType":"1213","messageId":"1214","endLine":22,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1285","line":22,"column":22,"nodeType":"1213","messageId":"1214","endLine":22,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1253","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1254","line":4,"column":19,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1255","line":18,"column":10,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1256","line":18,"column":27,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":45},{"ruleId":"1211","severity":1,"message":"1286","line":1,"column":38,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1287","line":2,"column":10,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1220","line":2,"column":31,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1288","line":2,"column":60,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":66},{"ruleId":"1211","severity":1,"message":"1289","line":3,"column":24,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1290","line":10,"column":10,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1291","line":10,"column":23,"nodeType":"1213","messageId":"1214","endLine":10,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1292","line":11,"column":10,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1264","line":2,"column":44,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1266","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":30},{"ruleId":"1211","severity":1,"message":"1230","line":3,"column":32,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1268","line":4,"column":37,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1269","line":4,"column":44,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":50},{"ruleId":"1211","severity":1,"message":"1270","line":7,"column":9,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1271","line":8,"column":9,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1234","line":13,"column":7,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1272","line":15,"column":23,"nodeType":"1213","messageId":"1214","endLine":15,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1273","line":16,"column":10,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1274","line":16,"column":21,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":33},{"ruleId":"1211","severity":1,"message":"1275","line":17,"column":20,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1276","line":21,"column":9,"nodeType":"1213","messageId":"1214","endLine":21,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1277","line":23,"column":10,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":18},{"ruleId":"1245","severity":1,"message":"1278","line":26,"column":15,"nodeType":"1251","endLine":39,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1279","line":39,"column":10,"nodeType":"1247","endLine":39,"endColumn":28,"suggestions":"1420"},{"ruleId":"1211","severity":1,"message":"1281","line":63,"column":11,"nodeType":"1213","messageId":"1214","endLine":63,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1239","line":4,"column":9,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1240","line":5,"column":10,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1241","line":11,"column":18,"nodeType":"1213","messageId":"1214","endLine":11,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1242","line":12,"column":9,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1243","line":12,"column":25,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1234","line":16,"column":7,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1237","line":33,"column":15,"nodeType":"1213","messageId":"1214","endLine":33,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1244","line":50,"column":15,"nodeType":"1213","messageId":"1214","endLine":50,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1246","line":58,"column":10,"nodeType":"1247","endLine":58,"endColumn":12,"suggestions":"1421"},{"ruleId":"1211","severity":1,"message":"1237","line":61,"column":13,"nodeType":"1213","messageId":"1214","endLine":61,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":168,"column":27,"nodeType":"1227","messageId":"1228","endLine":168,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":176,"column":26,"nodeType":"1251","messageId":"1252","endLine":176,"endColumn":28},{"ruleId":"1211","severity":1,"message":"1235","line":3,"column":20,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1236","line":3,"column":64,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":80},{"ruleId":"1211","severity":1,"message":"1237","line":29,"column":9,"nodeType":"1213","messageId":"1214","endLine":29,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1226","line":34,"column":27,"nodeType":"1227","messageId":"1228","endLine":34,"endColumn":29},{"ruleId":"1211","severity":1,"message":"1257","line":16,"column":10,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1226","line":100,"column":23,"nodeType":"1227","messageId":"1228","endLine":100,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1258","line":107,"column":15,"nodeType":"1213","messageId":"1214","endLine":107,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1259","line":110,"column":11,"nodeType":"1213","messageId":"1214","endLine":110,"endColumn":26},{"ruleId":"1211","severity":1,"message":"1260","line":116,"column":9,"nodeType":"1213","messageId":"1214","endLine":116,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1261","line":128,"column":18,"nodeType":"1227","messageId":"1228","endLine":128,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1261","line":128,"column":35,"nodeType":"1227","messageId":"1228","endLine":128,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1262","line":131,"column":6,"nodeType":"1247","endLine":131,"endColumn":8,"suggestions":"1422"},{"ruleId":"1225","severity":1,"message":"1261","line":132,"column":12,"nodeType":"1227","messageId":"1228","endLine":132,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1357","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":17},{"ruleId":"1358","severity":1,"message":"1359","line":73,"column":9,"nodeType":"1213","messageId":"1360","endLine":73,"endColumn":15},{"ruleId":"1358","severity":1,"message":"1359","line":84,"column":9,"nodeType":"1213","messageId":"1360","endLine":84,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1357","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1216","line":2,"column":17,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":25},{"ruleId":"1211","severity":1,"message":"1238","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1219","line":2,"column":38,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1265","line":2,"column":51,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1288","line":2,"column":60,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":66},{"ruleId":"1211","severity":1,"message":"1276","line":14,"column":9,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1278","line":20,"column":15,"nodeType":"1251","endLine":38,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1402","line":38,"column":10,"nodeType":"1247","endLine":38,"endColumn":12,"suggestions":"1423"},{"ruleId":"1249","severity":1,"message":"1250","line":42,"column":25,"nodeType":"1251","messageId":"1252","endLine":42,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1404","line":51,"column":13,"nodeType":"1213","messageId":"1214","endLine":51,"endColumn":16},{"ruleId":"1249","severity":1,"message":"1250","line":52,"column":31,"nodeType":"1251","messageId":"1252","endLine":52,"endColumn":33},{"ruleId":"1249","severity":1,"message":"1250","line":76,"column":27,"nodeType":"1251","messageId":"1252","endLine":76,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":90,"column":27,"nodeType":"1251","messageId":"1252","endLine":90,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":108,"column":24,"nodeType":"1251","messageId":"1252","endLine":108,"endColumn":26},{"ruleId":"1405","severity":1,"message":"1406","line":135,"column":35,"nodeType":"1227","messageId":"1407","endLine":135,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1226","line":108,"column":25,"nodeType":"1227","messageId":"1228","endLine":108,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1294","line":1,"column":17,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":26},{"ruleId":"1295","severity":1,"message":"1296","line":9,"column":5,"nodeType":"1297","messageId":"1298","endLine":11,"endColumn":8},{"ruleId":"1211","severity":1,"message":"1370","line":2,"column":23,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":24},{"ruleId":"1211","severity":1,"message":"1371","line":4,"column":7,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":13},{"ruleId":"1354","severity":1,"message":"1355","line":13,"column":17,"nodeType":"1344","endLine":13,"endColumn":35},{"ruleId":"1211","severity":1,"message":"1293","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":39},{"ruleId":"1211","severity":1,"message":"1336","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1412","line":17,"column":12,"nodeType":"1213","messageId":"1214","endLine":17,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1413","line":18,"column":12,"nodeType":"1213","messageId":"1214","endLine":18,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":15,"nodeType":"1251","endLine":52,"endColumn":6},{"ruleId":"1245","severity":1,"message":"1414","line":52,"column":8,"nodeType":"1247","endLine":52,"endColumn":10,"suggestions":"1424"},{"ruleId":"1249","severity":1,"message":"1250","line":57,"column":28,"nodeType":"1251","messageId":"1252","endLine":57,"endColumn":30},{"ruleId":"1249","severity":1,"message":"1250","line":66,"column":31,"nodeType":"1251","messageId":"1252","endLine":66,"endColumn":33},{"ruleId":"1249","severity":1,"message":"1250","line":100,"column":35,"nodeType":"1251","messageId":"1252","endLine":100,"endColumn":37},{"ruleId":"1249","severity":1,"message":"1250","line":132,"column":27,"nodeType":"1251","messageId":"1252","endLine":132,"endColumn":29},{"ruleId":"1211","severity":1,"message":"1349","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1408","line":8,"column":23,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1409","line":8,"column":49,"nodeType":"1213","messageId":"1214","endLine":8,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1270","line":14,"column":9,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1410","line":35,"column":7,"nodeType":"1213","messageId":"1214","endLine":35,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1411","line":49,"column":7,"nodeType":"1213","messageId":"1214","endLine":49,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":125,"column":25,"nodeType":"1227","messageId":"1228","endLine":125,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1299","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1300","line":12,"column":8,"nodeType":"1213","messageId":"1214","endLine":12,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1301","line":14,"column":10,"nodeType":"1213","messageId":"1214","endLine":14,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1270","line":16,"column":8,"nodeType":"1213","messageId":"1214","endLine":16,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1302","line":23,"column":11,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1233","line":23,"column":17,"nodeType":"1213","messageId":"1214","endLine":23,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1303","line":26,"column":12,"nodeType":"1213","messageId":"1214","endLine":26,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1304","line":26,"column":19,"nodeType":"1213","messageId":"1214","endLine":26,"endColumn":23},{"ruleId":"1211","severity":1,"message":"1305","line":28,"column":11,"nodeType":"1213","messageId":"1214","endLine":28,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1306","line":31,"column":9,"nodeType":"1307","endLine":31,"endColumn":110},{"ruleId":"1225","severity":1,"message":"1226","line":31,"column":87,"nodeType":"1227","messageId":"1228","endLine":31,"endColumn":89},{"ruleId":"1225","severity":1,"message":"1226","line":34,"column":42,"nodeType":"1227","messageId":"1228","endLine":34,"endColumn":44},{"ruleId":"1211","severity":1,"message":"1308","line":38,"column":23,"nodeType":"1213","messageId":"1214","endLine":38,"endColumn":35},{"ruleId":"1245","severity":1,"message":"1278","line":42,"column":15,"nodeType":"1251","endLine":62,"endColumn":10},{"ruleId":"1211","severity":1,"message":"1309","line":66,"column":33,"nodeType":"1213","messageId":"1214","endLine":66,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1310","line":66,"column":52,"nodeType":"1213","messageId":"1214","endLine":66,"endColumn":63},{"ruleId":"1211","severity":1,"message":"1311","line":67,"column":58,"nodeType":"1213","messageId":"1214","endLine":67,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1312","line":68,"column":56,"nodeType":"1213","messageId":"1214","endLine":68,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1313","line":69,"column":68,"nodeType":"1213","messageId":"1214","endLine":69,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1314","line":70,"column":48,"nodeType":"1213","messageId":"1214","endLine":70,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1315","line":71,"column":56,"nodeType":"1213","messageId":"1214","endLine":71,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1316","line":72,"column":62,"nodeType":"1213","messageId":"1214","endLine":72,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1317","line":73,"column":50,"nodeType":"1213","messageId":"1214","endLine":73,"endColumn":60},{"ruleId":"1211","severity":1,"message":"1318","line":75,"column":36,"nodeType":"1213","messageId":"1214","endLine":75,"endColumn":49},{"ruleId":"1211","severity":1,"message":"1319","line":75,"column":58,"nodeType":"1213","messageId":"1214","endLine":75,"endColumn":72},{"ruleId":"1211","severity":1,"message":"1320","line":76,"column":62,"nodeType":"1213","messageId":"1214","endLine":76,"endColumn":78},{"ruleId":"1211","severity":1,"message":"1321","line":77,"column":56,"nodeType":"1213","messageId":"1214","endLine":77,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1322","line":78,"column":56,"nodeType":"1213","messageId":"1214","endLine":78,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1323","line":79,"column":56,"nodeType":"1213","messageId":"1214","endLine":79,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1324","line":81,"column":66,"nodeType":"1213","messageId":"1214","endLine":81,"endColumn":84},{"ruleId":"1211","severity":1,"message":"1325","line":82,"column":68,"nodeType":"1213","messageId":"1214","endLine":82,"endColumn":87},{"ruleId":"1211","severity":1,"message":"1326","line":83,"column":19,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1327","line":83,"column":35,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":47},{"ruleId":"1211","severity":1,"message":"1328","line":83,"column":56,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":69},{"ruleId":"1211","severity":1,"message":"1329","line":83,"column":84,"nodeType":"1213","messageId":"1214","endLine":83,"endColumn":98},{"ruleId":"1225","severity":1,"message":"1226","line":104,"column":29,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1226","line":104,"column":40,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1226","line":133,"column":29,"nodeType":"1227","messageId":"1228","endLine":133,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1226","line":133,"column":40,"nodeType":"1227","messageId":"1228","endLine":133,"endColumn":42},{"ruleId":"1211","severity":1,"message":"1330","line":143,"column":12,"nodeType":"1213","messageId":"1214","endLine":143,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1331","line":143,"column":24,"nodeType":"1213","messageId":"1214","endLine":143,"endColumn":37},{"ruleId":"1211","severity":1,"message":"1332","line":182,"column":11,"nodeType":"1213","messageId":"1214","endLine":182,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1226","line":188,"column":17,"nodeType":"1227","messageId":"1228","endLine":188,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1226","line":191,"column":22,"nodeType":"1227","messageId":"1228","endLine":191,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1226","line":199,"column":30,"nodeType":"1227","messageId":"1228","endLine":199,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1226","line":223,"column":42,"nodeType":"1227","messageId":"1228","endLine":223,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1226","line":270,"column":27,"nodeType":"1227","messageId":"1228","endLine":270,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":282,"column":47,"nodeType":"1251","messageId":"1252","endLine":282,"endColumn":49},{"ruleId":"1333","severity":1,"message":"1334","line":312,"column":38,"nodeType":"1335","endLine":312,"endColumn":57},{"ruleId":"1249","severity":1,"message":"1250","line":325,"column":39,"nodeType":"1251","messageId":"1252","endLine":325,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1226","line":328,"column":17,"nodeType":"1227","messageId":"1228","endLine":328,"endColumn":19},{"ruleId":"1249","severity":1,"message":"1250","line":337,"column":27,"nodeType":"1251","messageId":"1252","endLine":337,"endColumn":29},{"ruleId":"1249","severity":1,"message":"1250","line":347,"column":39,"nodeType":"1251","messageId":"1252","endLine":347,"endColumn":41},{"ruleId":"1211","severity":1,"message":"1253","line":1,"column":27,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":36},{"ruleId":"1211","severity":1,"message":"1345","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1221","line":4,"column":8,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1220","line":5,"column":8,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1346","line":6,"column":8,"nodeType":"1213","messageId":"1214","endLine":6,"endColumn":16},{"ruleId":"1211","severity":1,"message":"1300","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1347","line":13,"column":23,"nodeType":"1213","messageId":"1214","endLine":13,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":26,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1226","line":19,"column":37,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1226","line":20,"column":56,"nodeType":"1227","messageId":"1228","endLine":20,"endColumn":58},{"ruleId":"1211","severity":1,"message":"1221","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1211","severity":1,"message":"1336","line":4,"column":10,"nodeType":"1213","messageId":"1214","endLine":4,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1337","line":5,"column":10,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":21},{"ruleId":"1211","severity":1,"message":"1338","line":5,"column":23,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":34},{"ruleId":"1211","severity":1,"message":"1240","line":6,"column":10,"nodeType":"1213","messageId":"1214","endLine":6,"endColumn":18},{"ruleId":"1211","severity":1,"message":"1237","line":29,"column":9,"nodeType":"1213","messageId":"1214","endLine":29,"endColumn":15},{"ruleId":"1211","severity":1,"message":"1237","line":33,"column":11,"nodeType":"1213","messageId":"1214","endLine":33,"endColumn":17},{"ruleId":"1211","severity":1,"message":"1237","line":37,"column":13,"nodeType":"1213","messageId":"1214","endLine":37,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1339","line":64,"column":7,"nodeType":"1307","endLine":68,"endColumn":9},{"ruleId":"1225","severity":1,"message":"1226","line":66,"column":31,"nodeType":"1227","messageId":"1228","endLine":66,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1226","line":70,"column":41,"nodeType":"1227","messageId":"1228","endLine":70,"endColumn":43},{"ruleId":"1211","severity":1,"message":"1340","line":74,"column":10,"nodeType":"1213","messageId":"1214","endLine":74,"endColumn":19},{"ruleId":"1211","severity":1,"message":"1341","line":80,"column":25,"nodeType":"1213","messageId":"1214","endLine":80,"endColumn":41},{"ruleId":"1342","severity":1,"message":"1343","line":163,"column":7,"nodeType":"1344","endLine":166,"endColumn":8},{"ruleId":"1211","severity":1,"message":"1351","line":2,"column":8,"nodeType":"1213","messageId":"1214","endLine":2,"endColumn":13},{"ruleId":"1211","severity":1,"message":"1352","line":3,"column":9,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":21},{"ruleId":"1245","severity":1,"message":"1278","line":7,"column":15,"nodeType":"1251","endLine":10,"endColumn":6},{"ruleId":"1249","severity":1,"message":"1250","line":16,"column":31,"nodeType":"1251","messageId":"1252","endLine":16,"endColumn":33},{"ruleId":"1211","severity":1,"message":"1349","line":7,"column":8,"nodeType":"1213","messageId":"1214","endLine":7,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1350","line":96,"column":7,"nodeType":"1213","messageId":"1214","endLine":96,"endColumn":8},{"ruleId":"1225","severity":1,"message":"1226","line":159,"column":25,"nodeType":"1227","messageId":"1228","endLine":159,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1348","line":5,"column":9,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":20},{"ruleId":"1211","severity":1,"message":"1347","line":5,"column":22,"nodeType":"1213","messageId":"1214","endLine":5,"endColumn":36},{"ruleId":"1295","severity":1,"message":"1296","line":16,"column":3,"nodeType":"1297","messageId":"1298","endLine":18,"endColumn":4},{"ruleId":"1295","severity":1,"message":"1296","line":16,"column":3,"nodeType":"1297","messageId":"1298","endLine":18,"endColumn":4},{"ruleId":"1211","severity":1,"message":"1416","line":3,"column":8,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":14},{"ruleId":"1354","severity":1,"message":"1355","line":12,"column":13,"nodeType":"1344","endLine":12,"endColumn":31},{"ruleId":"1211","severity":1,"message":"1353","line":1,"column":10,"nodeType":"1213","messageId":"1214","endLine":1,"endColumn":16},{"ruleId":"1354","severity":1,"message":"1355","line":24,"column":9,"nodeType":"1344","endLine":24,"endColumn":25},{"ruleId":"1354","severity":1,"message":"1355","line":25,"column":9,"nodeType":"1344","endLine":25,"endColumn":28},{"ruleId":"1354","severity":1,"message":"1355","line":26,"column":9,"nodeType":"1344","endLine":26,"endColumn":27},{"ruleId":"1211","severity":1,"message":"1356","line":3,"column":7,"nodeType":"1213","messageId":"1214","endLine":3,"endColumn":11},{"ruleId":"1354","severity":1,"message":"1355","line":9,"column":7,"nodeType":"1344","endLine":9,"endColumn":25},"no-native-reassign",["1425"],"no-negated-in-lhs",["1426"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'jwt' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useState' is defined but never used.","'condition' is assigned a value but never used.","'id' is assigned a value but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Orders' is defined but never used.","'newOrderShow' is assigned a value but never used.","'setNewOrderShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCity' is assigned a value but never used.","'getUser' is defined but never used.","'manuList' is defined but never used.","'useParams' is defined but never used.","'url' is assigned a value but never used.","'history' is assigned a value but never used.","'addEstimate' is defined but never used.","'getLatestAddress' is defined but never used.","'result' is assigned a value but never used.","'setState' is defined but never used.","'getRegion' is defined but never used.","'Redirect' is defined but never used.","'Search' is assigned a value but never used.","'zonedTimeToUtc' is assigned a value but never used.","'utcToZonedTime' is assigned a value but never used.","'notes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAddressList' and 'match'. Either include them or remove the dependency array.","ArrayExpression",["1427"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'getRoles' is defined but never used.","'selectedRowMenu' is assigned a value but never used.","'setselectedRowMenu' is assigned a value but never used.","'useStore' is defined but never used.","'newAddress' is assigned a value but never used.","'siteAddressSent' is assigned a value but never used.","'estimateResult' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'regions' and 'salesmen'. Either include them or remove the dependency array.",["1428"],"'Input' is defined but never used.","'message' is defined but never used.","'getQuotes' is defined but never used.","'getAddress' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'confirm' is assigned a value but never used.","'Option' is assigned a value but never used.","'setaddressinfo' is assigned a value but never used.","'quoteList' is assigned a value but never used.","'setQuoteList' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'currentDate' is assigned a value but never used.","'formData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'createTable', 'match', and 'testData'. Either include them or remove the dependency array.",["1429"],"'findSalesman' is assigned a value but never used.","'deleteShow' is assigned a value but never used.","'setdeleteShow' is assigned a value but never used.","'onSelected' is assigned a value but never used.","'setonSelected' is assigned a value but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Select' is defined but never used.","'getAddresses' is defined but never used.","'addressList' is assigned a value but never used.","'setaddresses' is assigned a value but never used.","'form1' is assigned a value but never used.","'getOverlappingDaysInIntervals' is defined but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CustomSelect' is defined but never used.","'axios' is defined but never used.","'isDOMComponentElement' is defined but never used.","'path' is assigned a value but never used.","'value' is assigned a value but never used.","'bind' is assigned a value but never used.","'data' is assigned a value but never used.","The 'selectedQuote' conditional could make the dependencies of useEffect Hook (at line 62) change on every render. To fix this, wrap the initialization of 'selectedQuote' in its own useMemo() Hook.","VariableDeclarator","'setQuoteData' is assigned a value but never used.","'bindCustID' is assigned a value but never used.","'resetCustID' is assigned a value but never used.","'resetFirstName' is assigned a value but never used.","'resetLastName' is assigned a value but never used.","'resetBillingAddress' is assigned a value but never used.","'resetCity' is assigned a value but never used.","'resetPostCode' is assigned a value but never used.","'resetPhoneNumber' is assigned a value but never used.","'resetEmail' is assigned a value but never used.","'bindAddressID' is assigned a value but never used.","'resetAddressID' is assigned a value but never used.","'resetSiteAddress' is assigned a value but never used.","'resetSiteCity' is assigned a value but never used.","'resetSiteCode' is assigned a value but never used.","'resetSiteProv' is assigned a value but never used.","'resetCustomerNotes' is assigned a value but never used.","'resetInstallerNotes' is assigned a value but never used.","'salesman' is assigned a value but never used.","'bindSalesman' is assigned a value but never used.","'resetSalesman' is assigned a value but never used.","'assignSalesman' is assigned a value but never used.","'formSubmit' is assigned a value but never used.","'setFormSubmit' is assigned a value but never used.","'handleSubmitEvent' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useInput' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","The 'selectedQuote' conditional could make the dependencies of useEffect Hook (at line 78) change on every render. To fix this, wrap the initialization of 'selectedQuote' in its own useMemo() Hook.","'quoteData' is assigned a value but never used.","'setQuoteFormData' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ToggleSwitch' is defined but never used.","'QuoteOne' is defined but never used.","'setQuoteDataId' is assigned a value but never used.","'quoteDataId' is assigned a value but never used.","'SalesTooltip' is defined but never used.","'r' is assigned a value but never used.","'Query' is defined but never used.","'salesmanData' is defined but never used.","'Center' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'logo' is assigned a value but never used.","'getDate' is defined but never used.","no-redeclare","'values' is already defined.","redeclared","'AutoComplete' is defined but never used.","'getCustomers' is defined but never used.","'getCustomerFiltered' is defined but never used.","'Item' is defined but never used.","'createPortal' is defined but never used.","'render' is defined but never used.","'PropertiesPanel' is defined but never used.",["1425"],["1426"],"'A' is defined but never used.","'footer' is assigned a value but never used.","'findProps' is defined but never used.","'Text' is defined but never used.","'reset' is assigned a value but never used.","'quoteDetail' is assigned a value but never used.","'customerData' is assigned a value but never used.","'addressData' is assigned a value but never used.","'userData' is assigned a value but never used.","'productList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'counter', 'createDetails', 'quoteID', 'quotedetails', and 'setText'. Either include them or remove the dependency array. You can also do a functional update 'setcounter(c => ...)' if you only need 'counter' in the 'setcounter' call.",["1430"],"'custID' is assigned a value but never used.","'bindFirstName' is assigned a value but never used.","'bindLastName' is assigned a value but never used.","'bindBillingAddress' is assigned a value but never used.","'bindCity' is assigned a value but never used.","'bindPostCode' is assigned a value but never used.","'bindPhoneNumber' is assigned a value but never used.","'bindEmail' is assigned a value but never used.","'addressID' is assigned a value but never used.","'assignAddressID' is assigned a value but never used.","'bindSiteAddress' is assigned a value but never used.","'bindSiteCity' is assigned a value but never used.","'bindSiteCode' is assigned a value but never used.","'bindSiteProv' is assigned a value but never used.","'bindUserFirstName' is assigned a value but never used.","'resetUserFirstName' is assigned a value but never used.","'bindUserLastName' is assigned a value but never used.","'resetUserLastName' is assigned a value but never used.","'prodEdit' is assigned a value but never used.","'newProd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'testData'. Either include it or remove the dependency array.",["1431"],"'arr' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'deleteEstimate' is defined but never used.","'updateEstimate' is defined but never used.","'sendEmailUpdate' is assigned a value but never used.","'timeDeformat' is assigned a value but never used.","'detailData' is assigned a value but never used.","'prodData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createDetails', 'quoteData', and 'quoteID'. Either include them or remove the dependency array.",["1432"],"'format' is assigned a value but never used.",["1425"],["1426"],["1433"],["1434"],["1435"],["1436"],["1437"],["1438"],"no-global-assign","no-unsafe-negation",{"desc":"1439","fix":"1440"},{"desc":"1441","fix":"1442"},{"desc":"1443","fix":"1444"},{"desc":"1445","fix":"1446"},{"desc":"1447","fix":"1448"},{"desc":"1449","fix":"1450"},{"desc":"1445","fix":"1451"},{"desc":"1443","fix":"1452"},{"desc":"1439","fix":"1453"},{"desc":"1441","fix":"1454"},{"desc":"1447","fix":"1455"},{"desc":"1449","fix":"1456"},"Update the dependencies array to be: [getAddressList, match]",{"range":"1457","text":"1458"},"Update the dependencies array to be: [regions, salesmen]",{"range":"1459","text":"1460"},"Update the dependencies array to be: [createTable, match, tableData.length, testData]",{"range":"1461","text":"1462"},"Update the dependencies array to be: [counter, createDetails, quoteID, quotedetails, setText]",{"range":"1463","text":"1464"},"Update the dependencies array to be: [testData]",{"range":"1465","text":"1466"},"Update the dependencies array to be: [createDetails, quoteData, quoteID]",{"range":"1467","text":"1468"},{"range":"1469","text":"1464"},{"range":"1470","text":"1462"},{"range":"1471","text":"1458"},{"range":"1472","text":"1460"},{"range":"1473","text":"1466"},{"range":"1474","text":"1468"},[2357,2359],"[getAddressList, match]",[4218,4220],"[regions, salesmen]",[1440,1458],"[createTable, match, tableData.length, testData]",[2426,2428],"[counter, createDetails, quoteID, quotedetails, setText]",[1294,1296],"[testData]",[1573,1575],"[createDetails, quoteData, quoteID]",[2426,2428],[1440,1458],[2357,2359],[4218,4220],[1294,1296],[1573,1575]]
[{"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/index.js":"1","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/App.js":"2","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/leftnav/index.js":"3","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/main/index.js":"4","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/avatar/index.js":"5","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/config/leftnav.js":"6","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/orders/index.js":"7","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/customers/index.js":"8","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/invoices/index.js":"9","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/quotes/index.js":"10","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/users/index.js":"11","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/home/index.js":"12","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/roles/index.js":"13","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/login/index.js":"14","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/admin/index.js":"15","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/api/index.js":"16","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/api/base.js":"17","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/head/index.js":"18","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/linkbutton/index.js":"19","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/util/storage.js":"20","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/util/catch.js":"21","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/searchbar/index.js":"22","/Users/zhangguoliang/Desktop/office-better/project/src/index.js":"23","/Users/zhangguoliang/Desktop/office-better/project/src/App.js":"24","/Users/zhangguoliang/Desktop/office-better/project/src/component/admin/index.js":"25","/Users/zhangguoliang/Desktop/office-better/project/src/pages/login/index.js":"26","/Users/zhangguoliang/Desktop/office-better/project/src/util/storage.js":"27","/Users/zhangguoliang/Desktop/office-better/project/src/util/catch.js":"28","/Users/zhangguoliang/Desktop/office-better/project/src/api/index.js":"29","/Users/zhangguoliang/Desktop/office-better/project/src/component/main/index.js":"30","/Users/zhangguoliang/Desktop/office-better/project/src/component/searchbar/index.js":"31","/Users/zhangguoliang/Desktop/office-better/project/src/component/head/index.js":"32","/Users/zhangguoliang/Desktop/office-better/project/src/component/leftnav/index.js":"33","/Users/zhangguoliang/Desktop/office-better/project/src/api/base.js":"34","/Users/zhangguoliang/Desktop/office-better/project/src/config/leftnav.js":"35","/Users/zhangguoliang/Desktop/office-better/project/src/pages/home/index.js":"36","/Users/zhangguoliang/Desktop/office-better/project/src/pages/invoices/index.js":"37","/Users/zhangguoliang/Desktop/office-better/project/src/pages/orders/index.js":"38","/Users/zhangguoliang/Desktop/office-better/project/src/pages/customers/index.js":"39","/Users/zhangguoliang/Desktop/office-better/project/src/pages/users/index.js":"40","/Users/zhangguoliang/Desktop/office-better/project/src/pages/quotes/index.js":"41","/Users/zhangguoliang/Desktop/office-better/project/src/pages/roles/index.js":"42","/Users/zhangguoliang/Desktop/office-better/project/src/pages/linkbutton/index.js":"43","/Users/zhangguoliang/Desktop/office-better/project/src/component/avatar/index.js":"44"},{"size":241,"mtime":1611273182268,"results":"45","hashOfConfig":"46"},{"size":376,"mtime":1612847566977,"results":"47","hashOfConfig":"46"},{"size":1424,"mtime":1613969134499,"results":"48","hashOfConfig":"46"},{"size":933,"mtime":1613236530942,"results":"49","hashOfConfig":"46"},{"size":1607,"mtime":1613084233103,"results":"50","hashOfConfig":"46"},{"size":1150,"mtime":1611614580087,"results":"51","hashOfConfig":"46"},{"size":93,"mtime":1611615140262,"results":"52","hashOfConfig":"46"},{"size":99,"mtime":1611615143878,"results":"53","hashOfConfig":"46"},{"size":97,"mtime":1611615141917,"results":"54","hashOfConfig":"46"},{"size":93,"mtime":1611615138060,"results":"55","hashOfConfig":"46"},{"size":9191,"mtime":1614036079220,"results":"56","hashOfConfig":"46"},{"size":89,"mtime":1611615135812,"results":"57","hashOfConfig":"46"},{"size":4497,"mtime":1614050860333,"results":"58","hashOfConfig":"46"},{"size":2145,"mtime":1612912386866,"results":"59","hashOfConfig":"46"},{"size":1238,"mtime":1613230573967,"results":"60","hashOfConfig":"46"},{"size":1089,"mtime":1614037314595,"results":"61","hashOfConfig":"46"},{"size":1296,"mtime":1613080555355,"results":"62","hashOfConfig":"46"},{"size":2094,"mtime":1612914243307,"results":"63","hashOfConfig":"46"},{"size":159,"mtime":1612905739084,"results":"64","hashOfConfig":"46"},{"size":278,"mtime":1612909660349,"results":"65","hashOfConfig":"46"},{"size":32,"mtime":1612911162523,"results":"66","hashOfConfig":"46"},{"size":863,"mtime":1613236465714,"results":"67","hashOfConfig":"46"},{"size":241,"mtime":1614140129846,"results":"68","hashOfConfig":"69"},{"size":377,"mtime":1614140129834,"results":"70","hashOfConfig":"69"},{"size":1415,"mtime":1615148003204,"results":"71","hashOfConfig":"69"},{"size":2031,"mtime":1615145593078,"results":"72","hashOfConfig":"69"},{"size":278,"mtime":1614140129851,"results":"73","hashOfConfig":"69"},{"size":518,"mtime":1614140129851,"results":"74","hashOfConfig":"69"},{"size":22440,"mtime":1615146870301,"results":"75","hashOfConfig":"69"},{"size":933,"mtime":1614140129845,"results":"76","hashOfConfig":"69"},{"size":863,"mtime":1614140129845,"results":"77","hashOfConfig":"69"},{"size":2094,"mtime":1614140129844,"results":"78","hashOfConfig":"69"},{"size":1424,"mtime":1614140129845,"results":"79","hashOfConfig":"69"},{"size":1342,"mtime":1614140828552,"results":"80","hashOfConfig":"69"},{"size":1150,"mtime":1614140129845,"results":"81","hashOfConfig":"69"},{"size":89,"mtime":1614140129846,"results":"82","hashOfConfig":"69"},{"size":97,"mtime":1614140129847,"results":"83","hashOfConfig":"69"},{"size":93,"mtime":1614140129849,"results":"84","hashOfConfig":"69"},{"size":99,"mtime":1614140129846,"results":"85","hashOfConfig":"69"},{"size":9265,"mtime":1615147022078,"results":"86","hashOfConfig":"69"},{"size":93,"mtime":1614140129849,"results":"87","hashOfConfig":"69"},{"size":4226,"mtime":1614199831768,"results":"88","hashOfConfig":"69"},{"size":159,"mtime":1614140129847,"results":"89","hashOfConfig":"69"},{"size":1607,"mtime":1614140129844,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"gz3qzw",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"oy1odw",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"144"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"144"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/index.js",[],["191","192"],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/App.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/leftnav/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/main/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/avatar/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/config/leftnav.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/orders/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/customers/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/invoices/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/quotes/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/users/index.js",["193","194"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Card, Table, Button, Modal, Form, Input, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { addUser, getUsers, updateUser, deleteUser } from \"../../api/index\";\nconst { Item } = Form;\nconst { confirm } = Modal;\nexport default function Users() {\n  //form ref to control the adding form\n  const [form] = Form.useForm();\n  //form ref to control the updating form\n  const [form1] = Form.useForm();\n  //control the status of adding form modal\n  const [addShow, setAddShow] = useState(false);\n  //control the status of updating form modal\n  const [updateShow, setupdateShow] = useState(false);\n  //control the status of the deleting form modal\n  const [deleteShow, setdeleteShow] = useState(false);\n  //the data of users list\n  const [datas, setDatas] = useState([]);\n  //the selected to be updated or deleted data\n  const [selectedData, setselectedData] = useState({});\n  const title = (\n    <Button\n      onClick={() => {\n        form.resetFields();\n        setAddShow(true);\n      }}\n      type=\"primary\"\n    >\n      New User\n    </Button>\n  );\n\n  //for table coloums\n  const columns = [\n    {\n      title: \"LoginId\",\n      dataIndex: \"loginId\",\n      key: \"loginId\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n\n    {\n      title: \"Role\",\n      dataIndex: \"role\",\n      key: \"role\",\n    },\n    {\n      title: \"Operate\",\n      key: \"operate\",\n      render: (data) => (\n        <div className=\"operate-button\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setselectedData(data);\n              setupdateShow(true);\n              form1.setFieldsValue({\n                loginId: data.loginId,\n                loginPwd: data.loginPwd,\n                loginPwdConfirm: data.loginPwdConfirm,\n                email: data.email,\n                role: data.role,\n              });\n            }}\n          >\n            Modify\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setselectedData(data);\n\n              showDeleteConfirm(data.key);\n            }}\n          >\n            Delete\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  //handle adding form\n  const handleAdd = async () => {\n    const validResult = await form.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const value = form.getFieldsValue();\n    const { loginId, loginPwd, email, role } = value;\n    const result = await addUser({ loginId, loginPwd, email, role });\n    if (result.data.status === 1) {\n      message.success(\"Success!\");\n      setDatas([...datas, result.data.data]);\n      setAddShow(false);\n    }\n  };\n  //handle updating form\n  const handleUpdate = async () => {\n    //validate first\n    const validResult = await form1.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const value = form1.getFieldsValue();\n    const { loginId, loginPwd, email, role } = value;\n    const id = selectedData.key;\n\n    //update data in the backend\n    const result = await updateUser(id, loginId, loginPwd, email, role);\n    setupdateShow(false);\n    if (result.data.status === 1) {\n      message.success(\"success!\");\n    }\n  };\n\n  const handleCancel = () => {\n    setAddShow(false);\n    setupdateShow(false);\n  };\n  //handle delete user function\n  const showDeleteConfirm = (id) => {\n    confirm({\n      title: \"Are you sure delete this user?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        return new Promise((resolve, reject) => {\n          deleteUser(id)\n            .then((data) => {\n              if (data.data.status === 1) {\n                message.success(\"success!\");\n                resolve();\n              }\n            })\n            .catch((err) => {\n              message.warn(err);\n              reject();\n            });\n        });\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  //handle ajax side effect\n  useEffect(() => {\n    getUsers()\n      .then((data) => {\n        const datas = data.data.data.map((item) => {\n          return {\n            key: item.id,\n            loginId: item.loginId,\n            email: item.email,\n            role: item.role,\n          };\n        });\n        setDatas(datas);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [datas]);\n  return (\n    <div className=\"settings-user\">\n      <Card title={title} bordered>\n        <Table\n          style={{ width: \"80%\", margin: \"0 auto\" }}\n          rowKey=\"key\"\n          bordered\n          dataSource={datas}\n          columns={columns}\n          tableLayout=\"auto\"\n          pagination={{ pageSize: 3 }}\n        ></Table>\n        <Modal\n          visible={addShow}\n          title=\"Create A New User\"\n          onOk={handleAdd}\n          onCancel={handleCancel}\n        >\n          <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n            <Item\n              label=\"LoginId\"\n              name=\"loginId\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item\n              label=\"loginPwd\"\n              name=\"loginPwd\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"ConfirmPwd\"\n              name=\"loginPwdConfirm\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"the two password that you entered do not match\"\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item\n              label=\"role\"\n              name=\"role\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n          </Form>\n        </Modal>\n        <Modal\n          visible={updateShow}\n          title=\"Update\"\n          onOk={handleUpdate}\n          onCancel={handleCancel}\n        >\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n            <Item\n              label=\"LoginId\"\n              name=\"loginId\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item\n              label=\"loginPwd\"\n              name=\"loginPwd\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"ConfirmPwd\"\n              name=\"loginPwdConfirm\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"the two password that you entered do not match\"\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item\n              label=\"role\"\n              name=\"role\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n          </Form>\n        </Modal>\n      </Card>\n    </div>\n  );\n}\n",["195","196"],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/home/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/roles/index.js",["197","198"],"import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { Card, Table, Button, Modal, Form, Input, message, Tree } from \"antd\";\nimport { addRole, getRoles } from \"../../api/index\";\nimport { manuList } from \"../../config/leftnav\";\nconst { Item } = Form;\n\nexport default function Roles() {\n  //handling datas of role\n  const [datas, setDatas] = useState([]);\n  //control the adding form status\n  const [addingShow, setaddingShow] = useState(false);\n  //control the modify tree component status\n  const [modifyShow, setmodifyShow] = useState(false);\n  const [form] = Form.useForm();\n  //handle the selected row\n  const [row, setRow] = useState({});\n  //handle the menu of the selected row\n  const [selectedRowMenu, setselectedRowMenu] = useState([]);\n  //the added role name\n  const columns = [\n    {\n      title: \"Role Name\",\n      dataIndex: \"rolename\",\n      key: \"rolename\",\n    },\n    {\n      title: \"Creat Time\",\n      dataIndex: \"createtime\",\n      key: \"createtime\",\n    },\n    {\n      title: \"Authorized Time\",\n      dataIndex: \"authorizedtime\",\n      key: \"authorizedtime\",\n    },\n    {\n      title: \"Authorizor\",\n      dataIndex: \"authorizor\",\n      key: \"authorizor\",\n    },\n  ];\n\n  //getting tree nodes\n  const getTreeNodes = (array) => {\n    return array.map((item, index) => {\n      return {\n        title: item.content,\n        key: item.key,\n        children: item.children ? getTreeNodes(item.children) : \"\",\n      };\n    });\n  };\n  //the data format of tree component\n  const treeDatas = [\n    {\n      title: \"Authority\",\n      key: \"All\",\n      children: getTreeNodes(manuList),\n    },\n  ];\n\n  //handle tree component(settings for role)\n  const handleTree = () => {};\n  //handle onrow callback function in table settings\n  const handleonRow = (record, index) => {\n    return {\n      onClick: () => {\n        setRow(record);\n        console.log(row.rolename);\n      },\n    };\n  };\n  //handle adding a new role\n  const handleAdding = async () => {\n    const validResult = await form.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const rolename = form.getFieldValue(\"rolename\");\n    const result = await addRole(rolename);\n    if (result.data.status === 1) {\n      message.success(\"success!\");\n      setaddingShow(false);\n    } else {\n      message.warn(result.data.err);\n      setaddingShow(false);\n    }\n    setaddingShow(false);\n  };\n\n  //handle all form status being cancel\n  const handleCancle = () => {\n    setaddingShow(false);\n    setmodifyShow(false);\n  };\n\n  //the title of card component\n  const title = (\n    <>\n      <Button\n        style={{ marginRight: 20 }}\n        type=\"primary\"\n        onClick={() => {\n          setaddingShow(true);\n        }}\n      >\n        Create A Role\n      </Button>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          console.log(\"click\");\n          setmodifyShow(true);\n        }}\n        disabled={!row.id}\n      >\n        Set Roles\n      </Button>\n    </>\n  );\n\n  //handle ajax request side effect\n  useEffect(() => {\n    getRoles()\n      .then((data) => {\n        setDatas(data.data.data);\n      })\n      .catch((err) => {\n        message.warn(err);\n      });\n    console.log(\"navlist\", manuList);\n  }, []);\n\n  return (\n    <Card title={title} bordered>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        rowSelection={{\n          type: \"radio\",\n          selectedRowKeys: [row.id],\n          onChange: (rowkeys, rows) => {\n            setRow(rows[0]);\n          },\n        }}\n        onRow={handleonRow}\n        dataSource={datas}\n      ></Table>\n      <Modal\n        visible={addingShow}\n        onOk={handleAdding}\n        onCancel={handleCancle}\n        title=\"Adding a role\"\n      >\n        <Form form={form}>\n          <Item\n            name=\"rolename\"\n            label=\"role_name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please Input..\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n        </Form>\n      </Modal>\n      <Modal\n        visible={modifyShow}\n        title=\"set roles\"\n        onOk={handleTree}\n        onCancel={handleCancle}\n      >\n        <Form>\n          <Item label=\"Role:\" wrapperCol={{ span: 18 }}>\n            <Input disabled value={row.rolename} />\n          </Item>\n        </Form>\n        <Tree checkable treeData={treeDatas} autoExpandParent={true}></Tree>\n      </Modal>\n    </Card>\n  );\n}\n","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/login/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/admin/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/api/index.js",["199"],"import ajax from \"./base\";\n\nconst baseURL = \"\";\n\n//get the information from weather api\nexport const reqWeather = async (city) => {\n  const url = `http://api.openweathermap.org/data/2.5/weather`;\n  const result = await ajax(url, {\n    q: city,\n    appid: \"31b67d550e93316925f5913b31894f17\",\n  });\n\n  return result;\n};\n\n//get the login information\nexport function getLogin(loginId, loginPwd) {\n  return ajax(\"/user/login\", { loginId, loginPwd }, \"post\");\n}\n\n//add user\nexport function addUser(user) {\n  return ajax(\"/user/add\", user, \"post\");\n}\n//update user\nexport function updateUser(id, loginId, loginPwd, email, role) {\n  return ajax(\"/user/update\", { id, loginId, loginPwd, email, role }, \"post\");\n}\n//delete user\nexport function deleteUser(id) {\n  return ajax(\"/user/delete\", { id }, \"post\");\n}\n\n//get the userlist information\nexport function getUsers() {\n  return ajax(\"/user/users\");\n}\n\n//adding a new role\nexport function addRole(rolename) {\n  return ajax(\"/role/add\", { rolename }, \"post\");\n}\n\n//getting the role lists\nexport function getRoles() {\n  return ajax(\"/role/roles\");\n}\n","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/api/base.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/head/index.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport { reqWeather } from \"../../api/index\";\nimport LinkButton from \"../../pages/linkbutton\";\nimport { Modal } from \"antd\";\nimport { removeUser } from \"../../util/storage\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport \"./index.css\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Head(props) {\n  const [date, setCurrendate] = useState();\n  const [city, setCity] = useState(\"Calgary\");\n  const [icon, setIcon] = useState(`http://openweathermap.org/img/w/10d.png`);\n  const [main, setMain] = useState();\n  const timer = setInterval(() => {\n    if (timer) clearInterval(timer);\n    const date = new Date(Date.now());\n    const dateFormat = `${date.getFullYear()}/${\n      date.getMonth() + 1\n    }/${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n    setCurrendate(dateFormat);\n  }, 1000);\n  const getCancel = () => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: \"Do you want to logout?\",\n      onOk: () => {\n        removeUser();\n        props.history.push(\"/login\");\n      },\n    });\n  };\n  useEffect(() => {\n    async function getWeather() {\n      const weather = await reqWeather(city);\n      if (weather) {\n        const { icon, main } = weather.data.weather[0];\n        setIcon(icon);\n        setMain(main);\n      }\n    }\n    getWeather();\n  }, [city]);\n\n  return (\n    <>\n      <div className=\"logo\"></div>\n      <div className=\"dashboard\">\n        <div className=\"upper\">\n          <div>\n            <span>Welcome </span>\n            <span className=\"welcome\">{props.username}</span>\n\n            <LinkButton onClick={getCancel}>Exit</LinkButton>\n          </div>\n        </div>\n        <div className=\"lower\">\n          <div>\n            <span>{city}</span>\n            <span>{date}</span>\n            <span>{main}</span>\n            <span>\n              <img alt=\"\" src={`http://openweathermap.org/img/w/${icon}.png`} />\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default withRouter(Head);\n","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/pages/linkbutton/index.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/util/storage.js",[],"/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/util/catch.js",["201"],"export default {\n  user: {},\n};\n","/Users/zhangguoliang/Desktop/college project/sodv2999_team_explorers/src/component/searchbar/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/index.js",[],["202","203"],"/Users/zhangguoliang/Desktop/office-better/project/src/App.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/component/admin/index.js",["204","205"],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/login/index.js",["206"],"/Users/zhangguoliang/Desktop/office-better/project/src/util/storage.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/util/catch.js",["207"],"export default {\n  user: {\n    id: \"1\",\n    loginId: \"guoliang\",\n    loginPwd: \"admin\",\n    email: \"g.zhang724@mybvc.ca\",\n    role: \"admin\",\n    imgUrl:\n      \"https://www.google.com/search?q=%E6%AD%AA%E8%84%96%E5%AD%90%E5%A4%B4%E5%83%8F&rlz=1C5CHFA_enCA816CA816&sxsrf=ALeKk026JAFItvRLQzh60FilXTYMm0kD1w:1614135295097&tbm=isch&source=iu&ictx=1&fir=kgVfeLH4njHjtM%252Ckk5I6R7ld_GysM%252C_&vet=1&usg=AI4_-kQoImbDoEPHDxIbXuoYJCf_-HAgeA&sa=X&ved=2ahUKEwjltYjHwoHvAhUKsZ4KHZeKChgQ9QF6BAgNEAE#imgrc=kgVfeLH4njHjtM\",\n  },\n};\n","/Users/zhangguoliang/Desktop/office-better/project/src/api/index.js",["208","209"],"/Users/zhangguoliang/Desktop/office-better/project/src/component/main/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/component/searchbar/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/component/head/index.js",["210"],"/Users/zhangguoliang/Desktop/office-better/project/src/component/leftnav/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/api/base.js",["211"],"import axios from \"axios\";\nimport { message } from \"antd\";\nimport { getUser } from \"../util/storage\";\nimport { manuList } from \"../config/leftnav\";\n\n//set the interceptor for response: errorhandling\naxios.interceptors.response.use(null, (err) => {\n  const expectedError =\n    err.response && err.response.status > 400 && err.response.status < 500;\n  if (err.response && err.response.status === 400) {\n    message.warn(\"Please Login First\");\n  } else if (err.response && err.response.status === 404) {\n    message.warn(\"Forbbiden\");\n  } else if (err.response && err.response.status === 401) {\n    message.warn(\"Access Denied...\");\n  } else if (expectedError) {\n    message.warn(\"Try another name please..\");\n  }\n  return Promise.reject(err);\n});\n//set the request goes with headers[token] automatically\n\naxios.defaults.headers.post[\"user_id\"] = getUser();\naxios.defaults.headers.put[\"user_id\"] = getUser();\naxios.defaults.headers.delete[\"user_id\"] = getUser();\n\nexport default function ajax(url, body = {}, method = \"GET\") {\n  //\n  let promise;\n  if (method === \"GET\") {\n    promise = axios.get(url, {\n      params: body,\n    });\n  } else promise = axios.post(url, body);\n  return new Promise((resolve, reject) => {\n    promise\n      .then((data) => resolve(data))\n      .catch((err) => {\n        message.warn(\"err:\" + err);\n      });\n  });\n}\n","/Users/zhangguoliang/Desktop/office-better/project/src/config/leftnav.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/home/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/invoices/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/orders/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/customers/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/users/index.js",["212","213","214","215"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { addUser, getUsers, updateUser, deleteUser } from \"../../api/index\";\nimport { datas } from \"../../api/index\";\nconst { Item } = Form;\nconst { confirm } = Modal;\nconst { Option } = Select;\nexport default function Users() {\n  //form ref to control the adding form\n  const [form] = Form.useForm();\n  //form ref to control the updating form\n  const [form1] = Form.useForm();\n  //control the status of adding form modal\n  const [addShow, setAddShow] = useState(false);\n  //control the status of updating form modal\n  const [updateShow, setupdateShow] = useState(false);\n  //control the status of the deleting form modal\n  const [deleteShow, setdeleteShow] = useState(false);\n\n  const [onSelected, setonSelected] = useState();\n  const [, setForce] = useState();\n\n  const [users, setusers] = useState([]);\n\n  //the selected to be updated or deleted data\n  const [selectedData, setselectedData] = useState({});\n  const title = (\n    <Button\n      onClick={() => {\n        form.resetFields();\n        setAddShow(true);\n      }}\n      type=\"primary\"\n    >\n      New User\n    </Button>\n  );\n\n  const options = datas.role.map((item) => (\n    <Option key={item.id}>{item.rolename}</Option>\n  ));\n\n  //for table coloums\n  const columns = [\n    {\n      title: \"LoginId\",\n      dataIndex: \"loginId\",\n      key: \"loginId\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n\n    {\n      title: \"Role\",\n      dataIndex: \"role\",\n      key: \"role\",\n    },\n    {\n      title: \"Operate\",\n      key: \"operate\",\n      render: (data) => (\n        <div className=\"operate-button\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setselectedData(data);\n              setupdateShow(true);\n              form1.setFieldsValue({\n                loginId: data.loginId,\n                loginPwd: data.loginPwd,\n                loginPwdConfirm: data.loginPwdConfirm,\n                email: data.email,\n                role: data.role,\n              });\n            }}\n          >\n            Modify\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setselectedData(data);\n              showDeleteConfirm(data.key);\n            }}\n          >\n            Delete\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  //handle adding form\n  const handleAdd = async () => {\n    const validResult = await form.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const value = form.getFieldsValue();\n    const { loginId, loginPwd, email, role } = value;\n    const result = await addUser({ loginId, loginPwd, email, role });\n    if (result.data && result.data.affectedRows > 0) {\n      message.success(\"Success!\");\n      setAddShow(false);\n      setForce();\n    }\n  };\n  //handle updating form\n  const handleUpdate = async () => {\n    //validate first\n    const validResult = await form1.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const value = form1.getFieldsValue();\n    const { loginId, loginPwd, email, role } = value;\n    const id = selectedData.key;\n    console.log(\"id\", id);\n    //update data in the backend\n    const result = await updateUser(id, loginId, loginPwd, email, role);\n    setupdateShow(false);\n    console.log(result);\n    if (result.data.status === 1) {\n      message.success(\"success!\");\n    }\n  };\n\n  const handleCancel = () => {\n    setAddShow(false);\n    setupdateShow(false);\n  };\n  //handle delete user function\n  const showDeleteConfirm = (id) => {\n    confirm({\n      title: \"Are you sure delete this user?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        return new Promise((resolve, reject) => {\n          const result = deleteUser(id);\n          if (result === 1) message.success(\"success!\");\n          resolve();\n        });\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    const func = async () => {\n      var result = await getUsers();\n      var tables = result.data.map((item) => ({\n        id: item.UserId,\n        loginId: item.FirstName,\n        loginPwd: item.Password,\n        emial: item.Email,\n        role: item.SecurityLevel,\n      }));\n      setusers(tables);\n    };\n    func();\n  }, [users.length]);\n  return (\n    <div className=\"settings-user\">\n      <Card title={title} bordered>\n        <Table\n          style={{ width: \"80%\", margin: \"0 auto\" }}\n          rowKey=\"id\"\n          bordered\n          dataSource={users}\n          columns={columns}\n          tableLayout=\"auto\"\n          pagination={{ pageSize: 3 }}\n        ></Table>\n        <Modal\n          visible={addShow}\n          title=\"Create A New User\"\n          onOk={handleAdd}\n          onCancel={handleCancel}\n        >\n          <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n            <Item\n              label=\"LoginId\"\n              name=\"loginId\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item\n              label=\"loginPwd\"\n              name=\"loginPwd\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"ConfirmPwd\"\n              name=\"loginPwdConfirm\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"the two password that you entered do not match\"\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item\n              label=\"role\"\n              name=\"role\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Select>{options}</Select>\n            </Item>\n          </Form>\n        </Modal>\n        <Modal\n          visible={updateShow}\n          title=\"Update\"\n          onOk={handleUpdate}\n          onCancel={handleCancel}\n        >\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n            <Item\n              label=\"LoginId\"\n              name=\"loginId\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item\n              label=\"loginPwd\"\n              name=\"loginPwd\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"ConfirmPwd\"\n              name=\"loginPwdConfirm\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"the two password that you entered do not match\"\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Item>\n            <Item\n              label=\"email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item\n              label=\"role\"\n              name=\"role\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Required\",\n                },\n              ]}\n            >\n              <Select>{options}</Select>\n            </Item>\n          </Form>\n        </Modal>\n      </Card>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/office-better/project/src/pages/quotes/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/pages/roles/index.js",["216","217","218","219"],"import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { Card, Table, Button, Modal, Form, Input, message, Tree } from \"antd\";\nimport { addRole, getRoles } from \"../../api/index\";\nimport { manuList } from \"../../config/leftnav\";\nimport { datas } from \"../../api/index\";\nconst { Item } = Form;\n\nexport default function Roles() {\n  //control the adding form status\n  const [addingShow, setaddingShow] = useState(false);\n  //control the modify tree component status\n  const [modifyShow, setmodifyShow] = useState(false);\n  const [form] = Form.useForm();\n  //handle the selected row\n  const [row, setRow] = useState({});\n  //handle the menu of the selected row\n  const [selectedRowMenu, setselectedRowMenu] = useState([]);\n  //the added role name\n  const columns = [\n    {\n      title: \"Role Name\",\n      dataIndex: \"rolename\",\n      key: \"rolename\",\n    },\n    {\n      title: \"Creat Time\",\n      dataIndex: \"createtime\",\n      key: \"createtime\",\n    },\n    {\n      title: \"Authorized Time\",\n      dataIndex: \"authorizedtime\",\n      key: \"authorizedtime\",\n    },\n    {\n      title: \"Authorizor\",\n      dataIndex: \"authorizor\",\n      key: \"authorizor\",\n    },\n  ];\n\n  //getting tree nodes\n  const getTreeNodes = (array) => {\n    return array.map((item, index) => {\n      return {\n        title: item.content,\n        key: item.key,\n        children: item.children ? getTreeNodes(item.children) : \"\",\n      };\n    });\n  };\n  //the data format of tree component\n  const treeDatas = [\n    {\n      title: \"Authority\",\n      key: \"All\",\n      children: getTreeNodes(manuList),\n    },\n  ];\n\n  //handle tree component(settings for role)\n  const handleTree = () => {};\n  //handle onrow callback function in table settings\n  const handleonRow = (record, index) => {\n    return {\n      onClick: () => {\n        setRow(record);\n        console.log(row.rolename);\n      },\n    };\n  };\n  //handle adding a new role\n  const handleAdding = async () => {\n    const validResult = await form.validateFields();\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\n    const rolename = form.getFieldValue(\"rolename\");\n    const result = await addRole(rolename);\n    if (result.data.status === 1) {\n      message.success(\"success!\");\n      setaddingShow(false);\n    } else {\n      message.warn(result.data.err);\n      setaddingShow(false);\n    }\n    setaddingShow(false);\n  };\n\n  //handle all form status being cancel\n  const handleCancle = () => {\n    setaddingShow(false);\n    setmodifyShow(false);\n  };\n\n  //the title of card component\n  const title = (\n    <>\n      <Button\n        style={{ marginRight: 20 }}\n        type=\"primary\"\n        onClick={() => {\n          setaddingShow(true);\n        }}\n      >\n        Create A Role\n      </Button>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          console.log(\"click\");\n          setmodifyShow(true);\n        }}\n        disabled={!row.id}\n      >\n        Set Roles\n      </Button>\n    </>\n  );\n\n  return (\n    <Card title={title} bordered>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        rowSelection={{\n          type: \"radio\",\n          selectedRowKeys: [row.id],\n          onChange: (rowkeys, rows) => {\n            setRow(rows[0]);\n          },\n        }}\n        onRow={handleonRow}\n        dataSource={datas.role}\n      ></Table>\n      <Modal\n        visible={addingShow}\n        onOk={handleAdding}\n        onCancel={handleCancle}\n        title=\"Adding a role\"\n      >\n        <Form form={form}>\n          <Item\n            name=\"rolename\"\n            label=\"role_name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please Input..\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n        </Form>\n      </Modal>\n      <Modal\n        visible={modifyShow}\n        title=\"set roles\"\n        onOk={handleTree}\n        onCancel={handleCancle}\n      >\n        <Form>\n          <Item label=\"Role:\" wrapperCol={{ span: 18 }}>\n            <Input disabled value={row.rolename} />\n          </Item>\n        </Form>\n        <Tree checkable treeData={treeDatas} defaultExpandAll={true}></Tree>\n      </Modal>\n    </Card>\n  );\n}\n","/Users/zhangguoliang/Desktop/office-better/project/src/pages/linkbutton/index.js",[],"/Users/zhangguoliang/Desktop/office-better/project/src/component/avatar/index.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":18,"column":10,"nodeType":"226","messageId":"227","endLine":18,"endColumn":20},{"ruleId":"224","severity":1,"message":"228","line":18,"column":22,"nodeType":"226","messageId":"227","endLine":18,"endColumn":35},{"ruleId":"220","replacedBy":"229"},{"ruleId":"222","replacedBy":"230"},{"ruleId":"224","severity":1,"message":"231","line":19,"column":10,"nodeType":"226","messageId":"227","endLine":19,"endColumn":25},{"ruleId":"224","severity":1,"message":"232","line":19,"column":27,"nodeType":"226","messageId":"227","endLine":19,"endColumn":45},{"ruleId":"224","severity":1,"message":"233","line":3,"column":7,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"234","line":12,"column":16,"nodeType":"226","messageId":"227","endLine":12,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":1,"column":1,"nodeType":"237","endLine":3,"endColumn":3},{"ruleId":"220","replacedBy":"238"},{"ruleId":"222","replacedBy":"239"},{"ruleId":"224","severity":1,"message":"240","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":18},{"ruleId":"224","severity":1,"message":"241","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":11},{"ruleId":"224","severity":1,"message":"242","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":1,"column":1,"nodeType":"237","endLine":11,"endColumn":3},{"ruleId":"224","severity":1,"message":"233","line":3,"column":7,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"243","line":65,"column":7,"nodeType":"226","messageId":"227","endLine":65,"endColumn":16},{"ruleId":"224","severity":1,"message":"234","line":12,"column":16,"nodeType":"226","messageId":"227","endLine":12,"endColumn":23},{"ruleId":"224","severity":1,"message":"244","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":20,"column":10,"nodeType":"226","messageId":"227","endLine":20,"endColumn":20},{"ruleId":"224","severity":1,"message":"228","line":20,"column":22,"nodeType":"226","messageId":"227","endLine":20,"endColumn":35},{"ruleId":"224","severity":1,"message":"245","line":22,"column":10,"nodeType":"226","messageId":"227","endLine":22,"endColumn":20},{"ruleId":"224","severity":1,"message":"246","line":22,"column":22,"nodeType":"226","messageId":"227","endLine":22,"endColumn":35},{"ruleId":"224","severity":1,"message":"247","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"248","line":4,"column":19,"nodeType":"226","messageId":"227","endLine":4,"endColumn":27},{"ruleId":"224","severity":1,"message":"231","line":18,"column":10,"nodeType":"226","messageId":"227","endLine":18,"endColumn":25},{"ruleId":"224","severity":1,"message":"232","line":18,"column":27,"nodeType":"226","messageId":"227","endLine":18,"endColumn":45},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'deleteShow' is assigned a value but never used.","Identifier","unusedVar","'setdeleteShow' is assigned a value but never used.",["249"],["250"],"'selectedRowMenu' is assigned a value but never used.","'setselectedRowMenu' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'setCity' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["249"],["250"],"'Redirect' is defined but never used.","'jwt' is defined but never used.","'Catch' is defined but never used.","'condition' is assigned a value but never used.","'manuList' is defined but never used.","'onSelected' is assigned a value but never used.","'setonSelected' is assigned a value but never used.","'useEffect' is defined but never used.","'getRoles' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\index.js":"1","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\App.js":"2","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\store.js":"3","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\reducers\\quoteOneReducer.js":"4","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\admin\\index.js":"5","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\login\\index.js":"6","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\util\\storage.js":"7","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\index.js":"8","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\main\\index.js":"9","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\searchbar\\index.js":"10","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\leftnav\\index.js":"11","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\head\\index.js":"12","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\base.js":"13","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\config\\leftnav.js":"14","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\index.js":"15","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\index.js":"16","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\linkbutton\\index.js":"17","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\avatar\\index.js":"18","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\index.js":"19","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newcustomer\\index.js":"20","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customerInfo\\index.js":"21","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\roles\\index.js":"22","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newestimate\\index.js":"23","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\addressInfo\\index.js":"24","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\users\\index.js":"25","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\invoices\\index.js":"26","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customers\\index.js":"27","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\neworder.js":"28","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\addresses.js":"29","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\calendar.js":"30","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\customer.js":"31","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\Template.js":"32","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuoteOne.js":"33","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuotePrint.js":"34","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\FormOne.js":"35","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteData.js":"36","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Button.js":"37","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\CustomSelect.js":"38","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Modal.js":"39","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\ToggleSwitch.js":"40","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js":"41","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js":"42","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tabs.js":"43","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js":"44","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\hooks\\input-hook.js":"45","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js":"46","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js":"47","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js":"48","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js":"49","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tab.js":"50","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js":"51","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js":"52","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js":"53","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\footer\\index.js":"54","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\headforquote\\index.js":"55","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quotes.js":"56"},{"size":397,"mtime":1618250875493,"results":"57","hashOfConfig":"58"},{"size":394,"mtime":1617829601171,"results":"59","hashOfConfig":"58"},{"size":278,"mtime":1618250875498,"results":"60","hashOfConfig":"58"},{"size":814,"mtime":1618250875497,"results":"61","hashOfConfig":"58"},{"size":1561,"mtime":1617829601222,"results":"62","hashOfConfig":"58"},{"size":2077,"mtime":1617829601295,"results":"63","hashOfConfig":"58"},{"size":287,"mtime":1617829601340,"results":"64","hashOfConfig":"58"},{"size":3310,"mtime":1618429007498,"results":"65","hashOfConfig":"58"},{"size":1457,"mtime":1618246985634,"results":"66","hashOfConfig":"58"},{"size":1248,"mtime":1618256119859,"results":"67","hashOfConfig":"58"},{"size":1478,"mtime":1617829601224,"results":"68","hashOfConfig":"58"},{"size":2165,"mtime":1617829601224,"results":"69","hashOfConfig":"58"},{"size":1384,"mtime":1617829601185,"results":"70","hashOfConfig":"58"},{"size":1213,"mtime":1617829601253,"results":"71","hashOfConfig":"58"},{"size":129,"mtime":1617829601288,"results":"72","hashOfConfig":"58"},{"size":2216,"mtime":1618250875496,"results":"73","hashOfConfig":"58"},{"size":165,"mtime":1617829601289,"results":"74","hashOfConfig":"58"},{"size":1670,"mtime":1617829601223,"results":"75","hashOfConfig":"58"},{"size":5363,"mtime":1618251311020,"results":"76","hashOfConfig":"58"},{"size":4096,"mtime":1618507875542,"results":"77","hashOfConfig":"58"},{"size":12096,"mtime":1618421103621,"results":"78","hashOfConfig":"58"},{"size":4397,"mtime":1617831257918,"results":"79","hashOfConfig":"58"},{"size":10700,"mtime":1618505304994,"results":"80","hashOfConfig":"58"},{"size":2642,"mtime":1617829601264,"results":"81","hashOfConfig":"58"},{"size":9615,"mtime":1618436733813,"results":"82","hashOfConfig":"58"},{"size":102,"mtime":1617829601288,"results":"83","hashOfConfig":"58"},{"size":1835,"mtime":1617829601277,"results":"84","hashOfConfig":"58"},{"size":2284,"mtime":1618508552935,"results":"85","hashOfConfig":"58"},{"size":1346,"mtime":1617829601180,"results":"86","hashOfConfig":"58"},{"size":2001,"mtime":1617829601191,"results":"87","hashOfConfig":"58"},{"size":3215,"mtime":1618420361570,"results":"88","hashOfConfig":"58"},{"size":870,"mtime":1617829601283,"results":"89","hashOfConfig":"58"},{"size":18357,"mtime":1618436615432,"results":"90","hashOfConfig":"58"},{"size":5168,"mtime":1618419365345,"results":"91","hashOfConfig":"58"},{"size":1352,"mtime":1618414479289,"results":"92","hashOfConfig":"58"},{"size":3659,"mtime":1618250875497,"results":"93","hashOfConfig":"58"},{"size":360,"mtime":1618250875491,"results":"94","hashOfConfig":"58"},{"size":708,"mtime":1618250875492,"results":"95","hashOfConfig":"58"},{"size":477,"mtime":1617829601232,"results":"96","hashOfConfig":"58"},{"size":1252,"mtime":1617829601233,"results":"97","hashOfConfig":"58"},{"size":6037,"mtime":1618429183880,"results":"98","hashOfConfig":"58"},{"size":1114,"mtime":1617829601240,"results":"99","hashOfConfig":"58"},{"size":1461,"mtime":1617829601252,"results":"100","hashOfConfig":"58"},{"size":1109,"mtime":1617829601240,"results":"101","hashOfConfig":"58"},{"size":428,"mtime":1618250875493,"results":"102","hashOfConfig":"58"},{"size":308,"mtime":1618510090768,"results":"103","hashOfConfig":"58"},{"size":845,"mtime":1617829601251,"results":"104","hashOfConfig":"58"},{"size":606,"mtime":1617829601241,"results":"105","hashOfConfig":"58"},{"size":616,"mtime":1617829601240,"results":"106","hashOfConfig":"58"},{"size":843,"mtime":1617829601252,"results":"107","hashOfConfig":"58"},{"size":1404,"mtime":1617829601241,"results":"108","hashOfConfig":"58"},{"size":1410,"mtime":1617829601240,"results":"109","hashOfConfig":"58"},{"size":1805,"mtime":1617829601251,"results":"110","hashOfConfig":"58"},{"size":1047,"mtime":1618510036951,"results":"111","hashOfConfig":"58"},{"size":549,"mtime":1618509086126,"results":"112","hashOfConfig":"58"},{"size":357,"mtime":1618417050874,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"wpva8t",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"116"},"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\index.js",[],["255","256"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\App.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\store.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\redux\\reducers\\quoteOneReducer.js",["257"],"\r\nconst intialState = {\r\n    \"quote_selected\": null,\r\n    \"quote_one\":{\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        billing_address: \"\",\r\n        city: \"\",\r\n        post_code: \"\",\r\n        phone_number: \"\",\r\n        email: \"\",\r\n        customer_notes: \"\",\r\n        installer_notes: \"\",\r\n        salesman: \"\",\r\n        products: [{\r\n            name: null,\r\n            option: null,\r\n            price: 0.00\r\n        }]\r\n    },\r\n}\r\n\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"quote_selected\":\r\n            return {\r\n                quote_selected: action.payload,\r\n            };\r\n        case \"quote_one\":\r\n            return {\r\n                quote_one: action.payloadq,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\admin\\index.js",["258","259"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"../main\";\r\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\r\nimport \"./index.css\";\r\nimport Leftnav from \"../leftnav\";\r\nimport Head from \"../head\";\r\nimport { getUser } from \"../../util/storage\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Searchbar from \"../searchbar\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport default class Homepage extends React.Component {\r\n  state = {\r\n    user: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    const user = await getUser();\r\n    this.setState({ user });\r\n  };\r\n  render() {\r\n    const { user } = this.state;\r\n    const SecurityLevel =\r\n      (this.state.user && this.state.user.SecurityLevel) || \"\";\r\n    const FirstName = (this.state.user && this.state.user.FirstName) || \"\";\r\n    if (!getUser()) return <Redirect to=\"/login\" />;\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Sider>\r\n          <Leftnav role={SecurityLevel} imgUrl={datas.user[0].imgUrl}></Leftnav>\r\n        </Sider>\r\n        <Layout className=\"main-layout\">\r\n          <Header className=\"header\">\r\n            <Head username={FirstName} />\r\n          </Header>\r\n\r\n          <Content className=\"content\">\r\n            <Searchbar />\r\n            <Main />\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            ©2021 Created by Team Explorers\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\login\\index.js",["260"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Input, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport { getLogin, reqWeather } from \"../../api/index\";\r\nimport { setUser, getUser } from \"../../util/storage\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Item } = Form;\r\nexport default function Login(props) {\r\n  const handleSubmit = async (values) => {\r\n    const { loginId, loginPwd } = values;\r\n    const result = await getLogin(loginId, loginPwd);\r\n    reqWeather(\"calgary\");\r\n    if (result.data && result.data.length > 0) {\r\n      setUser(result.data[0]);\r\n      props.history.replace(\"/\");\r\n      message.success(\"Login Success!\");\r\n    } else {\r\n      message.info(\"Username or Password not correct!\");\r\n    }\r\n  };\r\n  if (getUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div className=\"login_page\">\r\n      <div className=\"login\">\r\n        <h2>Login</h2>\r\n        <Form onFinish={handleSubmit} autoComplete=\"off\">\r\n          <Item\r\n            name=\"loginId\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Emptry!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              style={{ backgroundColor: \"transparent\" }}\r\n              prefix={<UserOutlined />}\r\n              placeholder=\"username\"\r\n            />\r\n          </Item>\r\n          <Item\r\n            name=\"loginPwd\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Cannot be Empty\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password prefix={<LockOutlined />} placeholder=\"password\" />\r\n          </Item>\r\n          <Item className=\"login_button\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              block\r\n            >\r\n              Login\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\util\\storage.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\index.js",["261","262"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"\";\r\n\r\n//get the information from weather api\r\nexport const reqWeather = async (city) => {\r\n  const url = `http://api.openweathermap.org/data/2.5/weather`;\r\n  const result = await ajax(url, {\r\n    q: city,\r\n    appid: \"31b67d550e93316925f5913b31894f17\",\r\n  });\r\n  return result;\r\n};\r\n\r\nexport async function getLogin(loginId, loginPwd) {\r\n  console.log(\"here\");\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = `Email='${loginId}'and Password='${loginPwd}'`;\r\n  const user = await ajax(\r\n    \"/fetchValues\",\r\n    { tableName, columns, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"user\", user);\r\n  if (user !== []) return user;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//add user\r\nexport async function addUser(user) {\r\n  var tableName = \"users\";\r\n  var values = `null,'${user.loginId}','${user.loginId}','${user.email}','${user.loginPwd}','${user.role}',\"null\"`;\r\n\r\n  var users = await ajax(\"/insertValues\", { tableName, values }, \"post\");\r\n  console.log(\"user\", users);\r\n  if (users !== []) return users;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n//update user\r\nexport async function updateUser(id, loginId, loginPwd, email, role) {\r\n  var tableName = \"users\";\r\n  var columsAndvalues = `FirstName='${loginId}',Password='${loginPwd}',Email='${email}',SecurityLevel='${role}'`;\r\n  var condition = `UserID='${id}'`;\r\n  const result = await ajax(\r\n    \"/updateValues\",\r\n    { tableName, columsAndvalues, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n//delete user\r\nexport async function deleteUser(id) {\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = `UserID='${id}'`;\r\n  const result = await ajax(\"/deleteValues\", { tableName, columns }, \"post\");\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//get the userlist information\r\nexport async function getUsers() {\r\n  var tableName = \"users\";\r\n  var columns = \"*\";\r\n  var condition = ``;\r\n  const user = await ajax(\r\n    \"/fetchValues\",\r\n    { tableName, columns, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"user\", user);\r\n  if (user !== []) return user;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//adding a new role\r\nexport function addRole(rolename) {\r\n  const obj = {\r\n    rolename,\r\n    authTime: \"\",\r\n    authAuthor: \"\",\r\n    menus: [\"\"],\r\n    createAt: \"\",\r\n  };\r\n  datas.role.push(obj);\r\n  return 1;\r\n}\r\n\r\n//getting the role lists\r\nexport function getRoles() {\r\n  return datas.role;\r\n}\r\n\r\nexport const datas = {\r\n  user: [\r\n    {\r\n      imgUrl:\r\n        \"https://img.icons8.com/ios-filled/50/000000/change-user-male.png\",\r\n    },\r\n  ],\r\n  role: [\r\n    {\r\n      id: \"1\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"admin\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"salesman\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"trucklead\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      authTime: \"\",\r\n      authAuthor: \"\",\r\n      menus: [\"\"],\r\n      createAt: \"\",\r\n      rolename: \"manager\",\r\n    },\r\n  ],\r\n};\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\main\\index.js",["263"],"import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport Home from \"../../pages/home\";\r\nimport Quotes from \"../../pages/quotes\";\r\nimport Orders from \"../../pages/orders\";\r\nimport Invoices from \"../../pages/invoices\";\r\nimport Customers from \"../../pages/customers\";\r\nimport Users from \"../../pages/users\";\r\nimport Roles from \"../../pages/roles\";\r\nimport CustomerInfo from \"../../pages/customerInfo\";\r\nimport AddressInfo from \"../../pages/addressInfo\";\r\nimport NewCusomter from \"../../pages/newcustomer\";\r\nimport NewEstimate from \"../../pages/newestimate\";\r\nimport \"./index.css\";\r\nconst id = 0;\r\nexport default function Main() {\r\n  return (\r\n    <div className=\"content-main\">\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/quotes\" component={Quotes} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/invoices\" component={Invoices} />\r\n        <Route path=\"/customers\" component={Customers} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Route path=\"/roles\" component={Roles} />\r\n        <Route path=\"/customerinfo/:customer\" component={CustomerInfo} />\r\n        <Route path=\"/addressinfo/:address\" component={AddressInfo} />\r\n        <Route path=\"/newcustomer\" component={NewCusomter} />\r\n        <Route path=\"/newestimate\" component={NewEstimate} />\r\n        <Redirect to=\"/home\"></Redirect>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\searchbar\\index.js",["264","265","266","267","268","269","270","271"],"import React, { useState } from \"react\";\r\nimport { Input, Radio, Form, message, Modal, Button } from \"antd\";\r\nimport Orders from \"../../pages/orders\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { Search } = Input;\r\nconst id = 0;\r\nfunction Searchbar(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [newOrderShow, setNewOrderShow] = useState(false);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n    if (e.target.value == \"customer\") {\r\n      props.history.push(\"/newcustomer\");\r\n    } else props.history.push(\"/newestimate\");\r\n  };\r\n  const onSearch = (value) => {\r\n    message.success(value);\r\n  };\r\n\r\n  const options = [\r\n    { label: \"New Customer\", value: \"customer\" },\r\n    { label: \"New Estimate\", value: \"order\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content-searchbar\">\r\n      <Search\r\n        allowClear\r\n        className=\"searchbar\"\r\n        placeholder=\"Search\"\r\n        onSearch={onSearch}\r\n        enterButton\r\n      />\r\n      <Radio.Group\r\n        options={options}\r\n        onChange={handleChange}\r\n        value={value}\r\n        optionType=\"button\"\r\n        buttonStyle=\"solid\"\r\n      ></Radio.Group>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(Searchbar);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\leftnav\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\head\\index.js",["272"],"import React, { useState, useEffect } from \"react\";\r\nimport { reqWeather } from \"../../api/index\";\r\nimport LinkButton from \"../../pages/linkbutton\";\r\nimport { Modal } from \"antd\";\r\nimport { removeUser } from \"../../util/storage\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Head(props) {\r\n  const [date, setCurrendate] = useState();\r\n  const [city, setCity] = useState(\"Calgary\");\r\n  const [icon, setIcon] = useState(`http://openweathermap.org/img/w/10d.png`);\r\n  const [main, setMain] = useState();\r\n  const timer = setInterval(() => {\r\n    if (timer) clearInterval(timer);\r\n    const date = new Date(Date.now());\r\n    const dateFormat = `${date.getFullYear()}/${\r\n      date.getMonth() + 1\r\n    }/${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    setCurrendate(dateFormat);\r\n  }, 1000);\r\n  const getCancel = () => {\r\n    Modal.confirm({\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Do you want to logout?\",\r\n      onOk: () => {\r\n        removeUser();\r\n        props.history.push(\"/login\");\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    async function getWeather() {\r\n      const weather = await reqWeather(city);\r\n      if (weather) {\r\n        const { icon, main } = weather.data.weather[0];\r\n        setIcon(icon);\r\n        setMain(main);\r\n      }\r\n    }\r\n    getWeather();\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo\"></div>\r\n      <div className=\"dashboard\">\r\n        <div className=\"upper\">\r\n          <div>\r\n            <span>Welcome </span>\r\n            <span className=\"welcome\">{props.username}</span>\r\n\r\n            <LinkButton onClick={getCancel}>Exit</LinkButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"lower\">\r\n          <div>\r\n            <span>{city}</span>\r\n            <span>{date}</span>\r\n            <span>{main}</span>\r\n            <span>\r\n              <img alt=\"\" src={`http://openweathermap.org/img/w/${icon}.png`} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(Head);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\base.js",["273"],"import axios from \"axios\";\r\nimport { message } from \"antd\";\r\nimport { getUser } from \"../util/storage\";\r\nimport { manuList } from \"../config/leftnav\";\r\n\r\n//set the interceptor for response: errorhandling\r\naxios.interceptors.response.use(null, (err) => {\r\n  const expectedError =\r\n    err.response && err.response.status > 400 && err.response.status < 500;\r\n  if (err.response && err.response.status === 400) {\r\n    message.warn(\"Please Login First\");\r\n  } else if (err.response && err.response.status === 404) {\r\n    message.warn(\"Forbidden\");\r\n  } else if (err.response && err.response.status === 401) {\r\n    message.warn(\"Access Denied...\");\r\n  } else if (expectedError) {\r\n    message.warn(\"Try another name please..\");\r\n  }\r\n  return Promise.reject(err);\r\n});\r\n//set the request goes with headers[token] automatically\r\n\r\naxios.defaults.headers.post[\"user_id\"] = getUser();\r\naxios.defaults.headers.put[\"user_id\"] = getUser();\r\naxios.defaults.headers.delete[\"user_id\"] = getUser();\r\n\r\nexport default function ajax(url, body = {}, method = \"GET\") {\r\n  //\r\n  let promise;\r\n  if (method === \"GET\") {\r\n    promise = axios.get(url, {\r\n      params: body,\r\n    });\r\n  } else promise = axios.post(url, body);\r\n  return new Promise((resolve, reject) => {\r\n    promise\r\n      .then((data) => resolve(data))\r\n      .catch((err) => {\r\n        message.warn(\"err:\" + err);\r\n      });\r\n  });\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\config\\leftnav.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\index.js",["274","275","276","277","278"],"import React, {useState } from \"react\";\r\nimport { Route, Switch,  Link,  useParams,  useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport FormOne from \"./FormOne\";\r\nimport QuoteOne from \"./QuoteOne\";\r\nimport QuotePrint from \"./QuotePrint\";\r\n\r\nexport default function Quotes() {\r\n\r\n  const [quoteDataId, setQuoteDataId] = useState('0');\r\n  const [quoteData, setQuoteData] = useState({});\r\n  const [quoteFormData, setQuoteFormData] = useState({});\r\n\r\n  let { path, url } = useRouteMatch();\r\n  let history = useHistory();\r\n\r\n  function onSetQuoteDataChange(data) {\r\n    if (!(data == null || data  == \"\" || data == undefined)) {\r\n        setQuoteDataId(data.id);\r\n        setQuoteData(data);\r\n        history.push(`${url}/${data.id}/new/`)\r\n    }else{\r\n        setQuoteData({});\r\n    }\r\n  }\r\n\r\n  function onSetQuoteFormDataChange(data) {\r\n    if (!(data == null || data  == \"\" || data == undefined)) {\r\n        setQuoteFormData(data);\r\n        console.log(data);\r\n        history.push(`${url}/${quoteDataId}/print/`)\r\n    }else{\r\n        setQuoteFormData({});\r\n    }\r\n  }\r\n\r\n  function onEditQuoteFormData(){\r\n      history.push(`/quotes/${quoteData.id}/edit/`)\r\n  }\r\n\r\n  return (\r\n    <div style={{padding: \"10px\", margin: \"10px\"}}>\r\n      <div>\r\n        <h2> Quote Form  <Link className=\"btn btn-sm float-right\" style={{float: \"right\"}} to=\"/quotes\"><button> New Quote  </button></Link></h2>\r\n      </div> \r\n      <hr/>\r\n      <Switch>\r\n        <Route exact path={path} >\r\n          <FormOne quoteDataId={quoteDataId} onSetQuoteDataChange={onSetQuoteDataChange} />\r\n          </Route>\r\n        <Route path=\"/quotes/:qid/new\" >\r\n          <QuoteOne key={quoteData} quoteData={quoteData} onSetQuoteFormDataChange={onSetQuoteFormDataChange} />\r\n        </Route>\r\n        <Route path=\"/quotes/:qid/edit\" >\r\n          <QuoteOne key={quoteData} quoteData={quoteData} quoteFormData={quoteFormData} onSetQuoteFormDataChange={onSetQuoteFormDataChange} />\r\n        </Route>\r\n        <Route path=\"/quotes/:qid/print\" >\r\n          <QuotePrint key={quoteData} quoteFormData={quoteFormData}  quoteData={quoteData} onEditQuoteFormData={onEditQuoteFormData} />\r\n        </Route>\r\n      </Switch>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\linkbutton\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\avatar\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\orders\\index.js",["279","280","281","282"],"import React, { useEffect, useState } from \"react\";\r\nimport { getEstimates } from \"../../api/neworder\";\r\nimport { Input, Table, Form, Modal, Card, Select, Button } from \"antd\";\r\nimport \"./index.css\";\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\nconst id = 0;\r\nexport default function Orders() {\r\n  const [form] = Form.useForm();\r\n  //form ref to control the adding form\r\n\r\n  const [updateShow, setupdateShow] = useState(false);\r\n  const [orders, setorders] = useState([]);\r\n  const handleUpdate = () => {\r\n    setupdateShow(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setupdateShow(false);\r\n  };\r\n  const onFinish = () => {\r\n    setupdateShow(false);\r\n  };\r\n  //the selected to be updated or deleted data\r\n  const [selectedData, setselectedData] = useState({});\r\n  const columns = [\r\n    {\r\n      title: \"EstimateID\",\r\n      dataIndex: \"EstimateID\",\r\n      key: \"EstimateID\",\r\n    },\r\n\r\n    {\r\n      title: \"CustomerID\",\r\n      dataIndex: \"CustomerID\",\r\n      key: \"CustomerID\",\r\n    },\r\n    {\r\n      title: \"UserID\",\r\n      dataIndex: \"UserID\",\r\n      key: \"UserID\",\r\n    },\r\n    {\r\n      title: \"JobType\",\r\n      dataIndex: \"JobType\",\r\n      key: \"JobType\",\r\n    },\r\n    {\r\n      title: \"EstimateInfo\",\r\n      dataIndex: \"EstimateInfo\",\r\n      key: \"EstimateInfo\",\r\n    },\r\n    {\r\n      title: \"CreationDate\",\r\n      dataIndex: \"CreationDate\",\r\n      key: \"CreationDate\",\r\n    },\r\n    {\r\n      title: \"CreationDate\",\r\n      dataIndex: \"CreationDate\",\r\n      key: \"CreationDate\",\r\n    },\r\n    {\r\n      title: \"startDate\",\r\n      dataIndex: \"startDate\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      title: \"endDate\",\r\n      dataIndex: \"endDate\",\r\n      key: \"endDate\",\r\n    },\r\n    {\r\n      title: \"RegionID\",\r\n      dataIndex: \"RegionID\",\r\n      key: \"RegionID\",\r\n    },\r\n  ];\r\n  const regions = [\r\n    \"Elmira & area\",\r\n    \"Guelph & area\",\r\n    \"Cambridge & area\",\r\n    \"Hamilton & area\",\r\n    \"Stratford & area\",\r\n    \"Listowel area\",\r\n    \"Greater Toronto Area\",\r\n    \"Kitchener - Waterloo\",\r\n    \"Brantford, Paris, Burford, Waterford, Brant County, Haldmald, Caledonia\",\r\n  ];\r\n  const options = regions.map((item, index) => (\r\n    <Option key={index + 1}>{item}</Option>\r\n  ));\r\n  useEffect(() => {\r\n    getEstimates().then((data) => {\r\n      console.log(\"data\", data);\r\n      setorders(data.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Card bordered>\r\n        <Table\r\n          scroll={{ x: 1300 }}\r\n          style={{ width: \"80%\", margin: \"0 auto\" }}\r\n          rowKey=\"Phone\"\r\n          bordered\r\n          dataSource={orders}\r\n          columns={columns}\r\n          tableLayout=\"auto\"\r\n          pagination={{ pageSize: 3 }}\r\n        ></Table>\r\n        <Modal\r\n          visible={updateShow}\r\n          title=\"Update\"\r\n          onOk={handleUpdate}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form form={form} onFinish={onFinish} wrapperCol={{ span: 14 }}>\r\n            <Item\r\n              name=\"FirstName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"First Name\" />\r\n            </Item>\r\n            <Item\r\n              name=\"LastName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Last Name\" />\r\n            </Item>\r\n            <Item\r\n              name=\"BillingAddress\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Billing Address\" />\r\n            </Item>\r\n            <Item\r\n              name=\"City\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"city\" />\r\n            </Item>\r\n            <Item\r\n              name=\"PostalCode\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"PostalCode\" />\r\n            </Item>\r\n            <Item\r\n              name=\"Phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Phone Number\" />\r\n            </Item>\r\n            <Item\r\n              name=\"Email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Email\" />\r\n            </Item>\r\n            <Item\r\n              name=\"Region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Cannot be Empty\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newcustomer\\index.js",["283","284","285","286"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customerInfo\\index.js",["287","288","289","290","291","292","293"],"import React, {useEffect, setState, useState} from 'react';\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select, Space } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {getRegion, updateCustomer, getRegionAPI, getCustomer, getCustomerAddresses, deleteCustomer, addAddress} from '../../api/customer';\r\nimport { Redirect, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { PropertiesPanel } from 'devextreme-react/diagram';\r\n const { Item } = Form;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\n\r\nexport function CustomerInfo() {\r\n\r\n  let match = useRouteMatch('/customerinfo/:customer').params.customer;\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showAddress, setShowAddress] = useState(false);\r\n  const [formAddress] = Form.useForm();\r\n  const [form1] = Form.useForm();\r\n  const [regions, setRegions] = useState([]);\r\n  const [customerInfo, setcustomerinfo] = useState([]);\r\n  const [addressList, setAddressList] = useState([]);\r\n\r\n  const options = regions.map((item) => (\r\n    <Option key={item.id}>{item.name}</Option>\r\n  ));\r\n    useEffect(() => {\r\n        const func = async () => {\r\n          var result = await getCustomer(match);\r\n          var customerInfo = result.data.map((item) =>({\r\n            id: item.CustomerID,\r\n            firstName: item.FirstName,\r\n            lastName: item.LastName,\r\n            email: item.Email,\r\n            phone: item.Phone,\r\n            billing: item.BillingAddress,\r\n            city: item.City,\r\n            postal: item.PostalCode,\r\n            region: item.Region\r\n          }));\r\n          setcustomerinfo(customerInfo[0]);\r\n          \r\n        };\r\n        func();\r\n        getAddressList();\r\n          getRegions();\r\n        \r\n      }, []);\r\n\r\n    const getAddressList = async () => {\r\n        var result = await getCustomerAddresses(match);\r\n        var addresses = result.data.map((item) =>({\r\n          id: item.AddressID,\r\n          address: item.Address,\r\n          postalcode: item.PostalCode,\r\n          city: item.City,\r\n          prov: item.Province,\r\n          region: item.Region\r\n        }));\r\n        setAddressList(addresses);\r\n        console.log(addresses);\r\n      };\r\n      const getRegions = async() =>{\r\n        var result = await getRegionAPI();\r\n        var regionList = result.data.map((item) =>({\r\n          id:item.RegionID,\r\n          name:item.Region\r\n        }));\r\n        setRegions(regionList);\r\n      }\r\n      const title = (\r\n        <div>\r\n          <Space>\r\n\r\n          \r\n          <Button\r\n            type=\"primary\"\r\n          onClick={() => {\r\n              setShowForm(true);\r\n              form1.setFieldsValue({\r\n                firstName: customerInfo.firstName,\r\n              lastName: customerInfo.lastName,\r\n              email: customerInfo.email,\r\n              phone: customerInfo.phone,\r\n              billing: customerInfo.billing,\r\n             city: customerInfo.city,\r\n              postal: customerInfo.postal,\r\n              region: customerInfo.region\r\n             });\r\n            }}\r\n          >\r\n            Modify\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              handleDeleteCustomer(customerInfo.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n          </Space>\r\n        </div>\r\n      )\r\n      const handleUpdate = async () => {\r\n        const validResult = await form1.validateFields();\r\n        if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n        const value = form1.getFieldsValue();\r\n        console.log(value);\r\n        //const { firstName, lastName, email, phone, billing, city, postal, region } = value;\r\n        const id = customerInfo.id;\r\n        console.log(\"id\", id);\r\n        //update data in the backend\r\n        const result = await updateCustomer(id, value.firstName, value.lastName, value.email, value.phone, value.billing, value.city, value.postal, value.region);\r\n        setShowForm(false);\r\n        console.log(result);\r\n        if (result.status === 200) {\r\n          message.success(\"Successfully updated customer information\");\r\n        }\r\n      };\r\n      const handleDeleteCustomer = async (id) => {\r\n        confirm({\r\n          title: \"Are you sure you want to delete this customer?\",\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: \"\",\r\n          okText: \"Yes\",\r\n          okType: \"danger\",\r\n          cancelText: \"No\",\r\n          onOk() {\r\n            return new Promise((resolve, reject) => {\r\n              const result = deleteCustomer(id);\r\n              console.log(result);\r\n              message.success(\"Customer has been successfully deleted\");\r\n              resolve();\r\n              \r\n            });\r\n          },\r\n          onCancel() {\r\n            console.log(\"Cancel\");\r\n          },\r\n        });\r\n        \r\n      }\r\n      const handleNewAddress = async () =>{\r\n        const validResult = await formAddress.validateFields();\r\n        if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n        const value = formAddress.getFieldsValue();\r\n        const info = {\r\n          BillingAddress: value.address,\r\n          PostalCode: value.postalCode,\r\n          City: value.city,\r\n          Prov: value.prov,\r\n          Region: value.region\r\n        }\r\n        let id = customerInfo.id;\r\n        var result = await addAddress(id, info);\r\n        console.log(result);\r\n        if (result.status == 200){\r\n          message.success(\"added new address\");\r\n        }\r\n        setShowAddress(false);\r\n\r\n      }\r\n    const columns =[\r\n      {\r\n        title:\"Address\",\r\n        dataIndex:\"address\",\r\n        key:\"\"\r\n      },\r\n      {\r\n        title:\"Postal Code\",\r\n        dataIndex:\"postalcode\",\r\n        key:\"\"\r\n      },\r\n      {\r\n        title:\"City\",\r\n        dataIndex:\"city\",\r\n        key:\"\"\r\n      },\r\n      {\r\n        title:\"Province\",\r\n        dataIndex:\"prov\",\r\n        key:\"\"\r\n      },\r\n      {\r\n        title:\"Region\",\r\n        dataIndex:\"region\",\r\n        key:\"\"\r\n      },\r\n      {\r\n        title:\"Show Address Info\",\r\n        key:\"OpenAddress\",\r\n      render: (data) => ( \r\n      <div className=\"operate-button\">\r\n          <Button\r\n          type=\"link\"\r\n          href={`/addressinfo/${data.id}`}\r\n            >\r\n           Show Address Details\r\n          </Button>\r\n         </div>)\r\n      }   \r\n    ]\r\n      return(\r\n        <div>\r\n          <Card\r\n          title = {title}\r\n          >\r\n        <Card title=\"Customer Information\">\r\n            <p>First Name: {customerInfo.firstName}</p>\r\n            <p>Last Name: {customerInfo.lastName}</p>\r\n            <p>Email: {customerInfo.email}</p>\r\n            <p>Phone: {customerInfo.phone}</p>\r\n            <br />      \r\n        </Card>\r\n        <Card title=\"Billing Address\">\r\n          <p>Billing Address: {customerInfo.billing}</p>\r\n            <p>City: {customerInfo.city}</p>\r\n            <p>Postal Code: {customerInfo.postal}</p>\r\n        </Card>\r\n            \r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        bordered\r\n        dataSource={addressList}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n\r\n          </Table>\r\n          <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setShowAddress(true);\r\n            formAddress.resetFields();\r\n          }}\r\n          >New Address</Button>\r\n\r\n          <Modal\r\n          visible={showForm}\r\n          title=\"Update Customer\"\r\n          onOk={handleUpdate}\r\n          onCancel={() => setShowForm(false)}\r\n        >\r\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                \r\n              ]}\r\n              \r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Billing Address\"\r\n              name=\"billing\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"City\"\r\n              name=\"city\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"Postal Code\"\r\n              name=\"postal\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n              </Item>\r\n              <Item\r\n              label=\"Region\"\r\n              name=\"region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={showAddress}\r\n          title=\"New Address\"\r\n          onOk={handleNewAddress}\r\n          onCancel={() => setShowAddress(false)}\r\n          >\r\n          <Form\r\n              form={formAddress}\r\n              labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n              >\r\n              <Item \r\n              label=\"Address\"\r\n              name=\"address\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Postal Code\"\r\n              name=\"postalCode\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"City\"\r\n              name=\"city\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Province\"\r\n              name=\"prov\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n              >\r\n                <Input />\r\n              </Item>\r\n              <Item \r\n              label=\"Region\"\r\n              name=\"region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n              </Item>\r\n\r\n          </Form>\r\n        </Modal>\r\n        </Card>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    export default withRouter(CustomerInfo)","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\roles\\index.js",["294","295","296","297"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Tree } from \"antd\";\r\nimport { addRole, getRoles } from \"../../api/index\";\r\nimport { manuList } from \"../../config/leftnav\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Item } = Form;\r\n\r\nexport default function Roles() {\r\n  //control the adding form status\r\n  const [addingShow, setaddingShow] = useState(false);\r\n  //control the modify tree component status\r\n  const [modifyShow, setmodifyShow] = useState(false);\r\n  const [form] = Form.useForm();\r\n  //handle the selected row\r\n  const [row, setRow] = useState({});\r\n  //handle the menu of the selected row\r\n  const [selectedRowMenu, setselectedRowMenu] = useState([]);\r\n  //the added role name\r\n  const columns = [\r\n    {\r\n      title: \"Role Name\",\r\n      dataIndex: \"rolename\",\r\n      key: \"rolename\",\r\n    },\r\n    {\r\n      title: \"Creat Time\",\r\n      dataIndex: \"createtime\",\r\n      key: \"createtime\",\r\n    },\r\n    {\r\n      title: \"Authorized Time\",\r\n      dataIndex: \"authorizedtime\",\r\n      key: \"authorizedtime\",\r\n    },\r\n    {\r\n      title: \"Authorizor\",\r\n      dataIndex: \"authorizor\",\r\n      key: \"authorizor\",\r\n    },\r\n  ];\r\n\r\n  //getting tree nodes\r\n  const getTreeNodes = (array) => {\r\n    return array.map((item, index) => {\r\n      return {\r\n        title: item.content,\r\n        key: item.key,\r\n        children: item.children ? getTreeNodes(item.children) : \"\",\r\n      };\r\n    });\r\n  };\r\n  //the data format of tree component\r\n  const treeDatas = [\r\n    {\r\n      title: \"Authority\",\r\n      key: \"All\",\r\n      children: getTreeNodes(manuList),\r\n    },\r\n  ];\r\n\r\n  //handle tree component(settings for role)\r\n  const handleTree = () => {};\r\n  //handle onrow callback function in table settings\r\n  const handleonRow = (record, index) => {\r\n    return {\r\n      onClick: () => {\r\n        setRow(record);\r\n        console.log(row.rolename);\r\n      },\r\n    };\r\n  };\r\n  //handle adding a new role\r\n  const handleAdding = async () => {\r\n    const validResult = await form.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const rolename = form.getFieldValue(\"rolename\");\r\n    const result = await addRole(rolename);\r\n    if (result.data.status === 1) {\r\n      message.success(\"success!\");\r\n      setaddingShow(false);\r\n    } else {\r\n      message.warn(result.data.err);\r\n      setaddingShow(false);\r\n    }\r\n    setaddingShow(false);\r\n  };\r\n\r\n  //handle all form status being cancel\r\n  const handleCancle = () => {\r\n    setaddingShow(false);\r\n    setmodifyShow(false);\r\n  };\r\n\r\n  //the title of card component\r\n  const title = (\r\n    <>\r\n      <Button\r\n        style={{ marginRight: 20 }}\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setaddingShow(true);\r\n        }}\r\n      >\r\n        Create A Role\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          console.log(\"click\");\r\n          setmodifyShow(true);\r\n        }}\r\n        disabled={!row.id}\r\n      >\r\n        Set Roles\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Card title={title} bordered>\r\n      <Table\r\n        rowKey=\"id\"\r\n        columns={columns}\r\n        rowSelection={{\r\n          type: \"radio\",\r\n          selectedRowKeys: [row.id],\r\n          onChange: (rowkeys, rows) => {\r\n            setRow(rows[0]);\r\n          },\r\n        }}\r\n        onRow={handleonRow}\r\n        dataSource={datas.role}\r\n      ></Table>\r\n      <Modal\r\n        visible={addingShow}\r\n        onOk={handleAdding}\r\n        onCancel={handleCancle}\r\n        title=\"Adding a role\"\r\n      >\r\n        <Form form={form}>\r\n          <Item\r\n            name=\"rolename\"\r\n            label=\"role_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Input..\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={modifyShow}\r\n        title=\"set roles\"\r\n        onOk={handleTree}\r\n        onCancel={handleCancle}\r\n      >\r\n        <Form>\r\n          <Item label=\"Role:\" wrapperCol={{ span: 18 }}>\r\n            <Input disabled value={row.rolename} />\r\n          </Item>\r\n        </Form>\r\n        <Tree checkable treeData={treeDatas} defaultExpandAll={true}></Tree>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\newestimate\\index.js",["298","299","300","301","302","303","304","305"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\addressInfo\\index.js",["306","307","308","309","310","311","312","313","314","315"],"import React, {useEffect, setState, useState} from 'react';\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport {getQuotes, getAddress, getRegion} from '../../api/addresses';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function AddressInfo() {\r\n \r\n  let match = useRouteMatch('/addressinfo/:address').params.address;\r\n  const [addressInfo, setaddressinfo] = useState([]);\r\n  const [regionName, setRegionName] = useState([]);\r\n  const [quoteList, setQuoteList] = useState([]);\r\n  const currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\n    useEffect(() => {\r\n        const func = async () => {\r\n          var result = await getAddress(match);\r\n          var addressInfo = result.data.map((item) =>({\r\n            id: item.AddressID,\r\n            address: item.Address,\r\n            city: item.City,\r\n            postal: item.PostalCode,\r\n            region: item.Region\r\n          }));\r\n          setaddressinfo(addressInfo[0]);\r\n        };\r\n        func();\r\n        getQuoteList();\r\n        getRegionName();\r\n      }, [addressInfo.length]);\r\n\r\n    const getRegionName = async () => {\r\n      var result = await getRegion(addressInfo.region);\r\n      var name = result.data.map((item) =>({\r\n        name: item.Region\r\n      }))\r\n      setRegionName(name[0]);\r\n    }\r\n    const getQuoteList = async () => {\r\n        var result = await getQuotes(match);\r\n        var quotes = result.data.map((item) =>({\r\n          id: item.QuoteID,\r\n          user: item.UserID,\r\n          info: item.QuoteInfo,\r\n          date: item.creationDate,\r\n          startdate: item.startDate,\r\n          enddate: item.endDate\r\n        }));\r\n        setQuoteList(quotes);\r\n        console.log(quotes);\r\n      };\r\n    const columns =[\r\n      {\r\n        title:\"Creation Date\",\r\n        dataIndex:\"date\",\r\n        key:\"date\"\r\n      },\r\n      {\r\n        title:\"Salesman\",\r\n        dataIndex:\"user\",\r\n        key:\"user\"\r\n      },\r\n      {\r\n        title:\"Info\",\r\n        dataIndex:\"info\",\r\n        key:\"info\"\r\n      },\r\n      {\r\n        title:\"Show Quote Info\",\r\n        key:\"OpenQuote\",\r\n\r\n      }   \r\n\r\n    ]\r\n      return(\r\n        <div>\r\n        <Card title=\"Address Information\">\r\n            \r\n        </Card>\r\n        <h2>Quotes</h2>\r\n        <Table\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        rowKey=\"id\"\r\n        bordered\r\n        dataSource={quoteList}\r\n        columns={columns}\r\n        tableLayout=\"auto\"\r\n        pagination={{ pageSize: 10 }}>\r\n\r\n          </Table>\r\n          </div>\r\n      )\r\n    }","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\users\\index.js",["316","317","318","319"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { addUser, getUsers, updateUser, deleteUser } from \"../../api/index\";\r\nimport { datas } from \"../../api/index\";\r\nconst { Item } = Form;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nexport default function Users() {\r\n  //form ref to control the adding form\r\n  const [form] = Form.useForm();\r\n  //form ref to control the updating form\r\n  const [form1] = Form.useForm();\r\n  //control the status of adding form modal\r\n  const [addShow, setAddShow] = useState(false);\r\n  //control the status of updating form modal\r\n  const [updateShow, setupdateShow] = useState(false);\r\n  //control the status of the deleting form modal\r\n  const [deleteShow, setdeleteShow] = useState(false);\r\n\r\n  const [onSelected, setonSelected] = useState();\r\n  const [, setForce] = useState();\r\n\r\n  const [users, setusers] = useState([]);\r\n\r\n  //the selected to be updated or deleted data\r\n  const [selectedData, setselectedData] = useState({});\r\n  const title = (\r\n    <Button\r\n      onClick={() => {\r\n        form.resetFields();\r\n        setAddShow(true);\r\n      }}\r\n      type=\"primary\"\r\n    >\r\n      New User\r\n    </Button>\r\n  );\r\n\r\n  const options = datas.role.map((item) => (\r\n    <Option key={item.rolename}>{item.rolename}</Option>\r\n  ));\r\n\r\n  //for table coloums\r\n  const columns = [\r\n    {\r\n      title: \"LoginId\",\r\n      dataIndex: \"loginId\",\r\n      key: \"loginId\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      key: \"role\",\r\n    },\r\n    {\r\n      title: \"Operate\",\r\n      key: \"operate\",\r\n      render: (data) => (\r\n        <div className=\"operate-button\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setselectedData(data);\r\n              setupdateShow(true);\r\n              form1.setFieldsValue({\r\n                loginId: data.loginId,\r\n                loginPwd: data.loginPwd,\r\n                loginPwdConfirm: data.loginPwdConfirm,\r\n                email: data.email,\r\n                role: data.role,\r\n              });\r\n            }}\r\n          >\r\n            Modify\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setselectedData(data);\r\n              showDeleteConfirm(data.key);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  //handle adding form\r\n  const handleAdd = async () => {\r\n    const validResult = await form.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const value = form.getFieldsValue();\r\n    const { loginId, loginPwd, email, role } = value;\r\n    const result = await addUser({ loginId, loginPwd, email, role });\r\n    if (result.data && result.data.affectedRows > 0) {\r\n      message.success(\"Success!\");\r\n      setAddShow(false);\r\n      setForce();\r\n    }\r\n  };\r\n  //handle updating form\r\n  const handleUpdate = async () => {\r\n    //validate first\r\n    const validResult = await form1.validateFields();\r\n    if (validResult.errorFields && validResult.errorFields.length > 0) return;\r\n    const value = form1.getFieldsValue();\r\n    const { loginId, loginPwd, email, role } = value;\r\n    const id = selectedData.key;\r\n    console.log(\"id\", id);\r\n    //update data in the backend\r\n    const result = await updateUser(id, loginId, loginPwd, email, role);\r\n    setupdateShow(false);\r\n    console.log(result);\r\n    if (result.data.status === 1) {\r\n      message.success(\"success!\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAddShow(false);\r\n    setupdateShow(false);\r\n  };\r\n  //handle delete user function\r\n  const showDeleteConfirm = (id) => {\r\n    confirm({\r\n      title: \"Are you sure delete this user?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          const result = deleteUser(id);\r\n          if (result === 1) message.success(\"success!\");\r\n          resolve();\r\n        });\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      var result = await getUsers();\r\n      var tables = result.data.map((item) => ({\r\n        id: item.UserId,\r\n        loginId: item.FirstName,\r\n        loginPwd: item.Password,\r\n        email: item.Email,\r\n        role: item.SecurityLevel,\r\n      }));\r\n      setusers(tables);\r\n    };\r\n    func();\r\n  }, [users.length]);\r\n  return (\r\n    <div className=\"settings-user\">\r\n      <Card title={title} bordered>\r\n        <Table\r\n          style={{ width: \"80%\", margin: \"0 auto\" }}\r\n          rowKey=\"id\"\r\n          bordered\r\n          dataSource={users}\r\n          columns={columns}\r\n          tableLayout=\"auto\"\r\n          pagination={{ pageSize: 3 }}\r\n        ></Table>\r\n        <Modal\r\n          visible={addShow}\r\n          title=\"Create A New User\"\r\n          onOk={handleAdd}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"LoginId\"\r\n              name=\"loginId\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"loginPwd\"\r\n              name=\"loginPwd\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"ConfirmPwd\"\r\n              name=\"loginPwdConfirm\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"the two passwords that you entered do not match\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n\r\n            <Item\r\n              label=\"role\"\r\n              name=\"role\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={updateShow}\r\n          title=\"Update\"\r\n          onOk={handleUpdate}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form form={form1} labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\r\n            <Item\r\n              label=\"LoginId\"\r\n              name=\"loginId\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n            <Item\r\n              label=\"loginPwd\"\r\n              name=\"loginPwd\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"ConfirmPwd\"\r\n              name=\"loginPwdConfirm\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"loginPwd\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"the two password that you entered do not match\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Item>\r\n            <Item\r\n              label=\"email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Item>\r\n\r\n            <Item\r\n              label=\"role\"\r\n              name=\"role\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select>{options}</Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\invoices\\index.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\customers\\index.js",["320","321","322","323","324","325","326","327","328","329"],"import React, { useState, useEffect, Link } from \"react\";\r\nimport { Card, Table, Button, Modal, Form, Input, message, Select } from \"antd\";\r\nimport { getCustomers, getAddresses } from \"../../api/customer\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Customers(props) {\r\n  const [customers, setcustomers] = useState([]);\r\n  const [addressList, setaddresses] = useState([]);\r\n  const [form1] = Form.useForm();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"First Name\",\r\n      dataIndex: \"firstName\",\r\n      key: \"FirstName\",\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      dataIndex: \"lastName\",\r\n      key: \"LastName\",\r\n    },\r\n    {\r\n      title: \"Customer Billing Address\",\r\n      dataIndex: \"billing\",\r\n      key: \"BillingAddress\",\r\n    },\r\n    {\r\n      title: \"See Customer Page\",\r\n      key: \"OpenCustomer\",\r\n      render: (data) => (\r\n        <div className=\"operate-button\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              props.history.push(`/customerinfo/${data.id}`);\r\n            }}\r\n          >\r\n            Show Customer\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      var result = await getCustomers();\r\n      var tables = result.data.map((item) => ({\r\n        id: item.CustomerID,\r\n        firstName: item.FirstName,\r\n        lastName: item.LastName,\r\n        billing: item.BillingAddress,\r\n      }));\r\n      setcustomers(tables);\r\n    };\r\n    func();\r\n  }, [customers.length]);\r\n\r\n  return (\r\n    <Table\r\n      style={{ width: \"80%\", margin: \"0 auto\" }}\r\n      rowKey=\"id\"\r\n      bordered\r\n      dataSource={customers}\r\n      columns={columns}\r\n      tableLayout=\"auto\"\r\n      pagination={{ pageSize: 10 }}\r\n    ></Table>\r\n  );\r\n}\r\nexport default withRouter(Customers);\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\neworder.js",["330"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\addresses.js",["331"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"\";\r\n\r\n\r\nexport async function getAddress(id) {\r\n    var tableName = \"Address\";\r\n    var condition = `AddressID = '${id}'`\r\n    const address = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName, condition},\r\n      \"post\"\r\n    );\r\n    console.log(\"address\", address);\r\n    if (address !== []) return address;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  export async function getQuotes(id) {\r\n    var tableName = \"quotes\";\r\n    var condition = `AddressID = '${id}'`\r\n    const quotelist = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName, condition},\r\n      \"post\"\r\n    );\r\n    console.log(\"quotes \", quotelist);\r\n    if (quotelist !== []) return quotelist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getCustomer(id){\r\n    var tableName = \"customers\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const customer = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n      if(customer !== []) return customer;\r\n      else return 0;\r\n\r\n    }\r\n  \r\n  export async function getRegion(id){\r\n    var tableName = \"region\";\r\n    var condition = `RegionID = '${id}'`\r\n    const region = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\calendar.js",["332"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"\";\r\n\r\n\r\nexport async function getEstimates() {\r\n    var tableName = \"estimates\";\r\n    const estimatelist = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    if (estimatelist !== []) return estimatelist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\nexport async function deleteEstimate(id) {\r\n    var tableName = \"estimates\";\r\n    var condition = `EstimateID='${id}'`;\r\n    const result = await ajax(\"/deleteValues\", { tableName, condition }, \"post\");\r\n    console.log(\"result\", result);\r\n    if (result !== []) return result;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getUsers() {\r\n    var tableName = \"users\";\r\n    var condition = \"SecurityLevel = 'salesman'\"\r\n    const userlist = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName, condition},\r\n      \"post\"\r\n    );\r\n    if (userlist !== []) return userlist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  export async function updateEstimate(id, values) {\r\n    console.log(id, values.startDate, values.endDate);\r\n    var tableName = \"estimates\";\r\n    var columnsAndValues = `startDate='${values.startDate}',endDate='${values.endDate}'`;\r\n    var condition = `EstimateID='${id}'`;\r\n    const result = await ajax(\r\n      \"/updateValues\",\r\n      { tableName, columnsAndValues, condition },\r\n      \"post\"\r\n    );\r\n    console.log(\"result\", result);\r\n    if (result !== []) return result;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getRegion(id){\r\n    var tableName = \"region\";\r\n    var condition = `RegionID = '${id}'`\r\n    const region = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }\r\n  export async function getRegionAPI(){\r\n    var tableName = \"region\";\r\n    const region = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\customer.js",["333"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"\";\r\n\r\n\r\nexport async function getCustomers() {\r\n    console.log(\"here\");\r\n    var tableName = \"Customers\";\r\n    const customerlist = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    console.log(\"customerlist\", customerlist);\r\n    if (customerlist !== []) return customerlist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  export async function getAddresses() {\r\n    console.log(\"here\");\r\n    var tableName = \"Addresses\";\r\n    const addresslist = await ajax(\r\n      \"/fetchValues\",\r\n      { tableName},\r\n      \"post\"\r\n    );\r\n    console.log(\"addresslist\", addresslist);\r\n    if (addresslist !== []) return addresslist;\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  export async function getCustomer(id){\r\n    var tableName = \"customers\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const customer = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n      if(customer !== []) return customer;\r\n      else return 0;\r\n\r\n    }\r\n  export async function getCustomerAddresses(id){\r\n    var tableName = \"address\";\r\n    var condition = `CustomerID = '${id}'`\r\n    const addressList = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(addressList !== []) return addressList;\r\n    else return 0;\r\n  }\r\n  export async function getRegion(id){\r\n    var tableName = \"region\";\r\n    var condition = `RegionID = '${id}'`\r\n    const region = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName, condition},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }\r\n  export async function getRegionAPI(){\r\n    var tableName = \"region\";\r\n    const region = await ajax(\r\n      \"/fetchValues\",\r\n      {tableName},\r\n      \"post\"\r\n    );\r\n    if(region !== []) return region;\r\n    else return 0;\r\n  }\r\n\r\n  export async function updateCustomer(id, firstName, lastName, email, phone, billing, city, postal, region){\r\n    var tableName = \"customers\";\r\n    var columnsAndValues = `FirstName='${firstName}',LastName='${lastName}',Phone='${phone}',Email='${email}', BillingAddress='${billing}',City='${city}',PostalCode='${postal}',Region='${region}'`;\r\n  var condition = `CustomerID=${id}`;\r\n  const result = await ajax(\r\n    \"/updateValues\",\r\n    { tableName, columnsAndValues, condition },\r\n    \"post\"\r\n  );\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function deleteCustomer(id) {\r\n  var tableName = \"customers\";\r\n  var columns = \"*\";\r\n  var condition = `CustomerID='${id}'`;\r\n  const result = await ajax(\"/deleteValues\", { tableName, columns, condition }, \"post\");\r\n  console.log(\"result\", result);\r\n  if (result !== []) return result;\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function addAddress(id, value){\r\n  var tableName = \"address\";\r\n  var values = `${null},'${id}','${value.BillingAddress}','${value.PostalCode}','${value.City}','${value.Prov}','${value.Region}'`;\r\n\r\n  var address = await ajax(\"/insertValues\", { tableName, values }, \"post\");\r\n  console.log(\"address\", address);\r\n  if (address !== []) return address;\r\n  else {\r\n    return 0;\r\n  }\r\n}","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\home\\Template.js",["334","335"],"import React, { Component } from 'react';\r\nimport Tabs from \"../../Components/HomeTemplate/Tabs\"; \r\nimport SalesCalendar from '../../Components/HomeTemplate/SalesCalendar/SalesCalendar';\r\nimport FoamCalendar from '../../Components/HomeTemplate/FoamCalendar/FoamCalendar';\r\nimport FillCalendar from '../../Components/HomeTemplate/FillCalendar/FillCalendar';\r\nimport './Template.css';\r\n\r\nclass Template extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n      \r\n    render() {\r\n        \r\n        return(\r\n      <div>\r\n       <Tabs> \r\n         <div label=\"Sales\"> \r\n           <SalesCalendar />\r\n         </div> \r\n         <div label=\"Foam\"> \r\n           <FoamCalendar />\r\n         </div> \r\n         <div label=\"Fill\"> \r\n         <FillCalendar />\r\n         </div> \r\n       </Tabs> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Template;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuoteOne.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374"],"import React, {useState, useEffect} from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Button from \"../../component/quotes/Button\";\r\nimport {useInput} from '../../hooks/input-hook';\r\nimport { useParams } from \"react-router\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport CustomSelect from \"../../component/quotes/CustomSelect\";\r\nimport qData from './quoteData.js';\r\nimport {getCustomers} from '../../api/customer';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction QuoteOne(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    let { qid } = useParams();\r\n\r\n    let { path, url } = useRouteMatch();\r\n    let history = useHistory();\r\n\r\n    const {value, bind, reset} = useInput('');\r\n    \r\n    const data = useSelector( state => state.quoteOneReducer.quote_one);\r\n    \r\n    let  quotes = qData.quote_data;\r\n    let selectedQuote  = (parseInt(qid)) ? quotes.find((d) => { return parseInt(d.id) == parseInt(qid) }): {};\r\n    \r\n    \r\n    if(Object.keys(selectedQuote).length == 0){\r\n        history.push(`/quotes`);\r\n    }\r\n    \r\n    const [quoteData, setQuoteData] = useState({});\r\n    const [customers, setCustomers] = useState([]);\r\n    \r\n    // const customers = qData.customer_data;\r\n    \r\n    useEffect(async () => {\r\n        let result = await getCustomers();\r\n            let cust = result.data.map((c) => (\r\n                    {\r\n                    id : c.CustomerID,\r\n                    name : c.FirstName + \" \" + c.LastName,\r\n                    first_name : c.FirstName,\r\n                    last_name : c.LastName,\r\n                    phone : c.Phone,\r\n                    email : c.Email,\r\n                    address : c.BillingAddress,\r\n                    city : c.City,\r\n                    postCode : c.PostalCode,\r\n                    region : c.Region,\r\n                }\r\n            ));\r\n            setCustomers(cust);\r\n            setLoading(false);    \r\n        },[selectedQuote]);\r\n\r\n    const dispatch = useDispatch();\r\n    const {value: firstName, bind: bindFirstName, reset: resetFirstName,assignValue: assignFirstName} = useInput();\r\n    const {value: lastName, bind: bindLastName, reset: resetLastName,assignValue: assignLastName} = useInput();\r\n    const {value: billingAddress, bind: bindBillingAddress, reset: resetBillingAddress, assignValue: assignBillingAddress} = useInput();\r\n    const {value: city, bind: bindCity, reset: resetCity, assignValue: assignCity} = useInput();\r\n    const {value: postCode, bind: bindPostCode, reset: resetPostCode,assignValue: assignPostCode} = useInput();\r\n    const {value: phoneNumber, bind: bindPhoneNumber, reset: resetPhoneNumber, assignValue: assignPhoneNumber} = useInput();\r\n    const {value: email, bind: bindEmail, reset: resetEmail, assignValue: assignEmail} = useInput();\r\n    const {value: customerNotes, bind: bindCustomerNotes, reset: resetCustomerNotes, assignValue: assignCustomerNotes} = useInput();\r\n    const {value: installerNotes, bind: bindInstallerNotes, reset: resetInstallerNotes, assignValue: assignInstallerNotes} = useInput();\r\n    const {value: salesman, bind: bindSalesman, reset: resetSalesman, assignValue: assignSalesman} = useInput();\r\n    const {value: wsib, bind: bindWsib, reset: resetWsib} = useInput(quoteData.wsib);\r\n    const {value: account, bind: bindAccount, reset: resetAccount} = useInput(quoteData.account);\r\n    const {value: firm, bind: bindFirm, reset: resetFirm} = useInput(quoteData.firm);\r\n    const {value: details, bind: bindDetails, reset: resetDetails} = useInput(quoteData.details);\r\n\r\n    const [productCounter, setProductCounter] = useState(1)\r\n    const [products, setProducts] = useState([{\r\n        isProduct: false,\r\n        detail: \"\",\r\n        name: null,\r\n        option: null,\r\n        price: 0.00,\r\n        detail: \"\"\r\n    },{\r\n        isProduct: true,\r\n        detail: \"\",\r\n        name: null,\r\n        option: null,\r\n        price: 0.00,\r\n        detail: \"\"\r\n    }])\r\n\r\n    \r\n    \r\n    function onCustomerSelect(e) {\r\n        if ((e == null || e == \"\" || e == undefined)) {\r\n            \r\n        } else {\r\n            let cust = customers.find((c) => { return parseInt(c.id) == parseInt(e) });\r\n            assignFirstName(cust.first_name)\r\n            assignLastName(cust.last_name)\r\n            assignPhoneNumber(cust.phone)\r\n            assignEmail(cust.email)\r\n            assignBillingAddress(cust.address)\r\n            assignCity(cust.city)\r\n            assignPostCode(cust.postCode)\r\n            // id : c.CustomerID,\r\n            // name : c.FirstName + \" \" + c.LastName,\r\n            // first_name : c.FirstName,\r\n            // last_name : c.LastName,\r\n            // phone : c.Phone,\r\n            //  : c.Email,\r\n            // address : c.BillingAddress,\r\n            // city : c.City,\r\n            // postCode : c.PostalCode,\r\n            // region : c.Region,\r\n        }\r\n    }\r\n    const [formSubmit, setFormSubmit] = useState(false)\r\n    \r\n    const handleSubmit = (evt) => {\r\n\r\n        var payload = \r\n        {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            billing_address: billingAddress,\r\n            city: city,\r\n            post_code: postCode,\r\n            phone_number: phoneNumber,\r\n            email: email,\r\n            customer_notes: customerNotes,\r\n            installer_notes: installerNotes,\r\n            salesman: salesman,\r\n            wsib: wsib,\r\n            account: account,\r\n            firm: firm,\r\n            products: products,\r\n            subtotal: subtotal,\r\n            taxper: taxper,\r\n            tax: tax,\r\n            total: total,\r\n            details: details\r\n        }\r\n\r\n        dispatch({\r\n            type: \"quote_one\",\r\n            payload: payload\r\n        })\r\n\r\n        props.onSetQuoteFormDataChange(payload);\r\n        reset();\r\n        evt.preventDefault();\r\n    }\r\n\r\n    const [manualcalc, setManualcalc] = useState(false)\r\n    const [subtotal, setSubtotal] = useState(0)\r\n    const [total, setTotal] = useState(0)\r\n    const [taxper, setTaxper] = useState(13)\r\n    const [tax, setTax] = useState(0)\r\n\r\n    const handleSubmitEvent = (values) => {\r\n        console.log((values))\r\n        values.preventDefault();\r\n    }\r\n\r\n    const handleManualcalc = (e) => {\r\n        if(!manualcalc)\r\n            setManualcalc(true)\r\n        else\r\n            setManualcalc(false)\r\n    }\r\n\r\n    const changeProductName = (i, e) => {\r\n        var temp = products\r\n        temp[i][\"name\"] = e.target.value\r\n        setProducts(temp)\r\n    }\r\n\r\n    const changeProductOption = (i, e) => {\r\n        var temp = products\r\n        temp[i][\"option\"] = e.target.value\r\n        setProducts(temp)\r\n    }\r\n    \r\n    const handleDetailChange = (i, e) => {\r\n        var temp = products\r\n        temp[i][\"detail\"] = e.target.value\r\n        temp[i][\"detail\"].replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\r\n        setProducts(temp)\r\n    }\r\n\r\n    const handlePriceChange = (i, e) => {\r\n\r\n        var temp = products\r\n        temp[i][\"price\"] = e.target.value\r\n        \r\n        setProducts(temp)\r\n        totalCalc();\r\n    }\r\n\r\n    const changeTaxper = (e) => {\r\n        var temp = e.target.value;\r\n        setTaxper(temp)\r\n        totalCalc();\r\n    }\r\n\r\n    const changeTax = (e) => {\r\n        var temp = e.target.value;\r\n        setTax(temp)\r\n    }\r\n\r\n\r\n    const changeSubtotal = (e) => {\r\n        var temp = e.target.value;\r\n        setSubtotal(temp)\r\n    }\r\n    \r\n    const changeTotal = (e) => {\r\n        var temp = e.target.value;\r\n        setTotal(temp)\r\n    }\r\n\r\n    const totalCalc = () => {\r\n        var temp = products\r\n        var calSubtotal = 0.00;\r\n        var calTotal = 0.00;\r\n        temp.forEach((p) => {\r\n            calSubtotal = (calSubtotal + parseFloat(p[\"price\"]));\r\n        })\r\n        setSubtotal(parseFloat(calSubtotal).toFixed(2));\r\n        var taxc = ((calSubtotal * taxper)/100);\r\n        setTax(parseFloat(taxc).toFixed(2))\r\n        console.log(calSubtotal);\r\n        calTotal = (parseFloat(calSubtotal) + parseFloat(taxc));\r\n        console.log(calTotal);\r\n        setTotal(parseFloat(calTotal).toFixed(2))\r\n    }\r\n\r\n    const renderRows = (prod) => {\r\n        let rows = []\r\n\r\n        for (let i = 0; i <= productCounter; i++) {\r\n\r\n            if(products[i][\"isProduct\"]){\r\n                rows.push(\r\n                <tr>\r\n                    <td>\r\n                        <input type=\"text\" name={`product[${productCounter}][name]`}\r\n                            onChange={(e) => {\r\n                                changeProductName(i, e)\r\n                            }}\r\n                            className=\"ant-input\"\r\n                            placeholder=\"Name\"/>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"text\" name={`product[${productCounter}][option]`} placeholder=\"option\"\r\n                            className=\"ant-input\"\r\n                            onChange={(e) => {\r\n                                changeProductOption(i, e)\r\n                            }}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"number\" name={`product[${productCounter}][price]`} placeholder=\"0.00\" \r\n                            defaultValue=\"0.00\"\r\n                            className=\"ant-input\"\r\n                            onChange={(e) => {\r\n                                handlePriceChange(i, e)\r\n                            }}\r\n                        />\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                    <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveRow(i,e)}} >x</Button>\r\n                    </td>\r\n                </tr>);\r\n            }else{\r\n                rows.push(\r\n                <tr>\r\n                    <td colSpan=\"2\">\r\n                        <textarea name={`product[${productCounter}][detail]`} cols=\"30\" rows=\"3\" \r\n                            placeholder=\"Details\"\r\n                            className=\"ant-input\"\r\n                            onChange={(e) => {\r\n                                handleDetailChange(i, e)\r\n                            }}\r\n                        >\r\n                        </textarea>\r\n                    </td>\r\n                    <td></td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                        <Button size=\"sm\" variant=\"danger\"  onClick={(e) => { handleRemoveRow(i,e)}} >x</Button>\r\n                    </td>\r\n                </tr>)\r\n                }\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const handleRemoveRow = (i,e) => {\r\n        e.preventDefault();\r\n        products.splice(i,1);\r\n        setProductCounter(productCounter-1);\r\n    }\r\n\r\n    const handleAddNewRow = (event,value) => {\r\n\r\n        event.preventDefault();\r\n        console.log(productCounter)\r\n        if (productCounter != null) {\r\n            console.log(\"inside if condition\")\r\n            setProductCounter(productCounter + 1)\r\n        } else {\r\n            console.log(\"inside else condition\")\r\n            setProductCounter(0)\r\n        }\r\n\r\n        var tempProducts = products\r\n        tempProducts[tempProducts.length] = {\r\n            isProduct: value,\r\n            detail: \"\",\r\n            name: null,\r\n            detail: \"\",\r\n            option: null,\r\n            price: 0.00\r\n        }\r\n        setProducts(tempProducts)\r\n    }\r\n    if (isLoading) {\r\n        return <div className=\"App\">Loading...</div>;\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"Quote\" style={{width:\"80%\"}}>\r\n                <h2> {quoteData.name}</h2>\r\n                <p>\r\n                    Select Customer:\r\n                    <CustomSelect data={customers} onSelectChange={onCustomerSelect}/>\r\n                    <br/>\r\n                    <br/>\r\n                    Customer:\r\n                    <input type=\"text\" className=\"ant-input ant-col-8\" name=\"first_name\"\r\n                            placeholder=\"First Name\" {...bindFirstName} />\r\n                    <input type=\"text\" className=\"ant-input ant-col-8\" name=\"last_name\"\r\n                            placeholder=\"Last Name\" {...bindLastName} />\r\n                    <br/>\r\n                    Address:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"billing_address\"\r\n                            placeholder=\"Billing Address\" {...bindBillingAddress} />\r\n                    <br/>\r\n                    City:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"city\"\r\n                            placeholder=\"contractor city\" {...bindCity} />\r\n\r\n                    <br/>\r\n                    Postal Code:\r\n\r\n                    <input type=\"text\" className=\"ant-input\"\r\n                            placeholder=\"contractor postal code\" {...bindPostCode} />\r\n                    <br/>\r\n                    Phone:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"phone_number\"\r\n                            placeholder=\"contractor phone number\" {...bindPhoneNumber} />\r\n\r\n                    <br/>\r\n                    Email:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"email\"\r\n                            placeholder=\"contractor email\" {...bindEmail} />\r\n                    <br/>\r\n                    Quotes Details:\r\n                    <input  className=\"ant-input ant-textarea\" name=\"details\"\r\n                            placeholder=\"Quote Details\" {...bindDetails}  />\r\n                    <br/>\r\n                    <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <td>Product Name</td>\r\n                            <td>Option</td>\r\n                            <td style={{textAlign:\"right\", width:\"10%\"}}>Subtotal ($)</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {renderRows(products)}\r\n                        </tbody>\r\n                        <tfoot>\r\n                        <tr>\r\n                            <td colSpan=\"3\">\r\n                                <Button onClick={(e) => { handleAddNewRow(e,true)}} variant=\"primary\" size=\"sm\" >Add Product</Button>\r\n                                <span> </span>\r\n                                <Button onClick={(e) => {handleAddNewRow(e,false)}} variant=\"primary\" size=\"sm\" >Add Detail</Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{ textAlign : \"right\"}}>Sub Total : </td>\r\n                            <td><input  className=\"ant-input ant-textarea\" name=\"details\" type=\"number\" step=\"0.01\" readOnly={!manualcalc}\r\n                            placeholder=\"Quote Total\" value={subtotal} \r\n                            onChange={(e) => {\r\n                            changeSubtotal(e)\r\n                            }}\r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{ textAlign : \"right\"}}>Tax % : </td>\r\n                            <td><input  className=\"ant-input ant-textarea\" name=\"details\" type=\"number\" step=\"0.01\" readOnly={!manualcalc}\r\n                            placeholder=\"Quote Tax %\" value={taxper} \r\n                            onChange={(e) => {\r\n                            changeTaxper(e)\r\n                            }}\r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{ textAlign : \"right\"}}>Tax Calc : </td>\r\n                            <td><input  className=\"ant-input ant-textarea\" name=\"details\" type=\"number\" step=\"0.01\" readOnly={!manualcalc}\r\n                            placeholder=\"Quote Tax $\" value={tax} \r\n                            onChange={(e) => {\r\n                            changeTax(e)\r\n                            }}\r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{ textAlign : \"right\"}}>Total : </td>\r\n                            <td><input  className=\"ant-input ant-textarea\" name=\"details\" type=\"number\" step=\"0.01\" readOnly={!manualcalc}\r\n                            placeholder=\"Quote Total\" value={total} \r\n                            onChange={(e) => {\r\n                            changeTotal(e)\r\n                            }}\r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{ textAlign : \"left\"}}> </td>\r\n                            <td> Override : <input  className=\"ant-checkbox\" name=\"manual\" type=\"checkbox\" defaultChecked={manualcalc} \r\n                            onChange={(e) => { handleManualcalc(e)\r\n                            }}\r\n                            /></td>\r\n                        </tr>\r\n                        </tfoot>\r\n                    </table>\r\n\r\n                    Notes to customer:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"customer_notes\"\r\n                            placeholder=\"Notes to Customer\" {...bindCustomerNotes} />\r\n\r\n                    <br/>\r\n\r\n                    Notes to installers:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"installer_notes\"\r\n                            placeholder=\"Notes to installers\" {...bindInstallerNotes} />\r\n\r\n                    <br/>\r\n                    Estimator:\r\n                    <input type=\"text\" className=\"ant-input\" name=\"salesman\"\r\n                            placeholder=\"salesman Name\" {...bindSalesman} />\r\n\r\n                    <br/>\r\n                    WSIB: #\r\n                    <input type=\"text\" className=\"ant-input\" name=\"wsib\" placeholder=\"wsib\" {...bindWsib} />\r\n\r\n                    <br/> <br/>\r\n                    Account:  #{account}\r\n                    <br/>\r\n                    Firm: #{firm}\r\n                    <br/>\r\n                    <br/>\r\n                    <Button size=\"md\" variant=\"primary\" type=\"submit\" class=\"ant-btn ant-btn-primary\">Submit</Button>\r\n                </p>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default QuoteOne;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\QuotePrint.js",["375","376","377","378","379","380","381","382","383","384","385","386"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"../../component/quotes/Button\";\r\nimport { useInput } from \"../../hooks/input-hook\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomSelect from \"../../component/quotes/CustomSelect\";\r\nimport { useParams } from \"react-router\";\r\nimport qData from \"./quoteData.js\";\r\nimport Headerforquoto from \"../headforquote\";\r\nimport Footerforquoto from \"../footer\";\r\nimport { sendQuote } from \"../../api/quotes\";\r\nimport { message } from \"antd\";\r\n\r\n\r\nfunction printQuote() {\r\n  var content = document.getElementById(\"printContents\");\r\n  var pri = document.getElementById(\"ifmcontentstoprint\").contentWindow;\r\n  pri.document.open();\r\n  pri.document.write(content.innerHTML);\r\n  pri.document.close();\r\n  pri.focus();\r\n  pri.print();\r\n}\r\n\r\nfunction emailQuote(customer){\r\n  var content = document.getElementById(\"printContents\");\r\n  var email = sendQuote(customer, content.innerHTML);\r\n  message.success(\"Email sent\");\r\n}\r\n\r\nfunction QuotePrint(props) {\r\n  let { qid } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  let quotes = qData.quote_data;\r\n  let selectedQuote = parseInt(qid)\r\n    ? quotes.find((d) => {\r\n        return parseInt(d.id) == parseInt(qid);\r\n      })\r\n    : {};\r\n\r\n  if (Object.keys(selectedQuote).length == 0) {\r\n    history.push(`/quotes`);\r\n  }\r\n\r\n  const [quoteData, setQuoteData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setQuoteData(selectedQuote);\r\n  }, [selectedQuote]);\r\n\r\n  const [quoteFormData, setQuoteFormData] = useState(props.quoteFormData);\r\n\r\n  console.log(quoteFormData);\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"printContents\"\r\n        className=\"Quote print-page\"\r\n        style={{ width: \"80%\", margin: \"auto\" }}\r\n      >\r\n        <Headerforquoto />\r\n        <p>\r\n          <strong>Attention TO:</strong> {quoteFormData.first_name}{\" \"}\r\n          {quoteFormData.last_name}\r\n          <br /> Address: {quoteFormData.billing_address}\r\n          <br /> City: {quoteFormData.city}\r\n          <br /> Postal Code: {quoteFormData.post_code}\r\n          <br /> Phone: {quoteFormData.phone_number}\r\n          <br /> Email: {quoteFormData.email}\r\n          <br />\r\n        </p>\r\n        <p>{quoteFormData.details}</p>\r\n        <p>\r\n          {quoteFormData.products.length > 0 && (\r\n            <table width=\"100%\" border=\"1\" cellPadding=\"10px\">\r\n              <thead>\r\n                <tr>\r\n                  <td>Product Info</td>\r\n                  <td width=\"10%\">Subtotal ($)</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {quoteFormData.products.map((product) => {\r\n                  if (product[\"isProduct\"])\r\n                    return (\r\n                      <tr>\r\n                        <td>\r\n                          {product[\"name\"]} <br></br>\r\n                          {product[\"option\"]}\r\n                          <br></br>\r\n                        </td>\r\n                        <td style={{ textAlign: \"right\" }}>\r\n                          {product[\"price\"]}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  else\r\n                    return (\r\n                      <tr>\r\n                        <td colSpan=\"2\">{product[\"detail\"]}</td>\r\n                      </tr>\r\n                    );\r\n                })}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr style={{ borderTop: \"2px solid black\" }}>\r\n                  <td style={{ textAlign: \"right\" }}>Subtotal ($)</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {quoteFormData.subtotal}{\" \"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ textAlign: \"right\" }}>Tax %</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {quoteFormData.taxper}{\" \"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ textAlign: \"right\" }}>Tax $</td>\r\n                  <td style={{ textAlign: \"right\" }}>{quoteFormData.tax}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ textAlign: \"right\" }}>Total ($)</td>\r\n                  <td style={{ textAlign: \"right\" }}>{quoteFormData.total}</td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          )}\r\n        </p>\r\n        <p>Notes to customer: {quoteFormData.customer_notes}</p>\r\n        <p>Notes to installers: {quoteFormData.installer_notes}</p>\r\n        <p>Estimator: {quoteFormData.salesman}</p>\r\n        <p>\r\n          WSIB# {quoteFormData.wsib} &nbsp; Account: {quoteFormData.account}{\" \"}\r\n          &nbsp; Firm # {quoteFormData.firm}\r\n        </p>\r\n              <Footerforquoto />\r\n      </div>\r\n      <button onClick={printQuote}> Print this Quote</button>\r\n      <button onClick={() => emailQuote(quoteFormData.email)}> Send as Email</button> \r\n      <iframe\r\n        id=\"ifmcontentstoprint\"\r\n        style={{ height: \"0px\", width: \"0px\", position: \"absolute\" }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuotePrint;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\FormOne.js",["387","388","389","390","391","392","393","394","395","396"],"import React, { useState, useEffect } from \"react\";\r\nimport CustomSelect from \"../../component/quotes/CustomSelect.js\";\r\nimport ToggleSwitch from \"../../component/quotes/ToggleSwitch.js\";\r\nimport Button from \"../../component/quotes/Button.js\";\r\nimport Modal from \"../../component/quotes/Modal.js\";\r\nimport QuoteOne from \"./QuoteOne.js\";\r\nimport axios from \"axios\";\r\nimport qData from \"./quoteData.js\";\r\n\r\nconst data = qData.quote_data;\r\n\r\nfunction FormOne(props) {\r\n  const [quoteDataId, setQuoteDataId] = useState(props.quoteDataId);\r\n  // const [quoteData, setQuoteData] = useState(\r\n  //     [...data].find((d) => d.id == quoteDataId)\r\n  // );\r\n\r\n  function onSelectChange(e) {\r\n    if (!(e == null || e == \"\" || e == undefined)) {\r\n      props.onSetQuoteDataChange(data.find((d) => d.id == e));\r\n    } else {\r\n      props.onSetQuoteDataChange({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Form\">\r\n      <h2>Quote Selection</h2>\r\n      <form>\r\n        <div>\r\n          <label> Select Quote Type</label>\r\n          <CustomSelect\r\n            data={data}\r\n            quoteDataId={quoteDataId}\r\n            onSelectChange={onSelectChange}\r\n          />\r\n        </div>\r\n      </form>\r\n      {/* { Object.keys(quoteData).length > 0 ? <QuoteOne key={quoteData} quoteData={quoteData} />: null } */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormOne;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\quotes\\quoteData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Button.js",["397"],"// ./components/Button.js\r\nimport React, { useState } from \"react\";\r\nfunction Button(props) {\r\n  // const [size] = useState(props.size);\r\n  // const [variant] = useState(props.variant);\r\n  return (\r\n    <button class={`ant-btn ant-btn-${props.variant} ant-btn-${props.size}`} onClick={props.onClick}>{props.children}</button>\r\n  );\r\n}\r\nexport default Button;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\CustomSelect.js",["398","399"],"import React, { useState } from \"react\";\r\n\r\nfunction CustomSelect(props) {\r\n\tconst [data] = useState(props.data);\r\n\tconst [quoteDataId, setQuoteDataId] = useState(props.quoteDataId);\r\n\r\n\tfunction onChange(event) {\r\n\t\t// setQuoteDataId(event.target.value);\r\n\t\tif (props.onSelectChange) {\r\n\t\t\tprops.onSelectChange(event.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\tlet options = data.map((d) => (\r\n\t\t<option key={d.id} value={d.id} data={d} >\r\n\t\t\t{d.name}\r\n\t\t</option>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<select\r\n\t\t\tname=\"customSearch\"\r\n\t\t\tclassName=\"custom-search-select\"\r\n\t\t\tonChange={onChange}\r\n\t\t\tplaceholder=\"Select Item\"\r\n\t\t>\r\n\t\t\t<option value=\"\">Select Item</option>\r\n\t\t\t{options}\r\n\t\t</select>\r\n\t);\r\n}\r\nexport default CustomSelect;\r\n","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\Modal.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\component\\quotes\\ToggleSwitch.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesCalendar.js",["400","401","402","403","404","405","406","407","408"],"import React, { setState, useState, useEffect } from \"react\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Switch from 'devextreme-react/switch';\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport SalesTemplate from './SalesTemplate.js'\r\nimport SalesTooltip from './salesTooltip.js';\r\nimport {getEstimates, deleteEstimate, getUsers, updateEstimate, getRegionAPI} from '../../../api/calendar';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { Modal, Button, Space } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\n\r\nconst dataSource = new CustomStore({\r\n  key: \"EstimateID\",\r\n  load: async () => {\r\n    const data = await getEstimates();\r\n    let formatData = data.data.map((item) => ({\r\n      EstimateID : item.EstimateID,\r\n      CustomerID : item.CustomerID,\r\n      AddressID : item.AddressID,\r\n      UserID : item.UserID,\r\n      CreationDate : item.CreationDate,\r\n      text : item.EstimateInfo,\r\n      RegionID : item.RegionID,\r\n      startDate : timeFormat(item.startDate),\r\n      endDate : timeFormat(item.endDate)\r\n    }));\r\n    console.log(formatData);\r\n    return formatData\r\n  },\r\n  update: async (key, values) => {\r\n    let formatData = {\r\n      EstimateID : values.EstimateID,\r\n      CustomerID : values.CustomerID,\r\n      AddressID : values.AddressID,\r\n      UserID : values.UserID,\r\n      CreationDate : values.CreationDate,\r\n      EstimateInfo : values.EstimateInfo,\r\n      RegionID : values.RegionID,\r\n      startDate : timeDeformat(values.startDate),\r\n      endDate : timeDeformat(values.endDate)\r\n  }\r\n    const check = await updateEstimate(key, formatData);\r\n    console.log(check);\r\n    return check;\r\n  },\r\n  remove: async(key) => {\r\n    console.log(`removed ${key}`);\r\n    const data = await deleteEstimate(key);\r\n    return data\r\n  },\r\n  insert: async (key, values) =>{\r\n    console.log(\"attempted insert\");\r\n  }\r\n});\r\n\r\nconst timeFormat = (date) => {\r\n   let newdate = zonedTimeToUtc(new Date(date), 'America/Edmonton');\r\n   var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\n\r\nconst timeDeformat = (date) => {\r\n  let newdate = utcToZonedTime(new Date(date), 'America/Edmonton');\r\n  var formatteddate = format(newdate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n   return formatteddate;\r\n}\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\nconst groups = ['UserID'];\r\n\r\nconst renderResourceCell = (model) => {\r\n  return (\r\n      <b>{model.data.FirstName}</b>\r\n  );\r\n}\r\n\r\nconst onAppointmentDeleting = (e) => {\r\n  console.log(e);\r\n  var cancel = true;\r\n  e.cancel = cancel;\r\n  var r = confirm({title:\"Do you want to delete this appointment?\", onOk(){dataSource.remove(e.appointmentData.EstimateID) }, onCancel(){cancel = true}});\r\n}\r\n\r\nclass SalesCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      groupByDate:false,\r\n      cancel:true,\r\n      userList:\"\",\r\n      regionList:\"\",\r\n      info:false\r\n    };\r\n    \r\n    this.onGroupByDateChanged = this.onGroupByDateChanged.bind(this);\r\n    this.onAppointmentForm = this.onAppointmentForm.bind(this);\r\n    this.salesmanSource = this.salesmanSource.bind(this);\r\n    this.regionSource = this.regionSource.bind(this);\r\n    this.InfoIsHere = this.InfoIsHere.bind(this);\r\n  }\r\n  async InfoIsHere() {\r\n  let regionData = await this.regionSource();\r\n  let userData = await this.salesmanSource();\r\n  this.setState({userList:userData});\r\n  this.setState({regionList:regionData});\r\n  this.setState({info:true});\r\n} \r\n  \r\n  onAppointmentForm(args) {\r\n    args.cancel = true;\r\n  }\r\n  onGroupByDateChanged(args) {\r\n    this.setState({\r\n      groupByDate: args.value\r\n    });\r\n  }\r\n  async regionSource() {\r\n    const data = await getRegionAPI();\r\n    let regionData = data.data.map((item) => ({\r\n      id  : item.RegionID,\r\n      region: item.Region,\r\n      color: item.color\r\n    }))\r\n    console.log(regionData);\r\n    return regionData;\r\n  }\r\n\r\n  async salesmanSource() {\r\n    const data = await getUsers();\r\n    let salesData = data.data.map((item) => ({\r\n      id: item.UserID,\r\n      FirstName : item.FirstName,\r\n      LastName: item.LastName\r\n    }))\r\n    console.log(salesData);\r\n    return salesData;\r\n  }\r\n  componentDidMount(){\r\n    this.InfoIsHere();\r\n}\r\n\r\n \r\n  render() {\r\n    if (this.state.info == false){\r\n        return (\r\n          <p>Loading information...</p>\r\n        )\r\n      }\r\n      else{\r\n\r\n      \r\n    return (\r\n      \r\n      <div>\r\n      <Scheduler\r\n        timeZone=\"America/Edmonton\"\r\n        groups = {groups}\r\n        groupByDate={this.state.groupByDate}\r\n        resourceCellRender={renderResourceCell}\r\n        dataSource={dataSource}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        endDayHour={21}\r\n        appointmentComponent={SalesTemplate}\r\n        //appointmentTooltipComponent={SalesTooltip}\r\n        onAppointmentDeleting={onAppointmentDeleting}\r\n        onAppointmentFormOpening={this.onAppointmentForm}\r\n        >\r\n        <Resource\r\n          dataSource={this.state.userList}\r\n          fieldExpr=\"UserID\"\r\n          >\r\n        </Resource>\r\n        <Resource\r\n          dataSource={this.state.regionList}\r\n          fieldExpr=\"RegionID\"\r\n          useColorAsDefault={true}\r\n        ></Resource>\r\n        </Scheduler>\r\n        <div className=\"options\">\r\n        <div className=\"caption\">Group by Date First</div>\r\n        <div className=\"option\">\r\n          <Switch\r\n            value={ this.state.groupByDate }\r\n            onValueChanged={this.onGroupByDateChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default SalesCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamCalendar.js",["409"],"import React from 'react';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport FoamTemplate from './FoamTemplate.js'\r\n\r\nimport { data, foamData} from './foamData';\r\n\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\n\r\n\r\nclass FoamCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Scheduler\r\n        width\r\n        timeZone=\"America/Los_Angeles\"\r\n        dataSource={data}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        appointmentComponent={FoamTemplate}\r\n        >\r\n        <Resource\r\n          dataSource={foamData}\r\n          fieldExpr=\"id\"\r\n          useColorAsDefault={true}\r\n          >\r\n        </Resource>\r\n        </Scheduler>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FoamCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tabs.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillCalendar.js",["410"],"import React from 'react';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nimport Scheduler, {Resource} from 'devextreme-react/scheduler';\r\nimport FillTemplate from './FillTemplate.js'\r\n\r\nimport { data, loosefillData} from './fillData';\r\n\r\nconst currentDate = new Date();\r\nlet date = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\r\nconst views = ['day','week', 'workWeek','month'];\r\n\r\n\r\nclass FillCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Scheduler\r\n        timeZone=\"America/Los_Angeles\"\r\n        dataSource={data}\r\n        views={views}\r\n        defaultCurrentView=\"workWeek\"\r\n        defaultCurrentDate={date}\r\n        height={800}\r\n        startDayHour={6}\r\n        appointmentComponent={FillTemplate}\r\n        >\r\n        <Resource\r\n          dataSource={loosefillData}\r\n          fieldExpr=\"id\"\r\n          useColorAsDefault={true}\r\n          >\r\n        </Resource>\r\n        </Scheduler>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FillCalendar;","C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\hooks\\input-hook.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\SalesTemplate.js",["411","412"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesTooltip.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\FoamTemplate.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\FillTemplate.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\Tab.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FoamCalendar\\foamData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\FillCalendar\\fillData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\Components\\HomeTemplate\\SalesCalendar\\salesData.js",[],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\footer\\index.js",["413","414","415","416"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\pages\\headforquote\\index.js",["417"],"C:\\Users\\amill\\OneDrive\\Documents\\GitHub\\sodv2999_team_explorers\\src\\api\\quotes.js",["418"],"import ajax from \"./base\";\r\n\r\nconst baseURL = \"\";\r\n\r\nexport async function sendQuote(customer, email){\r\n    var to = customer;\r\n    var subject = \"Your quote with Rietzel Insulation\";\r\n    var html = email;\r\n\r\n    var completed = await ajax(\"/sendEmailHtml\", {to, subject, html}, \"post\");\r\n    if (completed !== []) return completed;\r\n    else return 0;\r\n }",{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":24,"column":1,"nodeType":"425","endLine":37,"endColumn":3},{"ruleId":"426","severity":1,"message":"427","line":10,"column":8,"nodeType":"428","messageId":"429","endLine":10,"endColumn":11},{"ruleId":"426","severity":1,"message":"430","line":24,"column":13,"nodeType":"428","messageId":"429","endLine":24,"endColumn":17},{"ruleId":"426","severity":1,"message":"431","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":25},{"ruleId":"426","severity":1,"message":"432","line":3,"column":7,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"433","line":64,"column":7,"nodeType":"428","messageId":"429","endLine":64,"endColumn":16},{"ruleId":"426","severity":1,"message":"434","line":15,"column":7,"nodeType":"428","messageId":"429","endLine":15,"endColumn":9},{"ruleId":"426","severity":1,"message":"435","line":2,"column":24,"nodeType":"428","messageId":"429","endLine":2,"endColumn":28},{"ruleId":"426","severity":1,"message":"436","line":2,"column":39,"nodeType":"428","messageId":"429","endLine":2,"endColumn":44},{"ruleId":"426","severity":1,"message":"437","line":2,"column":46,"nodeType":"428","messageId":"429","endLine":2,"endColumn":52},{"ruleId":"426","severity":1,"message":"438","line":3,"column":8,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"434","line":8,"column":7,"nodeType":"428","messageId":"429","endLine":8,"endColumn":9},{"ruleId":"426","severity":1,"message":"439","line":11,"column":10,"nodeType":"428","messageId":"429","endLine":11,"endColumn":22},{"ruleId":"426","severity":1,"message":"440","line":11,"column":24,"nodeType":"428","messageId":"429","endLine":11,"endColumn":39},{"ruleId":"441","severity":1,"message":"442","line":14,"column":24,"nodeType":"443","messageId":"444","endLine":14,"endColumn":26},{"ruleId":"426","severity":1,"message":"445","line":12,"column":16,"nodeType":"428","messageId":"429","endLine":12,"endColumn":23},{"ruleId":"426","severity":1,"message":"446","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":18},{"ruleId":"426","severity":1,"message":"447","line":2,"column":33,"nodeType":"428","messageId":"429","endLine":2,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":17,"column":33,"nodeType":"443","messageId":"444","endLine":17,"endColumn":35},{"ruleId":"441","severity":1,"message":"442","line":17,"column":47,"nodeType":"443","messageId":"444","endLine":17,"endColumn":49},{"ruleId":"441","severity":1,"message":"442","line":27,"column":33,"nodeType":"443","messageId":"444","endLine":27,"endColumn":35},{"ruleId":"441","severity":1,"message":"442","line":27,"column":47,"nodeType":"443","messageId":"444","endLine":27,"endColumn":49},{"ruleId":"426","severity":1,"message":"437","line":3,"column":51,"nodeType":"428","messageId":"429","endLine":3,"endColumn":57},{"ruleId":"426","severity":1,"message":"434","line":7,"column":7,"nodeType":"428","messageId":"429","endLine":7,"endColumn":9},{"ruleId":"426","severity":1,"message":"448","line":24,"column":10,"nodeType":"428","messageId":"429","endLine":24,"endColumn":22},{"ruleId":"426","severity":1,"message":"449","line":24,"column":24,"nodeType":"428","messageId":"429","endLine":24,"endColumn":39},{"ruleId":"426","severity":1,"message":"450","line":3,"column":20,"nodeType":"428","messageId":"429","endLine":3,"endColumn":31},{"ruleId":"426","severity":1,"message":"451","line":3,"column":64,"nodeType":"428","messageId":"429","endLine":3,"endColumn":80},{"ruleId":"426","severity":1,"message":"452","line":29,"column":9,"nodeType":"428","messageId":"429","endLine":29,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":34,"column":27,"nodeType":"443","messageId":"444","endLine":34,"endColumn":29},{"ruleId":"426","severity":1,"message":"453","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"454","line":4,"column":9,"nodeType":"428","messageId":"429","endLine":4,"endColumn":18},{"ruleId":"426","severity":1,"message":"455","line":5,"column":10,"nodeType":"428","messageId":"429","endLine":5,"endColumn":18},{"ruleId":"426","severity":1,"message":"456","line":5,"column":35,"nodeType":"428","messageId":"429","endLine":5,"endColumn":45},{"ruleId":"426","severity":1,"message":"457","line":7,"column":10,"nodeType":"428","messageId":"429","endLine":7,"endColumn":25},{"ruleId":"458","severity":1,"message":"459","line":47,"column":10,"nodeType":"460","endLine":47,"endColumn":12,"suggestions":"461"},{"ruleId":"441","severity":1,"message":"442","line":157,"column":27,"nodeType":"443","messageId":"444","endLine":157,"endColumn":29},{"ruleId":"426","severity":1,"message":"462","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":26},{"ruleId":"426","severity":1,"message":"463","line":4,"column":19,"nodeType":"428","messageId":"429","endLine":4,"endColumn":27},{"ruleId":"426","severity":1,"message":"464","line":18,"column":10,"nodeType":"428","messageId":"429","endLine":18,"endColumn":25},{"ruleId":"426","severity":1,"message":"465","line":18,"column":27,"nodeType":"428","messageId":"429","endLine":18,"endColumn":45},{"ruleId":"441","severity":1,"message":"442","line":97,"column":23,"nodeType":"443","messageId":"444","endLine":97,"endColumn":25},{"ruleId":"426","severity":1,"message":"466","line":104,"column":15,"nodeType":"428","messageId":"429","endLine":104,"endColumn":25},{"ruleId":"426","severity":1,"message":"467","line":107,"column":11,"nodeType":"428","messageId":"429","endLine":107,"endColumn":26},{"ruleId":"426","severity":1,"message":"468","line":113,"column":9,"nodeType":"428","messageId":"429","endLine":113,"endColumn":23},{"ruleId":"441","severity":1,"message":"469","line":124,"column":18,"nodeType":"443","messageId":"444","endLine":124,"endColumn":20},{"ruleId":"441","severity":1,"message":"469","line":124,"column":35,"nodeType":"443","messageId":"444","endLine":124,"endColumn":37},{"ruleId":"458","severity":1,"message":"470","line":127,"column":6,"nodeType":"460","endLine":127,"endColumn":8,"suggestions":"471"},{"ruleId":"441","severity":1,"message":"469","line":128,"column":12,"nodeType":"443","messageId":"444","endLine":128,"endColumn":14},{"ruleId":"426","severity":1,"message":"453","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"437","line":2,"column":23,"nodeType":"428","messageId":"429","endLine":2,"endColumn":29},{"ruleId":"426","severity":1,"message":"436","line":2,"column":31,"nodeType":"428","messageId":"429","endLine":2,"endColumn":36},{"ruleId":"426","severity":1,"message":"435","line":2,"column":38,"nodeType":"428","messageId":"429","endLine":2,"endColumn":42},{"ruleId":"426","severity":1,"message":"472","line":2,"column":44,"nodeType":"428","messageId":"429","endLine":2,"endColumn":49},{"ruleId":"426","severity":1,"message":"473","line":2,"column":51,"nodeType":"428","messageId":"429","endLine":2,"endColumn":58},{"ruleId":"426","severity":1,"message":"474","line":2,"column":60,"nodeType":"428","messageId":"429","endLine":2,"endColumn":66},{"ruleId":"426","severity":1,"message":"475","line":10,"column":10,"nodeType":"428","messageId":"429","endLine":10,"endColumn":20},{"ruleId":"426","severity":1,"message":"476","line":13,"column":5,"nodeType":"428","messageId":"429","endLine":13,"endColumn":9},{"ruleId":"458","severity":1,"message":"477","line":29,"column":10,"nodeType":"460","endLine":29,"endColumn":30,"suggestions":"478"},{"ruleId":"426","severity":1,"message":"479","line":20,"column":10,"nodeType":"428","messageId":"429","endLine":20,"endColumn":20},{"ruleId":"426","severity":1,"message":"480","line":20,"column":22,"nodeType":"428","messageId":"429","endLine":20,"endColumn":35},{"ruleId":"426","severity":1,"message":"481","line":22,"column":10,"nodeType":"428","messageId":"429","endLine":22,"endColumn":20},{"ruleId":"426","severity":1,"message":"482","line":22,"column":22,"nodeType":"428","messageId":"429","endLine":22,"endColumn":35},{"ruleId":"426","severity":1,"message":"483","line":1,"column":38,"nodeType":"428","messageId":"429","endLine":1,"endColumn":42},{"ruleId":"426","severity":1,"message":"484","line":2,"column":10,"nodeType":"428","messageId":"429","endLine":2,"endColumn":14},{"ruleId":"426","severity":1,"message":"436","line":2,"column":31,"nodeType":"428","messageId":"429","endLine":2,"endColumn":36},{"ruleId":"426","severity":1,"message":"472","line":2,"column":44,"nodeType":"428","messageId":"429","endLine":2,"endColumn":49},{"ruleId":"426","severity":1,"message":"473","line":2,"column":51,"nodeType":"428","messageId":"429","endLine":2,"endColumn":58},{"ruleId":"426","severity":1,"message":"474","line":2,"column":60,"nodeType":"428","messageId":"429","endLine":2,"endColumn":66},{"ruleId":"426","severity":1,"message":"485","line":3,"column":24,"nodeType":"428","messageId":"429","endLine":3,"endColumn":36},{"ruleId":"426","severity":1,"message":"486","line":9,"column":10,"nodeType":"428","messageId":"429","endLine":9,"endColumn":21},{"ruleId":"426","severity":1,"message":"487","line":9,"column":23,"nodeType":"428","messageId":"429","endLine":9,"endColumn":35},{"ruleId":"426","severity":1,"message":"488","line":10,"column":10,"nodeType":"428","messageId":"429","endLine":10,"endColumn":15},{"ruleId":"426","severity":1,"message":"489","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":12},{"ruleId":"426","severity":1,"message":"432","line":3,"column":7,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"432","line":3,"column":7,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"432","line":3,"column":7,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"490","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":26},{"ruleId":"491","severity":1,"message":"492","line":9,"column":5,"nodeType":"493","messageId":"494","endLine":11,"endColumn":8},{"ruleId":"426","severity":1,"message":"495","line":11,"column":8,"nodeType":"428","messageId":"429","endLine":11,"endColumn":13},{"ruleId":"426","severity":1,"message":"496","line":20,"column":11,"nodeType":"428","messageId":"429","endLine":20,"endColumn":15},{"ruleId":"426","severity":1,"message":"497","line":20,"column":17,"nodeType":"428","messageId":"429","endLine":20,"endColumn":20},{"ruleId":"426","severity":1,"message":"498","line":23,"column":12,"nodeType":"428","messageId":"429","endLine":23,"endColumn":17},{"ruleId":"426","severity":1,"message":"499","line":23,"column":19,"nodeType":"428","messageId":"429","endLine":23,"endColumn":23},{"ruleId":"426","severity":1,"message":"500","line":25,"column":11,"nodeType":"428","messageId":"429","endLine":25,"endColumn":15},{"ruleId":"458","severity":1,"message":"501","line":28,"column":9,"nodeType":"502","endLine":28,"endColumn":110},{"ruleId":"441","severity":1,"message":"442","line":28,"column":87,"nodeType":"443","messageId":"444","endLine":28,"endColumn":89},{"ruleId":"441","severity":1,"message":"442","line":31,"column":42,"nodeType":"443","messageId":"444","endLine":31,"endColumn":44},{"ruleId":"426","severity":1,"message":"503","line":35,"column":23,"nodeType":"428","messageId":"429","endLine":35,"endColumn":35},{"ruleId":"458","severity":1,"message":"504","line":40,"column":15,"nodeType":"505","endLine":58,"endColumn":10},{"ruleId":"426","severity":1,"message":"506","line":61,"column":58,"nodeType":"428","messageId":"429","endLine":61,"endColumn":72},{"ruleId":"426","severity":1,"message":"507","line":62,"column":56,"nodeType":"428","messageId":"429","endLine":62,"endColumn":69},{"ruleId":"426","severity":1,"message":"508","line":63,"column":68,"nodeType":"428","messageId":"429","endLine":63,"endColumn":87},{"ruleId":"426","severity":1,"message":"509","line":64,"column":48,"nodeType":"428","messageId":"429","endLine":64,"endColumn":57},{"ruleId":"426","severity":1,"message":"510","line":65,"column":56,"nodeType":"428","messageId":"429","endLine":65,"endColumn":69},{"ruleId":"426","severity":1,"message":"511","line":66,"column":62,"nodeType":"428","messageId":"429","endLine":66,"endColumn":78},{"ruleId":"426","severity":1,"message":"512","line":67,"column":50,"nodeType":"428","messageId":"429","endLine":67,"endColumn":60},{"ruleId":"426","severity":1,"message":"513","line":68,"column":66,"nodeType":"428","messageId":"429","endLine":68,"endColumn":84},{"ruleId":"426","severity":1,"message":"514","line":68,"column":99,"nodeType":"428","messageId":"429","endLine":68,"endColumn":118},{"ruleId":"426","severity":1,"message":"515","line":69,"column":68,"nodeType":"428","messageId":"429","endLine":69,"endColumn":87},{"ruleId":"426","severity":1,"message":"516","line":69,"column":102,"nodeType":"428","messageId":"429","endLine":69,"endColumn":122},{"ruleId":"426","severity":1,"message":"517","line":70,"column":56,"nodeType":"428","messageId":"429","endLine":70,"endColumn":69},{"ruleId":"426","severity":1,"message":"518","line":70,"column":84,"nodeType":"428","messageId":"429","endLine":70,"endColumn":98},{"ruleId":"426","severity":1,"message":"519","line":71,"column":48,"nodeType":"428","messageId":"429","endLine":71,"endColumn":57},{"ruleId":"426","severity":1,"message":"520","line":72,"column":34,"nodeType":"428","messageId":"429","endLine":72,"endColumn":45},{"ruleId":"426","severity":1,"message":"521","line":72,"column":54,"nodeType":"428","messageId":"429","endLine":72,"endColumn":66},{"ruleId":"426","severity":1,"message":"522","line":73,"column":31,"nodeType":"428","messageId":"429","endLine":73,"endColumn":39},{"ruleId":"426","severity":1,"message":"523","line":73,"column":48,"nodeType":"428","messageId":"429","endLine":73,"endColumn":57},{"ruleId":"426","severity":1,"message":"524","line":74,"column":54,"nodeType":"428","messageId":"429","endLine":74,"endColumn":66},{"ruleId":"525","severity":1,"message":"526","line":83,"column":9,"nodeType":"527","messageId":"444","endLine":83,"endColumn":15},{"ruleId":"525","severity":1,"message":"526","line":90,"column":9,"nodeType":"527","messageId":"444","endLine":90,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":96,"column":29,"nodeType":"443","messageId":"444","endLine":96,"endColumn":31},{"ruleId":"441","severity":1,"message":"442","line":96,"column":40,"nodeType":"443","messageId":"444","endLine":96,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":99,"column":70,"nodeType":"443","messageId":"444","endLine":99,"endColumn":72},{"ruleId":"426","severity":1,"message":"528","line":119,"column":12,"nodeType":"428","messageId":"429","endLine":119,"endColumn":22},{"ruleId":"426","severity":1,"message":"529","line":119,"column":24,"nodeType":"428","messageId":"429","endLine":119,"endColumn":37},{"ruleId":"426","severity":1,"message":"530","line":162,"column":11,"nodeType":"428","messageId":"429","endLine":162,"endColumn":28},{"ruleId":"525","severity":1,"message":"526","line":323,"column":13,"nodeType":"527","messageId":"444","endLine":323,"endColumn":19},{"ruleId":"426","severity":1,"message":"437","line":3,"column":8,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"531","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":18},{"ruleId":"426","severity":1,"message":"532","line":5,"column":10,"nodeType":"428","messageId":"429","endLine":5,"endColumn":21},{"ruleId":"426","severity":1,"message":"533","line":5,"column":23,"nodeType":"428","messageId":"429","endLine":5,"endColumn":34},{"ruleId":"426","severity":1,"message":"534","line":6,"column":8,"nodeType":"428","messageId":"429","endLine":6,"endColumn":20},{"ruleId":"426","severity":1,"message":"535","line":27,"column":7,"nodeType":"428","messageId":"429","endLine":27,"endColumn":12},{"ruleId":"458","severity":1,"message":"536","line":37,"column":7,"nodeType":"502","endLine":41,"endColumn":9},{"ruleId":"441","severity":1,"message":"442","line":39,"column":31,"nodeType":"443","messageId":"444","endLine":39,"endColumn":33},{"ruleId":"441","severity":1,"message":"442","line":43,"column":41,"nodeType":"443","messageId":"444","endLine":43,"endColumn":43},{"ruleId":"426","severity":1,"message":"537","line":47,"column":10,"nodeType":"428","messageId":"429","endLine":47,"endColumn":19},{"ruleId":"426","severity":1,"message":"538","line":53,"column":25,"nodeType":"428","messageId":"429","endLine":53,"endColumn":41},{"ruleId":"539","severity":1,"message":"540","line":143,"column":7,"nodeType":"541","endLine":146,"endColumn":8},{"ruleId":"426","severity":1,"message":"462","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":36},{"ruleId":"426","severity":1,"message":"542","line":3,"column":8,"nodeType":"428","messageId":"429","endLine":3,"endColumn":20},{"ruleId":"426","severity":1,"message":"437","line":4,"column":8,"nodeType":"428","messageId":"429","endLine":4,"endColumn":14},{"ruleId":"426","severity":1,"message":"436","line":5,"column":8,"nodeType":"428","messageId":"429","endLine":5,"endColumn":13},{"ruleId":"426","severity":1,"message":"543","line":6,"column":8,"nodeType":"428","messageId":"429","endLine":6,"endColumn":16},{"ruleId":"426","severity":1,"message":"495","line":7,"column":8,"nodeType":"428","messageId":"429","endLine":7,"endColumn":13},{"ruleId":"426","severity":1,"message":"544","line":13,"column":23,"nodeType":"428","messageId":"429","endLine":13,"endColumn":37},{"ruleId":"441","severity":1,"message":"442","line":19,"column":26,"nodeType":"443","messageId":"444","endLine":19,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":19,"column":37,"nodeType":"443","messageId":"444","endLine":19,"endColumn":39},{"ruleId":"441","severity":1,"message":"442","line":20,"column":56,"nodeType":"443","messageId":"444","endLine":20,"endColumn":58},{"ruleId":"426","severity":1,"message":"431","line":2,"column":17,"nodeType":"428","messageId":"429","endLine":2,"endColumn":25},{"ruleId":"426","severity":1,"message":"545","line":5,"column":9,"nodeType":"428","messageId":"429","endLine":5,"endColumn":20},{"ruleId":"426","severity":1,"message":"544","line":5,"column":22,"nodeType":"428","messageId":"429","endLine":5,"endColumn":36},{"ruleId":"426","severity":1,"message":"453","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":25},{"ruleId":"426","severity":1,"message":"431","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"462","line":1,"column":37,"nodeType":"428","messageId":"429","endLine":1,"endColumn":46},{"ruleId":"426","severity":1,"message":"546","line":7,"column":8,"nodeType":"428","messageId":"429","endLine":7,"endColumn":20},{"ruleId":"426","severity":1,"message":"437","line":10,"column":17,"nodeType":"428","messageId":"429","endLine":10,"endColumn":23},{"ruleId":"426","severity":1,"message":"547","line":10,"column":25,"nodeType":"428","messageId":"429","endLine":10,"endColumn":30},{"ruleId":"426","severity":1,"message":"548","line":11,"column":10,"nodeType":"428","messageId":"429","endLine":11,"endColumn":35},{"ruleId":"426","severity":1,"message":"549","line":86,"column":7,"nodeType":"428","messageId":"429","endLine":86,"endColumn":8},{"ruleId":"441","severity":1,"message":"442","line":149,"column":25,"nodeType":"443","messageId":"444","endLine":149,"endColumn":27},{"ruleId":"491","severity":1,"message":"492","line":16,"column":3,"nodeType":"493","messageId":"494","endLine":18,"endColumn":4},{"ruleId":"491","severity":1,"message":"492","line":16,"column":3,"nodeType":"493","messageId":"494","endLine":18,"endColumn":4},{"ruleId":"426","severity":1,"message":"550","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":13},{"ruleId":"426","severity":1,"message":"551","line":3,"column":9,"nodeType":"428","messageId":"429","endLine":3,"endColumn":21},{"ruleId":"426","severity":1,"message":"552","line":1,"column":10,"nodeType":"428","messageId":"429","endLine":1,"endColumn":16},{"ruleId":"553","severity":1,"message":"554","line":24,"column":9,"nodeType":"541","endLine":24,"endColumn":25},{"ruleId":"553","severity":1,"message":"554","line":25,"column":9,"nodeType":"541","endLine":25,"endColumn":28},{"ruleId":"553","severity":1,"message":"554","line":26,"column":9,"nodeType":"541","endLine":26,"endColumn":27},{"ruleId":"553","severity":1,"message":"554","line":8,"column":7,"nodeType":"541","endLine":8,"endColumn":47},{"ruleId":"426","severity":1,"message":"432","line":3,"column":7,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},"no-native-reassign",["555"],"no-negated-in-lhs",["556"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'jwt' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useState' is defined but never used.","'baseURL' is assigned a value but never used.","'condition' is assigned a value but never used.","'id' is assigned a value but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Orders' is defined but never used.","'newOrderShow' is assigned a value but never used.","'setNewOrderShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCity' is assigned a value but never used.","'manuList' is defined but never used.","'useParams' is defined but never used.","'selectedData' is assigned a value but never used.","'setselectedData' is assigned a value but never used.","'addEstimate' is defined but never used.","'getLatestAddress' is defined but never used.","'result' is assigned a value but never used.","'setState' is defined but never used.","'getRegion' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'PropertiesPanel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAddressList' and 'match'. Either include them or remove the dependency array.","ArrayExpression",["557"],"'useEffect' is defined but never used.","'getRoles' is defined but never used.","'selectedRowMenu' is assigned a value but never used.","'setselectedRowMenu' is assigned a value but never used.","'newAddress' is assigned a value but never used.","'siteAddressSent' is assigned a value but never used.","'estimateResult' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'regions' and 'salesmen'. Either include them or remove the dependency array.",["558"],"'Input' is defined but never used.","'message' is defined but never used.","'Select' is defined but never used.","'regionName' is assigned a value but never used.","'date' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuoteList', 'getRegionName', and 'match'. Either include them or remove the dependency array.",["559"],"'deleteShow' is assigned a value but never used.","'setdeleteShow' is assigned a value but never used.","'onSelected' is assigned a value but never used.","'setonSelected' is assigned a value but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'getAddresses' is defined but never used.","'addressList' is assigned a value but never used.","'setaddresses' is assigned a value but never used.","'form1' is assigned a value but never used.","'base' is defined but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'value' is assigned a value but never used.","'bind' is assigned a value but never used.","'data' is assigned a value but never used.","The 'selectedQuote' conditional could make the dependencies of useEffect Hook (at line 58) change on every render. To fix this, wrap the initialization of 'selectedQuote' in its own useMemo() Hook.","VariableDeclarator","'setQuoteData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'resetFirstName' is assigned a value but never used.","'resetLastName' is assigned a value but never used.","'resetBillingAddress' is assigned a value but never used.","'resetCity' is assigned a value but never used.","'resetPostCode' is assigned a value but never used.","'resetPhoneNumber' is assigned a value but never used.","'resetEmail' is assigned a value but never used.","'resetCustomerNotes' is assigned a value but never used.","'assignCustomerNotes' is assigned a value but never used.","'resetInstallerNotes' is assigned a value but never used.","'assignInstallerNotes' is assigned a value but never used.","'resetSalesman' is assigned a value but never used.","'assignSalesman' is assigned a value but never used.","'resetWsib' is assigned a value but never used.","'bindAccount' is assigned a value but never used.","'resetAccount' is assigned a value but never used.","'bindFirm' is assigned a value but never used.","'resetFirm' is assigned a value but never used.","'resetDetails' is assigned a value but never used.","no-dupe-keys","Duplicate key 'detail'.","ObjectExpression","'formSubmit' is assigned a value but never used.","'setFormSubmit' is assigned a value but never used.","'handleSubmitEvent' is assigned a value but never used.","'useInput' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'CustomSelect' is defined but never used.","'email' is assigned a value but never used.","The 'selectedQuote' conditional could make the dependencies of useEffect Hook (at line 51) change on every render. To fix this, wrap the initialization of 'selectedQuote' in its own useMemo() Hook.","'quoteData' is assigned a value but never used.","'setQuoteFormData' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ToggleSwitch' is defined but never used.","'QuoteOne' is defined but never used.","'setQuoteDataId' is assigned a value but never used.","'quoteDataId' is assigned a value but never used.","'SalesTooltip' is defined but never used.","'Space' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'r' is assigned a value but never used.","'Query' is defined but never used.","'salesmanData' is defined but never used.","'Center' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},"Update the dependencies array to be: [getAddressList, match]",{"range":"566","text":"567"},"Update the dependencies array to be: [regions, salesmen]",{"range":"568","text":"569"},"Update the dependencies array to be: [addressInfo.length, getQuoteList, getRegionName, match]",{"range":"570","text":"571"},[1829,1831],"[getAddressList, match]",[3826,3828],"[regions, salesmen]",[1164,1184],"[addressInfo.length, getQuoteList, getRegionName, match]"]